/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.adp.java;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class AdInfo implements org.apache.thrift.TBase<AdInfo, AdInfo._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AdInfo");

  private static final org.apache.thrift.protocol.TField ADID_FIELD_DESC = new org.apache.thrift.protocol.TField("adid", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField ADNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("adname", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField UID_FIELD_DESC = new org.apache.thrift.protocol.TField("uid", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField GROUP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("group_id", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField PLAN_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("plan_id", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField HAS_TEXT_FIELD_DESC = new org.apache.thrift.protocol.TField("has_text", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField WIDTH_FIELD_DESC = new org.apache.thrift.protocol.TField("width", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField HEIGHT_FIELD_DESC = new org.apache.thrift.protocol.TField("height", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField SHOW_JS_FIELD_DESC = new org.apache.thrift.protocol.TField("show_js", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField CLICK_JS_FIELD_DESC = new org.apache.thrift.protocol.TField("click_js", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField APPROVALDATE_FIELD_DESC = new org.apache.thrift.protocol.TField("approvaldate", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField PLAY_STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("play_status", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField MEDIA_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("media_type", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField CTIME_FIELD_DESC = new org.apache.thrift.protocol.TField("ctime", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField MTIME_FIELD_DESC = new org.apache.thrift.protocol.TField("mtime", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField AD_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("ad_price", org.apache.thrift.protocol.TType.DOUBLE, (short)16);
  private static final org.apache.thrift.protocol.TField AD_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("adType", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField COLUM1_FIELD_DESC = new org.apache.thrift.protocol.TField("colum1", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField COLUM2_FIELD_DESC = new org.apache.thrift.protocol.TField("colum2", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField MEDIA_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("media_name", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("version", org.apache.thrift.protocol.TType.I32, (short)21);
  private static final org.apache.thrift.protocol.TField TIME_INTERVAL_FIELD_DESC = new org.apache.thrift.protocol.TField("time_interval", org.apache.thrift.protocol.TType.I32, (short)22);
  private static final org.apache.thrift.protocol.TField DAY_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("day_num", org.apache.thrift.protocol.TType.I32, (short)23);
  private static final org.apache.thrift.protocol.TField SHOW_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("show_num", org.apache.thrift.protocol.TType.I32, (short)24);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AdInfoStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AdInfoTupleSchemeFactory());
  }

  public int adid; // required
  public String adname; // required
  public int uid; // required
  public int group_id; // required
  public int plan_id; // required
  public int has_text; // required
  public int width; // required
  public int height; // required
  public String show_js; // required
  public String click_js; // required
  public int approvaldate; // required
  /**
   * 
   * @see com.adp.java.PlanStatus
   */
  public com.adp.java.PlanStatus play_status; // required
  /**
   * 
   * @see com.adp.java.NetWorkType
   */
  public com.adp.java.NetWorkType media_type; // required
  public int ctime; // required
  public int mtime; // required
  public double ad_price; // required
  /**
   * 
   * @see com.adp.java.AdType
   */
  public com.adp.java.AdType adType; // required
  public int colum1; // required
  public String colum2; // required
  public String media_name; // required
  public int version; // required
  public int time_interval; // required
  public int day_num; // required
  public int show_num; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ADID((short)1, "adid"),
    ADNAME((short)2, "adname"),
    UID((short)3, "uid"),
    GROUP_ID((short)4, "group_id"),
    PLAN_ID((short)5, "plan_id"),
    HAS_TEXT((short)6, "has_text"),
    WIDTH((short)7, "width"),
    HEIGHT((short)8, "height"),
    SHOW_JS((short)9, "show_js"),
    CLICK_JS((short)10, "click_js"),
    APPROVALDATE((short)11, "approvaldate"),
    /**
     * 
     * @see com.adp.java.PlanStatus
     */
    PLAY_STATUS((short)12, "play_status"),
    /**
     * 
     * @see com.adp.java.NetWorkType
     */
    MEDIA_TYPE((short)13, "media_type"),
    CTIME((short)14, "ctime"),
    MTIME((short)15, "mtime"),
    AD_PRICE((short)16, "ad_price"),
    /**
     * 
     * @see com.adp.java.AdType
     */
    AD_TYPE((short)17, "adType"),
    COLUM1((short)18, "colum1"),
    COLUM2((short)19, "colum2"),
    MEDIA_NAME((short)20, "media_name"),
    VERSION((short)21, "version"),
    TIME_INTERVAL((short)22, "time_interval"),
    DAY_NUM((short)23, "day_num"),
    SHOW_NUM((short)24, "show_num");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ADID
          return ADID;
        case 2: // ADNAME
          return ADNAME;
        case 3: // UID
          return UID;
        case 4: // GROUP_ID
          return GROUP_ID;
        case 5: // PLAN_ID
          return PLAN_ID;
        case 6: // HAS_TEXT
          return HAS_TEXT;
        case 7: // WIDTH
          return WIDTH;
        case 8: // HEIGHT
          return HEIGHT;
        case 9: // SHOW_JS
          return SHOW_JS;
        case 10: // CLICK_JS
          return CLICK_JS;
        case 11: // APPROVALDATE
          return APPROVALDATE;
        case 12: // PLAY_STATUS
          return PLAY_STATUS;
        case 13: // MEDIA_TYPE
          return MEDIA_TYPE;
        case 14: // CTIME
          return CTIME;
        case 15: // MTIME
          return MTIME;
        case 16: // AD_PRICE
          return AD_PRICE;
        case 17: // AD_TYPE
          return AD_TYPE;
        case 18: // COLUM1
          return COLUM1;
        case 19: // COLUM2
          return COLUM2;
        case 20: // MEDIA_NAME
          return MEDIA_NAME;
        case 21: // VERSION
          return VERSION;
        case 22: // TIME_INTERVAL
          return TIME_INTERVAL;
        case 23: // DAY_NUM
          return DAY_NUM;
        case 24: // SHOW_NUM
          return SHOW_NUM;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ADID_ISSET_ID = 0;
  private static final int __UID_ISSET_ID = 1;
  private static final int __GROUP_ID_ISSET_ID = 2;
  private static final int __PLAN_ID_ISSET_ID = 3;
  private static final int __HAS_TEXT_ISSET_ID = 4;
  private static final int __WIDTH_ISSET_ID = 5;
  private static final int __HEIGHT_ISSET_ID = 6;
  private static final int __APPROVALDATE_ISSET_ID = 7;
  private static final int __CTIME_ISSET_ID = 8;
  private static final int __MTIME_ISSET_ID = 9;
  private static final int __AD_PRICE_ISSET_ID = 10;
  private static final int __COLUM1_ISSET_ID = 11;
  private static final int __VERSION_ISSET_ID = 12;
  private static final int __TIME_INTERVAL_ISSET_ID = 13;
  private static final int __DAY_NUM_ISSET_ID = 14;
  private static final int __SHOW_NUM_ISSET_ID = 15;
  private BitSet __isset_bit_vector = new BitSet(16);
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ADID, new org.apache.thrift.meta_data.FieldMetaData("adid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.ADNAME, new org.apache.thrift.meta_data.FieldMetaData("adname", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UID, new org.apache.thrift.meta_data.FieldMetaData("uid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.GROUP_ID, new org.apache.thrift.meta_data.FieldMetaData("group_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PLAN_ID, new org.apache.thrift.meta_data.FieldMetaData("plan_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HAS_TEXT, new org.apache.thrift.meta_data.FieldMetaData("has_text", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.WIDTH, new org.apache.thrift.meta_data.FieldMetaData("width", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HEIGHT, new org.apache.thrift.meta_data.FieldMetaData("height", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SHOW_JS, new org.apache.thrift.meta_data.FieldMetaData("show_js", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLICK_JS, new org.apache.thrift.meta_data.FieldMetaData("click_js", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.APPROVALDATE, new org.apache.thrift.meta_data.FieldMetaData("approvaldate", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PLAY_STATUS, new org.apache.thrift.meta_data.FieldMetaData("play_status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.adp.java.PlanStatus.class)));
    tmpMap.put(_Fields.MEDIA_TYPE, new org.apache.thrift.meta_data.FieldMetaData("media_type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.adp.java.NetWorkType.class)));
    tmpMap.put(_Fields.CTIME, new org.apache.thrift.meta_data.FieldMetaData("ctime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MTIME, new org.apache.thrift.meta_data.FieldMetaData("mtime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.AD_PRICE, new org.apache.thrift.meta_data.FieldMetaData("ad_price", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.AD_TYPE, new org.apache.thrift.meta_data.FieldMetaData("adType", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.adp.java.AdType.class)));
    tmpMap.put(_Fields.COLUM1, new org.apache.thrift.meta_data.FieldMetaData("colum1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COLUM2, new org.apache.thrift.meta_data.FieldMetaData("colum2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEDIA_NAME, new org.apache.thrift.meta_data.FieldMetaData("media_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.VERSION, new org.apache.thrift.meta_data.FieldMetaData("version", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TIME_INTERVAL, new org.apache.thrift.meta_data.FieldMetaData("time_interval", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DAY_NUM, new org.apache.thrift.meta_data.FieldMetaData("day_num", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SHOW_NUM, new org.apache.thrift.meta_data.FieldMetaData("show_num", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AdInfo.class, metaDataMap);
  }

  public AdInfo() {
    this.play_status = com.adp.java.PlanStatus.RUNNING;

    this.media_type = com.adp.java.NetWorkType.HARD_LINK;

    this.adType = com.adp.java.AdType.AD_QIANRU;

  }

  public AdInfo(
    int adid,
    String adname,
    int uid,
    int group_id,
    int plan_id,
    int has_text,
    int width,
    int height,
    String show_js,
    String click_js,
    int approvaldate,
    com.adp.java.PlanStatus play_status,
    com.adp.java.NetWorkType media_type,
    int ctime,
    int mtime,
    double ad_price,
    com.adp.java.AdType adType,
    int colum1,
    String colum2,
    String media_name,
    int version,
    int time_interval,
    int day_num,
    int show_num)
  {
    this();
    this.adid = adid;
    setAdidIsSet(true);
    this.adname = adname;
    this.uid = uid;
    setUidIsSet(true);
    this.group_id = group_id;
    setGroup_idIsSet(true);
    this.plan_id = plan_id;
    setPlan_idIsSet(true);
    this.has_text = has_text;
    setHas_textIsSet(true);
    this.width = width;
    setWidthIsSet(true);
    this.height = height;
    setHeightIsSet(true);
    this.show_js = show_js;
    this.click_js = click_js;
    this.approvaldate = approvaldate;
    setApprovaldateIsSet(true);
    this.play_status = play_status;
    this.media_type = media_type;
    this.ctime = ctime;
    setCtimeIsSet(true);
    this.mtime = mtime;
    setMtimeIsSet(true);
    this.ad_price = ad_price;
    setAd_priceIsSet(true);
    this.adType = adType;
    this.colum1 = colum1;
    setColum1IsSet(true);
    this.colum2 = colum2;
    this.media_name = media_name;
    this.version = version;
    setVersionIsSet(true);
    this.time_interval = time_interval;
    setTime_intervalIsSet(true);
    this.day_num = day_num;
    setDay_numIsSet(true);
    this.show_num = show_num;
    setShow_numIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AdInfo(AdInfo other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.adid = other.adid;
    if (other.isSetAdname()) {
      this.adname = other.adname;
    }
    this.uid = other.uid;
    this.group_id = other.group_id;
    this.plan_id = other.plan_id;
    this.has_text = other.has_text;
    this.width = other.width;
    this.height = other.height;
    if (other.isSetShow_js()) {
      this.show_js = other.show_js;
    }
    if (other.isSetClick_js()) {
      this.click_js = other.click_js;
    }
    this.approvaldate = other.approvaldate;
    if (other.isSetPlay_status()) {
      this.play_status = other.play_status;
    }
    if (other.isSetMedia_type()) {
      this.media_type = other.media_type;
    }
    this.ctime = other.ctime;
    this.mtime = other.mtime;
    this.ad_price = other.ad_price;
    if (other.isSetAdType()) {
      this.adType = other.adType;
    }
    this.colum1 = other.colum1;
    if (other.isSetColum2()) {
      this.colum2 = other.colum2;
    }
    if (other.isSetMedia_name()) {
      this.media_name = other.media_name;
    }
    this.version = other.version;
    this.time_interval = other.time_interval;
    this.day_num = other.day_num;
    this.show_num = other.show_num;
  }

  public AdInfo deepCopy() {
    return new AdInfo(this);
  }

  @Override
  public void clear() {
    setAdidIsSet(false);
    this.adid = 0;
    this.adname = null;
    setUidIsSet(false);
    this.uid = 0;
    setGroup_idIsSet(false);
    this.group_id = 0;
    setPlan_idIsSet(false);
    this.plan_id = 0;
    setHas_textIsSet(false);
    this.has_text = 0;
    setWidthIsSet(false);
    this.width = 0;
    setHeightIsSet(false);
    this.height = 0;
    this.show_js = null;
    this.click_js = null;
    setApprovaldateIsSet(false);
    this.approvaldate = 0;
    this.play_status = com.adp.java.PlanStatus.RUNNING;

    this.media_type = com.adp.java.NetWorkType.HARD_LINK;

    setCtimeIsSet(false);
    this.ctime = 0;
    setMtimeIsSet(false);
    this.mtime = 0;
    setAd_priceIsSet(false);
    this.ad_price = 0.0;
    this.adType = com.adp.java.AdType.AD_QIANRU;

    setColum1IsSet(false);
    this.colum1 = 0;
    this.colum2 = null;
    this.media_name = null;
    setVersionIsSet(false);
    this.version = 0;
    setTime_intervalIsSet(false);
    this.time_interval = 0;
    setDay_numIsSet(false);
    this.day_num = 0;
    setShow_numIsSet(false);
    this.show_num = 0;
  }

  public int getAdid() {
    return this.adid;
  }

  public AdInfo setAdid(int adid) {
    this.adid = adid;
    setAdidIsSet(true);
    return this;
  }

  public void unsetAdid() {
    __isset_bit_vector.clear(__ADID_ISSET_ID);
  }

  /** Returns true if field adid is set (has been assigned a value) and false otherwise */
  public boolean isSetAdid() {
    return __isset_bit_vector.get(__ADID_ISSET_ID);
  }

  public void setAdidIsSet(boolean value) {
    __isset_bit_vector.set(__ADID_ISSET_ID, value);
  }

  public String getAdname() {
    return this.adname;
  }

  public AdInfo setAdname(String adname) {
    this.adname = adname;
    return this;
  }

  public void unsetAdname() {
    this.adname = null;
  }

  /** Returns true if field adname is set (has been assigned a value) and false otherwise */
  public boolean isSetAdname() {
    return this.adname != null;
  }

  public void setAdnameIsSet(boolean value) {
    if (!value) {
      this.adname = null;
    }
  }

  public int getUid() {
    return this.uid;
  }

  public AdInfo setUid(int uid) {
    this.uid = uid;
    setUidIsSet(true);
    return this;
  }

  public void unsetUid() {
    __isset_bit_vector.clear(__UID_ISSET_ID);
  }

  /** Returns true if field uid is set (has been assigned a value) and false otherwise */
  public boolean isSetUid() {
    return __isset_bit_vector.get(__UID_ISSET_ID);
  }

  public void setUidIsSet(boolean value) {
    __isset_bit_vector.set(__UID_ISSET_ID, value);
  }

  public int getGroup_id() {
    return this.group_id;
  }

  public AdInfo setGroup_id(int group_id) {
    this.group_id = group_id;
    setGroup_idIsSet(true);
    return this;
  }

  public void unsetGroup_id() {
    __isset_bit_vector.clear(__GROUP_ID_ISSET_ID);
  }

  /** Returns true if field group_id is set (has been assigned a value) and false otherwise */
  public boolean isSetGroup_id() {
    return __isset_bit_vector.get(__GROUP_ID_ISSET_ID);
  }

  public void setGroup_idIsSet(boolean value) {
    __isset_bit_vector.set(__GROUP_ID_ISSET_ID, value);
  }

  public int getPlan_id() {
    return this.plan_id;
  }

  public AdInfo setPlan_id(int plan_id) {
    this.plan_id = plan_id;
    setPlan_idIsSet(true);
    return this;
  }

  public void unsetPlan_id() {
    __isset_bit_vector.clear(__PLAN_ID_ISSET_ID);
  }

  /** Returns true if field plan_id is set (has been assigned a value) and false otherwise */
  public boolean isSetPlan_id() {
    return __isset_bit_vector.get(__PLAN_ID_ISSET_ID);
  }

  public void setPlan_idIsSet(boolean value) {
    __isset_bit_vector.set(__PLAN_ID_ISSET_ID, value);
  }

  public int getHas_text() {
    return this.has_text;
  }

  public AdInfo setHas_text(int has_text) {
    this.has_text = has_text;
    setHas_textIsSet(true);
    return this;
  }

  public void unsetHas_text() {
    __isset_bit_vector.clear(__HAS_TEXT_ISSET_ID);
  }

  /** Returns true if field has_text is set (has been assigned a value) and false otherwise */
  public boolean isSetHas_text() {
    return __isset_bit_vector.get(__HAS_TEXT_ISSET_ID);
  }

  public void setHas_textIsSet(boolean value) {
    __isset_bit_vector.set(__HAS_TEXT_ISSET_ID, value);
  }

  public int getWidth() {
    return this.width;
  }

  public AdInfo setWidth(int width) {
    this.width = width;
    setWidthIsSet(true);
    return this;
  }

  public void unsetWidth() {
    __isset_bit_vector.clear(__WIDTH_ISSET_ID);
  }

  /** Returns true if field width is set (has been assigned a value) and false otherwise */
  public boolean isSetWidth() {
    return __isset_bit_vector.get(__WIDTH_ISSET_ID);
  }

  public void setWidthIsSet(boolean value) {
    __isset_bit_vector.set(__WIDTH_ISSET_ID, value);
  }

  public int getHeight() {
    return this.height;
  }

  public AdInfo setHeight(int height) {
    this.height = height;
    setHeightIsSet(true);
    return this;
  }

  public void unsetHeight() {
    __isset_bit_vector.clear(__HEIGHT_ISSET_ID);
  }

  /** Returns true if field height is set (has been assigned a value) and false otherwise */
  public boolean isSetHeight() {
    return __isset_bit_vector.get(__HEIGHT_ISSET_ID);
  }

  public void setHeightIsSet(boolean value) {
    __isset_bit_vector.set(__HEIGHT_ISSET_ID, value);
  }

  public String getShow_js() {
    return this.show_js;
  }

  public AdInfo setShow_js(String show_js) {
    this.show_js = show_js;
    return this;
  }

  public void unsetShow_js() {
    this.show_js = null;
  }

  /** Returns true if field show_js is set (has been assigned a value) and false otherwise */
  public boolean isSetShow_js() {
    return this.show_js != null;
  }

  public void setShow_jsIsSet(boolean value) {
    if (!value) {
      this.show_js = null;
    }
  }

  public String getClick_js() {
    return this.click_js;
  }

  public AdInfo setClick_js(String click_js) {
    this.click_js = click_js;
    return this;
  }

  public void unsetClick_js() {
    this.click_js = null;
  }

  /** Returns true if field click_js is set (has been assigned a value) and false otherwise */
  public boolean isSetClick_js() {
    return this.click_js != null;
  }

  public void setClick_jsIsSet(boolean value) {
    if (!value) {
      this.click_js = null;
    }
  }

  public int getApprovaldate() {
    return this.approvaldate;
  }

  public AdInfo setApprovaldate(int approvaldate) {
    this.approvaldate = approvaldate;
    setApprovaldateIsSet(true);
    return this;
  }

  public void unsetApprovaldate() {
    __isset_bit_vector.clear(__APPROVALDATE_ISSET_ID);
  }

  /** Returns true if field approvaldate is set (has been assigned a value) and false otherwise */
  public boolean isSetApprovaldate() {
    return __isset_bit_vector.get(__APPROVALDATE_ISSET_ID);
  }

  public void setApprovaldateIsSet(boolean value) {
    __isset_bit_vector.set(__APPROVALDATE_ISSET_ID, value);
  }

  /**
   * 
   * @see com.adp.java.PlanStatus
   */
  public com.adp.java.PlanStatus getPlay_status() {
    return this.play_status;
  }

  /**
   * 
   * @see com.adp.java.PlanStatus
   */
  public AdInfo setPlay_status(com.adp.java.PlanStatus play_status) {
    this.play_status = play_status;
    return this;
  }

  public void unsetPlay_status() {
    this.play_status = null;
  }

  /** Returns true if field play_status is set (has been assigned a value) and false otherwise */
  public boolean isSetPlay_status() {
    return this.play_status != null;
  }

  public void setPlay_statusIsSet(boolean value) {
    if (!value) {
      this.play_status = null;
    }
  }

  /**
   * 
   * @see com.adp.java.NetWorkType
   */
  public com.adp.java.NetWorkType getMedia_type() {
    return this.media_type;
  }

  /**
   * 
   * @see com.adp.java.NetWorkType
   */
  public AdInfo setMedia_type(com.adp.java.NetWorkType media_type) {
    this.media_type = media_type;
    return this;
  }

  public void unsetMedia_type() {
    this.media_type = null;
  }

  /** Returns true if field media_type is set (has been assigned a value) and false otherwise */
  public boolean isSetMedia_type() {
    return this.media_type != null;
  }

  public void setMedia_typeIsSet(boolean value) {
    if (!value) {
      this.media_type = null;
    }
  }

  public int getCtime() {
    return this.ctime;
  }

  public AdInfo setCtime(int ctime) {
    this.ctime = ctime;
    setCtimeIsSet(true);
    return this;
  }

  public void unsetCtime() {
    __isset_bit_vector.clear(__CTIME_ISSET_ID);
  }

  /** Returns true if field ctime is set (has been assigned a value) and false otherwise */
  public boolean isSetCtime() {
    return __isset_bit_vector.get(__CTIME_ISSET_ID);
  }

  public void setCtimeIsSet(boolean value) {
    __isset_bit_vector.set(__CTIME_ISSET_ID, value);
  }

  public int getMtime() {
    return this.mtime;
  }

  public AdInfo setMtime(int mtime) {
    this.mtime = mtime;
    setMtimeIsSet(true);
    return this;
  }

  public void unsetMtime() {
    __isset_bit_vector.clear(__MTIME_ISSET_ID);
  }

  /** Returns true if field mtime is set (has been assigned a value) and false otherwise */
  public boolean isSetMtime() {
    return __isset_bit_vector.get(__MTIME_ISSET_ID);
  }

  public void setMtimeIsSet(boolean value) {
    __isset_bit_vector.set(__MTIME_ISSET_ID, value);
  }

  public double getAd_price() {
    return this.ad_price;
  }

  public AdInfo setAd_price(double ad_price) {
    this.ad_price = ad_price;
    setAd_priceIsSet(true);
    return this;
  }

  public void unsetAd_price() {
    __isset_bit_vector.clear(__AD_PRICE_ISSET_ID);
  }

  /** Returns true if field ad_price is set (has been assigned a value) and false otherwise */
  public boolean isSetAd_price() {
    return __isset_bit_vector.get(__AD_PRICE_ISSET_ID);
  }

  public void setAd_priceIsSet(boolean value) {
    __isset_bit_vector.set(__AD_PRICE_ISSET_ID, value);
  }

  /**
   * 
   * @see com.adp.java.AdType
   */
  public com.adp.java.AdType getAdType() {
    return this.adType;
  }

  /**
   * 
   * @see com.adp.java.AdType
   */
  public AdInfo setAdType(com.adp.java.AdType adType) {
    this.adType = adType;
    return this;
  }

  public void unsetAdType() {
    this.adType = null;
  }

  /** Returns true if field adType is set (has been assigned a value) and false otherwise */
  public boolean isSetAdType() {
    return this.adType != null;
  }

  public void setAdTypeIsSet(boolean value) {
    if (!value) {
      this.adType = null;
    }
  }

  public int getColum1() {
    return this.colum1;
  }

  public AdInfo setColum1(int colum1) {
    this.colum1 = colum1;
    setColum1IsSet(true);
    return this;
  }

  public void unsetColum1() {
    __isset_bit_vector.clear(__COLUM1_ISSET_ID);
  }

  /** Returns true if field colum1 is set (has been assigned a value) and false otherwise */
  public boolean isSetColum1() {
    return __isset_bit_vector.get(__COLUM1_ISSET_ID);
  }

  public void setColum1IsSet(boolean value) {
    __isset_bit_vector.set(__COLUM1_ISSET_ID, value);
  }

  public String getColum2() {
    return this.colum2;
  }

  public AdInfo setColum2(String colum2) {
    this.colum2 = colum2;
    return this;
  }

  public void unsetColum2() {
    this.colum2 = null;
  }

  /** Returns true if field colum2 is set (has been assigned a value) and false otherwise */
  public boolean isSetColum2() {
    return this.colum2 != null;
  }

  public void setColum2IsSet(boolean value) {
    if (!value) {
      this.colum2 = null;
    }
  }

  public String getMedia_name() {
    return this.media_name;
  }

  public AdInfo setMedia_name(String media_name) {
    this.media_name = media_name;
    return this;
  }

  public void unsetMedia_name() {
    this.media_name = null;
  }

  /** Returns true if field media_name is set (has been assigned a value) and false otherwise */
  public boolean isSetMedia_name() {
    return this.media_name != null;
  }

  public void setMedia_nameIsSet(boolean value) {
    if (!value) {
      this.media_name = null;
    }
  }

  public int getVersion() {
    return this.version;
  }

  public AdInfo setVersion(int version) {
    this.version = version;
    setVersionIsSet(true);
    return this;
  }

  public void unsetVersion() {
    __isset_bit_vector.clear(__VERSION_ISSET_ID);
  }

  /** Returns true if field version is set (has been assigned a value) and false otherwise */
  public boolean isSetVersion() {
    return __isset_bit_vector.get(__VERSION_ISSET_ID);
  }

  public void setVersionIsSet(boolean value) {
    __isset_bit_vector.set(__VERSION_ISSET_ID, value);
  }

  public int getTime_interval() {
    return this.time_interval;
  }

  public AdInfo setTime_interval(int time_interval) {
    this.time_interval = time_interval;
    setTime_intervalIsSet(true);
    return this;
  }

  public void unsetTime_interval() {
    __isset_bit_vector.clear(__TIME_INTERVAL_ISSET_ID);
  }

  /** Returns true if field time_interval is set (has been assigned a value) and false otherwise */
  public boolean isSetTime_interval() {
    return __isset_bit_vector.get(__TIME_INTERVAL_ISSET_ID);
  }

  public void setTime_intervalIsSet(boolean value) {
    __isset_bit_vector.set(__TIME_INTERVAL_ISSET_ID, value);
  }

  public int getDay_num() {
    return this.day_num;
  }

  public AdInfo setDay_num(int day_num) {
    this.day_num = day_num;
    setDay_numIsSet(true);
    return this;
  }

  public void unsetDay_num() {
    __isset_bit_vector.clear(__DAY_NUM_ISSET_ID);
  }

  /** Returns true if field day_num is set (has been assigned a value) and false otherwise */
  public boolean isSetDay_num() {
    return __isset_bit_vector.get(__DAY_NUM_ISSET_ID);
  }

  public void setDay_numIsSet(boolean value) {
    __isset_bit_vector.set(__DAY_NUM_ISSET_ID, value);
  }

  public int getShow_num() {
    return this.show_num;
  }

  public AdInfo setShow_num(int show_num) {
    this.show_num = show_num;
    setShow_numIsSet(true);
    return this;
  }

  public void unsetShow_num() {
    __isset_bit_vector.clear(__SHOW_NUM_ISSET_ID);
  }

  /** Returns true if field show_num is set (has been assigned a value) and false otherwise */
  public boolean isSetShow_num() {
    return __isset_bit_vector.get(__SHOW_NUM_ISSET_ID);
  }

  public void setShow_numIsSet(boolean value) {
    __isset_bit_vector.set(__SHOW_NUM_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ADID:
      if (value == null) {
        unsetAdid();
      } else {
        setAdid((Integer)value);
      }
      break;

    case ADNAME:
      if (value == null) {
        unsetAdname();
      } else {
        setAdname((String)value);
      }
      break;

    case UID:
      if (value == null) {
        unsetUid();
      } else {
        setUid((Integer)value);
      }
      break;

    case GROUP_ID:
      if (value == null) {
        unsetGroup_id();
      } else {
        setGroup_id((Integer)value);
      }
      break;

    case PLAN_ID:
      if (value == null) {
        unsetPlan_id();
      } else {
        setPlan_id((Integer)value);
      }
      break;

    case HAS_TEXT:
      if (value == null) {
        unsetHas_text();
      } else {
        setHas_text((Integer)value);
      }
      break;

    case WIDTH:
      if (value == null) {
        unsetWidth();
      } else {
        setWidth((Integer)value);
      }
      break;

    case HEIGHT:
      if (value == null) {
        unsetHeight();
      } else {
        setHeight((Integer)value);
      }
      break;

    case SHOW_JS:
      if (value == null) {
        unsetShow_js();
      } else {
        setShow_js((String)value);
      }
      break;

    case CLICK_JS:
      if (value == null) {
        unsetClick_js();
      } else {
        setClick_js((String)value);
      }
      break;

    case APPROVALDATE:
      if (value == null) {
        unsetApprovaldate();
      } else {
        setApprovaldate((Integer)value);
      }
      break;

    case PLAY_STATUS:
      if (value == null) {
        unsetPlay_status();
      } else {
        setPlay_status((com.adp.java.PlanStatus)value);
      }
      break;

    case MEDIA_TYPE:
      if (value == null) {
        unsetMedia_type();
      } else {
        setMedia_type((com.adp.java.NetWorkType)value);
      }
      break;

    case CTIME:
      if (value == null) {
        unsetCtime();
      } else {
        setCtime((Integer)value);
      }
      break;

    case MTIME:
      if (value == null) {
        unsetMtime();
      } else {
        setMtime((Integer)value);
      }
      break;

    case AD_PRICE:
      if (value == null) {
        unsetAd_price();
      } else {
        setAd_price((Double)value);
      }
      break;

    case AD_TYPE:
      if (value == null) {
        unsetAdType();
      } else {
        setAdType((com.adp.java.AdType)value);
      }
      break;

    case COLUM1:
      if (value == null) {
        unsetColum1();
      } else {
        setColum1((Integer)value);
      }
      break;

    case COLUM2:
      if (value == null) {
        unsetColum2();
      } else {
        setColum2((String)value);
      }
      break;

    case MEDIA_NAME:
      if (value == null) {
        unsetMedia_name();
      } else {
        setMedia_name((String)value);
      }
      break;

    case VERSION:
      if (value == null) {
        unsetVersion();
      } else {
        setVersion((Integer)value);
      }
      break;

    case TIME_INTERVAL:
      if (value == null) {
        unsetTime_interval();
      } else {
        setTime_interval((Integer)value);
      }
      break;

    case DAY_NUM:
      if (value == null) {
        unsetDay_num();
      } else {
        setDay_num((Integer)value);
      }
      break;

    case SHOW_NUM:
      if (value == null) {
        unsetShow_num();
      } else {
        setShow_num((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ADID:
      return Integer.valueOf(getAdid());

    case ADNAME:
      return getAdname();

    case UID:
      return Integer.valueOf(getUid());

    case GROUP_ID:
      return Integer.valueOf(getGroup_id());

    case PLAN_ID:
      return Integer.valueOf(getPlan_id());

    case HAS_TEXT:
      return Integer.valueOf(getHas_text());

    case WIDTH:
      return Integer.valueOf(getWidth());

    case HEIGHT:
      return Integer.valueOf(getHeight());

    case SHOW_JS:
      return getShow_js();

    case CLICK_JS:
      return getClick_js();

    case APPROVALDATE:
      return Integer.valueOf(getApprovaldate());

    case PLAY_STATUS:
      return getPlay_status();

    case MEDIA_TYPE:
      return getMedia_type();

    case CTIME:
      return Integer.valueOf(getCtime());

    case MTIME:
      return Integer.valueOf(getMtime());

    case AD_PRICE:
      return Double.valueOf(getAd_price());

    case AD_TYPE:
      return getAdType();

    case COLUM1:
      return Integer.valueOf(getColum1());

    case COLUM2:
      return getColum2();

    case MEDIA_NAME:
      return getMedia_name();

    case VERSION:
      return Integer.valueOf(getVersion());

    case TIME_INTERVAL:
      return Integer.valueOf(getTime_interval());

    case DAY_NUM:
      return Integer.valueOf(getDay_num());

    case SHOW_NUM:
      return Integer.valueOf(getShow_num());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ADID:
      return isSetAdid();
    case ADNAME:
      return isSetAdname();
    case UID:
      return isSetUid();
    case GROUP_ID:
      return isSetGroup_id();
    case PLAN_ID:
      return isSetPlan_id();
    case HAS_TEXT:
      return isSetHas_text();
    case WIDTH:
      return isSetWidth();
    case HEIGHT:
      return isSetHeight();
    case SHOW_JS:
      return isSetShow_js();
    case CLICK_JS:
      return isSetClick_js();
    case APPROVALDATE:
      return isSetApprovaldate();
    case PLAY_STATUS:
      return isSetPlay_status();
    case MEDIA_TYPE:
      return isSetMedia_type();
    case CTIME:
      return isSetCtime();
    case MTIME:
      return isSetMtime();
    case AD_PRICE:
      return isSetAd_price();
    case AD_TYPE:
      return isSetAdType();
    case COLUM1:
      return isSetColum1();
    case COLUM2:
      return isSetColum2();
    case MEDIA_NAME:
      return isSetMedia_name();
    case VERSION:
      return isSetVersion();
    case TIME_INTERVAL:
      return isSetTime_interval();
    case DAY_NUM:
      return isSetDay_num();
    case SHOW_NUM:
      return isSetShow_num();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AdInfo)
      return this.equals((AdInfo)that);
    return false;
  }

  public boolean equals(AdInfo that) {
    if (that == null)
      return false;

    boolean this_present_adid = true;
    boolean that_present_adid = true;
    if (this_present_adid || that_present_adid) {
      if (!(this_present_adid && that_present_adid))
        return false;
      if (this.adid != that.adid)
        return false;
    }

    boolean this_present_adname = true && this.isSetAdname();
    boolean that_present_adname = true && that.isSetAdname();
    if (this_present_adname || that_present_adname) {
      if (!(this_present_adname && that_present_adname))
        return false;
      if (!this.adname.equals(that.adname))
        return false;
    }

    boolean this_present_uid = true;
    boolean that_present_uid = true;
    if (this_present_uid || that_present_uid) {
      if (!(this_present_uid && that_present_uid))
        return false;
      if (this.uid != that.uid)
        return false;
    }

    boolean this_present_group_id = true;
    boolean that_present_group_id = true;
    if (this_present_group_id || that_present_group_id) {
      if (!(this_present_group_id && that_present_group_id))
        return false;
      if (this.group_id != that.group_id)
        return false;
    }

    boolean this_present_plan_id = true;
    boolean that_present_plan_id = true;
    if (this_present_plan_id || that_present_plan_id) {
      if (!(this_present_plan_id && that_present_plan_id))
        return false;
      if (this.plan_id != that.plan_id)
        return false;
    }

    boolean this_present_has_text = true;
    boolean that_present_has_text = true;
    if (this_present_has_text || that_present_has_text) {
      if (!(this_present_has_text && that_present_has_text))
        return false;
      if (this.has_text != that.has_text)
        return false;
    }

    boolean this_present_width = true;
    boolean that_present_width = true;
    if (this_present_width || that_present_width) {
      if (!(this_present_width && that_present_width))
        return false;
      if (this.width != that.width)
        return false;
    }

    boolean this_present_height = true;
    boolean that_present_height = true;
    if (this_present_height || that_present_height) {
      if (!(this_present_height && that_present_height))
        return false;
      if (this.height != that.height)
        return false;
    }

    boolean this_present_show_js = true && this.isSetShow_js();
    boolean that_present_show_js = true && that.isSetShow_js();
    if (this_present_show_js || that_present_show_js) {
      if (!(this_present_show_js && that_present_show_js))
        return false;
      if (!this.show_js.equals(that.show_js))
        return false;
    }

    boolean this_present_click_js = true && this.isSetClick_js();
    boolean that_present_click_js = true && that.isSetClick_js();
    if (this_present_click_js || that_present_click_js) {
      if (!(this_present_click_js && that_present_click_js))
        return false;
      if (!this.click_js.equals(that.click_js))
        return false;
    }

    boolean this_present_approvaldate = true;
    boolean that_present_approvaldate = true;
    if (this_present_approvaldate || that_present_approvaldate) {
      if (!(this_present_approvaldate && that_present_approvaldate))
        return false;
      if (this.approvaldate != that.approvaldate)
        return false;
    }

    boolean this_present_play_status = true && this.isSetPlay_status();
    boolean that_present_play_status = true && that.isSetPlay_status();
    if (this_present_play_status || that_present_play_status) {
      if (!(this_present_play_status && that_present_play_status))
        return false;
      if (!this.play_status.equals(that.play_status))
        return false;
    }

    boolean this_present_media_type = true && this.isSetMedia_type();
    boolean that_present_media_type = true && that.isSetMedia_type();
    if (this_present_media_type || that_present_media_type) {
      if (!(this_present_media_type && that_present_media_type))
        return false;
      if (!this.media_type.equals(that.media_type))
        return false;
    }

    boolean this_present_ctime = true;
    boolean that_present_ctime = true;
    if (this_present_ctime || that_present_ctime) {
      if (!(this_present_ctime && that_present_ctime))
        return false;
      if (this.ctime != that.ctime)
        return false;
    }

    boolean this_present_mtime = true;
    boolean that_present_mtime = true;
    if (this_present_mtime || that_present_mtime) {
      if (!(this_present_mtime && that_present_mtime))
        return false;
      if (this.mtime != that.mtime)
        return false;
    }

    boolean this_present_ad_price = true;
    boolean that_present_ad_price = true;
    if (this_present_ad_price || that_present_ad_price) {
      if (!(this_present_ad_price && that_present_ad_price))
        return false;
      if (this.ad_price != that.ad_price)
        return false;
    }

    boolean this_present_adType = true && this.isSetAdType();
    boolean that_present_adType = true && that.isSetAdType();
    if (this_present_adType || that_present_adType) {
      if (!(this_present_adType && that_present_adType))
        return false;
      if (!this.adType.equals(that.adType))
        return false;
    }

    boolean this_present_colum1 = true;
    boolean that_present_colum1 = true;
    if (this_present_colum1 || that_present_colum1) {
      if (!(this_present_colum1 && that_present_colum1))
        return false;
      if (this.colum1 != that.colum1)
        return false;
    }

    boolean this_present_colum2 = true && this.isSetColum2();
    boolean that_present_colum2 = true && that.isSetColum2();
    if (this_present_colum2 || that_present_colum2) {
      if (!(this_present_colum2 && that_present_colum2))
        return false;
      if (!this.colum2.equals(that.colum2))
        return false;
    }

    boolean this_present_media_name = true && this.isSetMedia_name();
    boolean that_present_media_name = true && that.isSetMedia_name();
    if (this_present_media_name || that_present_media_name) {
      if (!(this_present_media_name && that_present_media_name))
        return false;
      if (!this.media_name.equals(that.media_name))
        return false;
    }

    boolean this_present_version = true;
    boolean that_present_version = true;
    if (this_present_version || that_present_version) {
      if (!(this_present_version && that_present_version))
        return false;
      if (this.version != that.version)
        return false;
    }

    boolean this_present_time_interval = true;
    boolean that_present_time_interval = true;
    if (this_present_time_interval || that_present_time_interval) {
      if (!(this_present_time_interval && that_present_time_interval))
        return false;
      if (this.time_interval != that.time_interval)
        return false;
    }

    boolean this_present_day_num = true;
    boolean that_present_day_num = true;
    if (this_present_day_num || that_present_day_num) {
      if (!(this_present_day_num && that_present_day_num))
        return false;
      if (this.day_num != that.day_num)
        return false;
    }

    boolean this_present_show_num = true;
    boolean that_present_show_num = true;
    if (this_present_show_num || that_present_show_num) {
      if (!(this_present_show_num && that_present_show_num))
        return false;
      if (this.show_num != that.show_num)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(AdInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    AdInfo typedOther = (AdInfo)other;

    lastComparison = Boolean.valueOf(isSetAdid()).compareTo(typedOther.isSetAdid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adid, typedOther.adid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdname()).compareTo(typedOther.isSetAdname());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdname()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adname, typedOther.adname);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUid()).compareTo(typedOther.isSetUid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uid, typedOther.uid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGroup_id()).compareTo(typedOther.isSetGroup_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGroup_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.group_id, typedOther.group_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlan_id()).compareTo(typedOther.isSetPlan_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlan_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.plan_id, typedOther.plan_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHas_text()).compareTo(typedOther.isSetHas_text());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHas_text()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.has_text, typedOther.has_text);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWidth()).compareTo(typedOther.isSetWidth());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWidth()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.width, typedOther.width);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHeight()).compareTo(typedOther.isSetHeight());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHeight()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.height, typedOther.height);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShow_js()).compareTo(typedOther.isSetShow_js());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShow_js()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.show_js, typedOther.show_js);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClick_js()).compareTo(typedOther.isSetClick_js());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClick_js()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.click_js, typedOther.click_js);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetApprovaldate()).compareTo(typedOther.isSetApprovaldate());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetApprovaldate()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.approvaldate, typedOther.approvaldate);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlay_status()).compareTo(typedOther.isSetPlay_status());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlay_status()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.play_status, typedOther.play_status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMedia_type()).compareTo(typedOther.isSetMedia_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMedia_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.media_type, typedOther.media_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCtime()).compareTo(typedOther.isSetCtime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCtime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ctime, typedOther.ctime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMtime()).compareTo(typedOther.isSetMtime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMtime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mtime, typedOther.mtime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAd_price()).compareTo(typedOther.isSetAd_price());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAd_price()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ad_price, typedOther.ad_price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdType()).compareTo(typedOther.isSetAdType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adType, typedOther.adType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetColum1()).compareTo(typedOther.isSetColum1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetColum1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.colum1, typedOther.colum1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetColum2()).compareTo(typedOther.isSetColum2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetColum2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.colum2, typedOther.colum2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMedia_name()).compareTo(typedOther.isSetMedia_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMedia_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.media_name, typedOther.media_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVersion()).compareTo(typedOther.isSetVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.version, typedOther.version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTime_interval()).compareTo(typedOther.isSetTime_interval());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTime_interval()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.time_interval, typedOther.time_interval);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDay_num()).compareTo(typedOther.isSetDay_num());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDay_num()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.day_num, typedOther.day_num);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShow_num()).compareTo(typedOther.isSetShow_num());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShow_num()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.show_num, typedOther.show_num);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AdInfo(");
    boolean first = true;

    sb.append("adid:");
    sb.append(this.adid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("adname:");
    if (this.adname == null) {
      sb.append("null");
    } else {
      sb.append(this.adname);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("uid:");
    sb.append(this.uid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("group_id:");
    sb.append(this.group_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("plan_id:");
    sb.append(this.plan_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("has_text:");
    sb.append(this.has_text);
    first = false;
    if (!first) sb.append(", ");
    sb.append("width:");
    sb.append(this.width);
    first = false;
    if (!first) sb.append(", ");
    sb.append("height:");
    sb.append(this.height);
    first = false;
    if (!first) sb.append(", ");
    sb.append("show_js:");
    if (this.show_js == null) {
      sb.append("null");
    } else {
      sb.append(this.show_js);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("click_js:");
    if (this.click_js == null) {
      sb.append("null");
    } else {
      sb.append(this.click_js);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("approvaldate:");
    sb.append(this.approvaldate);
    first = false;
    if (!first) sb.append(", ");
    sb.append("play_status:");
    if (this.play_status == null) {
      sb.append("null");
    } else {
      sb.append(this.play_status);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("media_type:");
    if (this.media_type == null) {
      sb.append("null");
    } else {
      sb.append(this.media_type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ctime:");
    sb.append(this.ctime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("mtime:");
    sb.append(this.mtime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("ad_price:");
    sb.append(this.ad_price);
    first = false;
    if (!first) sb.append(", ");
    sb.append("adType:");
    if (this.adType == null) {
      sb.append("null");
    } else {
      sb.append(this.adType);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("colum1:");
    sb.append(this.colum1);
    first = false;
    if (!first) sb.append(", ");
    sb.append("colum2:");
    if (this.colum2 == null) {
      sb.append("null");
    } else {
      sb.append(this.colum2);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("media_name:");
    if (this.media_name == null) {
      sb.append("null");
    } else {
      sb.append(this.media_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("version:");
    sb.append(this.version);
    first = false;
    if (!first) sb.append(", ");
    sb.append("time_interval:");
    sb.append(this.time_interval);
    first = false;
    if (!first) sb.append(", ");
    sb.append("day_num:");
    sb.append(this.day_num);
    first = false;
    if (!first) sb.append(", ");
    sb.append("show_num:");
    sb.append(this.show_num);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AdInfoStandardSchemeFactory implements SchemeFactory {
    public AdInfoStandardScheme getScheme() {
      return new AdInfoStandardScheme();
    }
  }

  private static class AdInfoStandardScheme extends StandardScheme<AdInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AdInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ADID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.adid = iprot.readI32();
              struct.setAdidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ADNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.adname = iprot.readString();
              struct.setAdnameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // UID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.uid = iprot.readI32();
              struct.setUidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // GROUP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.group_id = iprot.readI32();
              struct.setGroup_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PLAN_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.plan_id = iprot.readI32();
              struct.setPlan_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // HAS_TEXT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.has_text = iprot.readI32();
              struct.setHas_textIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // WIDTH
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.width = iprot.readI32();
              struct.setWidthIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // HEIGHT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.height = iprot.readI32();
              struct.setHeightIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SHOW_JS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.show_js = iprot.readString();
              struct.setShow_jsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CLICK_JS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.click_js = iprot.readString();
              struct.setClick_jsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // APPROVALDATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.approvaldate = iprot.readI32();
              struct.setApprovaldateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // PLAY_STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.play_status = com.adp.java.PlanStatus.findByValue(iprot.readI32());
              struct.setPlay_statusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // MEDIA_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.media_type = com.adp.java.NetWorkType.findByValue(iprot.readI32());
              struct.setMedia_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CTIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ctime = iprot.readI32();
              struct.setCtimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // MTIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.mtime = iprot.readI32();
              struct.setMtimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // AD_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.ad_price = iprot.readDouble();
              struct.setAd_priceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // AD_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.adType = com.adp.java.AdType.findByValue(iprot.readI32());
              struct.setAdTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // COLUM1
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.colum1 = iprot.readI32();
              struct.setColum1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // COLUM2
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.colum2 = iprot.readString();
              struct.setColum2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // MEDIA_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.media_name = iprot.readString();
              struct.setMedia_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.version = iprot.readI32();
              struct.setVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // TIME_INTERVAL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.time_interval = iprot.readI32();
              struct.setTime_intervalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // DAY_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.day_num = iprot.readI32();
              struct.setDay_numIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // SHOW_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.show_num = iprot.readI32();
              struct.setShow_numIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AdInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ADID_FIELD_DESC);
      oprot.writeI32(struct.adid);
      oprot.writeFieldEnd();
      if (struct.adname != null) {
        oprot.writeFieldBegin(ADNAME_FIELD_DESC);
        oprot.writeString(struct.adname);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(UID_FIELD_DESC);
      oprot.writeI32(struct.uid);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(GROUP_ID_FIELD_DESC);
      oprot.writeI32(struct.group_id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PLAN_ID_FIELD_DESC);
      oprot.writeI32(struct.plan_id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(HAS_TEXT_FIELD_DESC);
      oprot.writeI32(struct.has_text);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(WIDTH_FIELD_DESC);
      oprot.writeI32(struct.width);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(HEIGHT_FIELD_DESC);
      oprot.writeI32(struct.height);
      oprot.writeFieldEnd();
      if (struct.show_js != null) {
        oprot.writeFieldBegin(SHOW_JS_FIELD_DESC);
        oprot.writeString(struct.show_js);
        oprot.writeFieldEnd();
      }
      if (struct.click_js != null) {
        oprot.writeFieldBegin(CLICK_JS_FIELD_DESC);
        oprot.writeString(struct.click_js);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(APPROVALDATE_FIELD_DESC);
      oprot.writeI32(struct.approvaldate);
      oprot.writeFieldEnd();
      if (struct.play_status != null) {
        oprot.writeFieldBegin(PLAY_STATUS_FIELD_DESC);
        oprot.writeI32(struct.play_status.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.media_type != null) {
        oprot.writeFieldBegin(MEDIA_TYPE_FIELD_DESC);
        oprot.writeI32(struct.media_type.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CTIME_FIELD_DESC);
      oprot.writeI32(struct.ctime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MTIME_FIELD_DESC);
      oprot.writeI32(struct.mtime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(AD_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.ad_price);
      oprot.writeFieldEnd();
      if (struct.adType != null) {
        oprot.writeFieldBegin(AD_TYPE_FIELD_DESC);
        oprot.writeI32(struct.adType.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(COLUM1_FIELD_DESC);
      oprot.writeI32(struct.colum1);
      oprot.writeFieldEnd();
      if (struct.colum2 != null) {
        oprot.writeFieldBegin(COLUM2_FIELD_DESC);
        oprot.writeString(struct.colum2);
        oprot.writeFieldEnd();
      }
      if (struct.media_name != null) {
        oprot.writeFieldBegin(MEDIA_NAME_FIELD_DESC);
        oprot.writeString(struct.media_name);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(VERSION_FIELD_DESC);
      oprot.writeI32(struct.version);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TIME_INTERVAL_FIELD_DESC);
      oprot.writeI32(struct.time_interval);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DAY_NUM_FIELD_DESC);
      oprot.writeI32(struct.day_num);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SHOW_NUM_FIELD_DESC);
      oprot.writeI32(struct.show_num);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AdInfoTupleSchemeFactory implements SchemeFactory {
    public AdInfoTupleScheme getScheme() {
      return new AdInfoTupleScheme();
    }
  }

  private static class AdInfoTupleScheme extends TupleScheme<AdInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AdInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAdid()) {
        optionals.set(0);
      }
      if (struct.isSetAdname()) {
        optionals.set(1);
      }
      if (struct.isSetUid()) {
        optionals.set(2);
      }
      if (struct.isSetGroup_id()) {
        optionals.set(3);
      }
      if (struct.isSetPlan_id()) {
        optionals.set(4);
      }
      if (struct.isSetHas_text()) {
        optionals.set(5);
      }
      if (struct.isSetWidth()) {
        optionals.set(6);
      }
      if (struct.isSetHeight()) {
        optionals.set(7);
      }
      if (struct.isSetShow_js()) {
        optionals.set(8);
      }
      if (struct.isSetClick_js()) {
        optionals.set(9);
      }
      if (struct.isSetApprovaldate()) {
        optionals.set(10);
      }
      if (struct.isSetPlay_status()) {
        optionals.set(11);
      }
      if (struct.isSetMedia_type()) {
        optionals.set(12);
      }
      if (struct.isSetCtime()) {
        optionals.set(13);
      }
      if (struct.isSetMtime()) {
        optionals.set(14);
      }
      if (struct.isSetAd_price()) {
        optionals.set(15);
      }
      if (struct.isSetAdType()) {
        optionals.set(16);
      }
      if (struct.isSetColum1()) {
        optionals.set(17);
      }
      if (struct.isSetColum2()) {
        optionals.set(18);
      }
      if (struct.isSetMedia_name()) {
        optionals.set(19);
      }
      if (struct.isSetVersion()) {
        optionals.set(20);
      }
      if (struct.isSetTime_interval()) {
        optionals.set(21);
      }
      if (struct.isSetDay_num()) {
        optionals.set(22);
      }
      if (struct.isSetShow_num()) {
        optionals.set(23);
      }
      oprot.writeBitSet(optionals, 24);
      if (struct.isSetAdid()) {
        oprot.writeI32(struct.adid);
      }
      if (struct.isSetAdname()) {
        oprot.writeString(struct.adname);
      }
      if (struct.isSetUid()) {
        oprot.writeI32(struct.uid);
      }
      if (struct.isSetGroup_id()) {
        oprot.writeI32(struct.group_id);
      }
      if (struct.isSetPlan_id()) {
        oprot.writeI32(struct.plan_id);
      }
      if (struct.isSetHas_text()) {
        oprot.writeI32(struct.has_text);
      }
      if (struct.isSetWidth()) {
        oprot.writeI32(struct.width);
      }
      if (struct.isSetHeight()) {
        oprot.writeI32(struct.height);
      }
      if (struct.isSetShow_js()) {
        oprot.writeString(struct.show_js);
      }
      if (struct.isSetClick_js()) {
        oprot.writeString(struct.click_js);
      }
      if (struct.isSetApprovaldate()) {
        oprot.writeI32(struct.approvaldate);
      }
      if (struct.isSetPlay_status()) {
        oprot.writeI32(struct.play_status.getValue());
      }
      if (struct.isSetMedia_type()) {
        oprot.writeI32(struct.media_type.getValue());
      }
      if (struct.isSetCtime()) {
        oprot.writeI32(struct.ctime);
      }
      if (struct.isSetMtime()) {
        oprot.writeI32(struct.mtime);
      }
      if (struct.isSetAd_price()) {
        oprot.writeDouble(struct.ad_price);
      }
      if (struct.isSetAdType()) {
        oprot.writeI32(struct.adType.getValue());
      }
      if (struct.isSetColum1()) {
        oprot.writeI32(struct.colum1);
      }
      if (struct.isSetColum2()) {
        oprot.writeString(struct.colum2);
      }
      if (struct.isSetMedia_name()) {
        oprot.writeString(struct.media_name);
      }
      if (struct.isSetVersion()) {
        oprot.writeI32(struct.version);
      }
      if (struct.isSetTime_interval()) {
        oprot.writeI32(struct.time_interval);
      }
      if (struct.isSetDay_num()) {
        oprot.writeI32(struct.day_num);
      }
      if (struct.isSetShow_num()) {
        oprot.writeI32(struct.show_num);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AdInfo struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(24);
      if (incoming.get(0)) {
        struct.adid = iprot.readI32();
        struct.setAdidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.adname = iprot.readString();
        struct.setAdnameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.uid = iprot.readI32();
        struct.setUidIsSet(true);
      }
      if (incoming.get(3)) {
        struct.group_id = iprot.readI32();
        struct.setGroup_idIsSet(true);
      }
      if (incoming.get(4)) {
        struct.plan_id = iprot.readI32();
        struct.setPlan_idIsSet(true);
      }
      if (incoming.get(5)) {
        struct.has_text = iprot.readI32();
        struct.setHas_textIsSet(true);
      }
      if (incoming.get(6)) {
        struct.width = iprot.readI32();
        struct.setWidthIsSet(true);
      }
      if (incoming.get(7)) {
        struct.height = iprot.readI32();
        struct.setHeightIsSet(true);
      }
      if (incoming.get(8)) {
        struct.show_js = iprot.readString();
        struct.setShow_jsIsSet(true);
      }
      if (incoming.get(9)) {
        struct.click_js = iprot.readString();
        struct.setClick_jsIsSet(true);
      }
      if (incoming.get(10)) {
        struct.approvaldate = iprot.readI32();
        struct.setApprovaldateIsSet(true);
      }
      if (incoming.get(11)) {
        struct.play_status = com.adp.java.PlanStatus.findByValue(iprot.readI32());
        struct.setPlay_statusIsSet(true);
      }
      if (incoming.get(12)) {
        struct.media_type = com.adp.java.NetWorkType.findByValue(iprot.readI32());
        struct.setMedia_typeIsSet(true);
      }
      if (incoming.get(13)) {
        struct.ctime = iprot.readI32();
        struct.setCtimeIsSet(true);
      }
      if (incoming.get(14)) {
        struct.mtime = iprot.readI32();
        struct.setMtimeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.ad_price = iprot.readDouble();
        struct.setAd_priceIsSet(true);
      }
      if (incoming.get(16)) {
        struct.adType = com.adp.java.AdType.findByValue(iprot.readI32());
        struct.setAdTypeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.colum1 = iprot.readI32();
        struct.setColum1IsSet(true);
      }
      if (incoming.get(18)) {
        struct.colum2 = iprot.readString();
        struct.setColum2IsSet(true);
      }
      if (incoming.get(19)) {
        struct.media_name = iprot.readString();
        struct.setMedia_nameIsSet(true);
      }
      if (incoming.get(20)) {
        struct.version = iprot.readI32();
        struct.setVersionIsSet(true);
      }
      if (incoming.get(21)) {
        struct.time_interval = iprot.readI32();
        struct.setTime_intervalIsSet(true);
      }
      if (incoming.get(22)) {
        struct.day_num = iprot.readI32();
        struct.setDay_numIsSet(true);
      }
      if (incoming.get(23)) {
        struct.show_num = iprot.readI32();
        struct.setShow_numIsSet(true);
      }
    }
  }

}

