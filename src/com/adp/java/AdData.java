/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.adp.java;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class AdData implements org.apache.thrift.TBase<AdData, AdData._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AdData");

  private static final org.apache.thrift.protocol.TField AD_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("ad_id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField BUSINESS_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("business_type", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField WIDTH_FIELD_DESC = new org.apache.thrift.protocol.TField("width", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField HEIGHT_FIELD_DESC = new org.apache.thrift.protocol.TField("height", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField VIEWTYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("viewtype", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField PRIORITY_FIELD_DESC = new org.apache.thrift.protocol.TField("priority", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField BLACKURL_FIELD_DESC = new org.apache.thrift.protocol.TField("blackurl", org.apache.thrift.protocol.TType.LIST, (short)7);
  private static final org.apache.thrift.protocol.TField WHITEURL_FIELD_DESC = new org.apache.thrift.protocol.TField("whiteurl", org.apache.thrift.protocol.TType.LIST, (short)8);
  private static final org.apache.thrift.protocol.TField REGIONS_FIELD_DESC = new org.apache.thrift.protocol.TField("regions", org.apache.thrift.protocol.TType.LIST, (short)9);
  private static final org.apache.thrift.protocol.TField ACCEPTFLOWS_FIELD_DESC = new org.apache.thrift.protocol.TField("acceptflows", org.apache.thrift.protocol.TType.LIST, (short)10);
  private static final org.apache.thrift.protocol.TField CREATIVE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("creative_type", org.apache.thrift.protocol.TType.I32, (short)11);
  private static final org.apache.thrift.protocol.TField AD_CATEGORY_FIELD_DESC = new org.apache.thrift.protocol.TField("ad_category", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField SENSITIVE_CATEGORY_FIELD_DESC = new org.apache.thrift.protocol.TField("sensitive_category", org.apache.thrift.protocol.TType.I32, (short)13);
  private static final org.apache.thrift.protocol.TField CLICK_THROUGH_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("click_through_url", org.apache.thrift.protocol.TType.STRING, (short)14);
  private static final org.apache.thrift.protocol.TField DESTINATION_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("destination_url", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField CHARGE_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("charge_type", org.apache.thrift.protocol.TType.I32, (short)16);
  private static final org.apache.thrift.protocol.TField CHARGE_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("charge_price", org.apache.thrift.protocol.TType.DOUBLE, (short)17);
  private static final org.apache.thrift.protocol.TField IS_GENERAL_FIELD_DESC = new org.apache.thrift.protocol.TField("is_general", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField MEDIA_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("media_price", org.apache.thrift.protocol.TType.LIST, (short)19);
  private static final org.apache.thrift.protocol.TField SP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sp_id", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField HAS_TEXT_FIELD_DESC = new org.apache.thrift.protocol.TField("has_text", org.apache.thrift.protocol.TType.I32, (short)21);
  private static final org.apache.thrift.protocol.TField PARAMS_FIELD_DESC = new org.apache.thrift.protocol.TField("params", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField TIME_INTERVAL_FIELD_DESC = new org.apache.thrift.protocol.TField("time_interval", org.apache.thrift.protocol.TType.I32, (short)23);
  private static final org.apache.thrift.protocol.TField DAY_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("day_num", org.apache.thrift.protocol.TType.I32, (short)24);
  private static final org.apache.thrift.protocol.TField SHOW_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("show_num", org.apache.thrift.protocol.TType.I32, (short)25);
  private static final org.apache.thrift.protocol.TField TYPE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("type_id", org.apache.thrift.protocol.TType.I32, (short)26);
  private static final org.apache.thrift.protocol.TField SHOW_JS_FIELD_DESC = new org.apache.thrift.protocol.TField("show_js", org.apache.thrift.protocol.TType.STRING, (short)27);
  private static final org.apache.thrift.protocol.TField CLICK_JS_FIELD_DESC = new org.apache.thrift.protocol.TField("click_js", org.apache.thrift.protocol.TType.STRING, (short)28);
  private static final org.apache.thrift.protocol.TField IS_FIRST_PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("is_first_page", org.apache.thrift.protocol.TType.I32, (short)29);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AdDataStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AdDataTupleSchemeFactory());
  }

  public int ad_id; // required
  /**
   * 
   * @see com.adp.java.ReleaseType
   */
  public com.adp.java.ReleaseType business_type; // required
  public int width; // required
  public int height; // required
  /**
   * 
   * @see com.adp.java.AdType
   */
  public com.adp.java.AdType viewtype; // required
  /**
   * 
   * @see com.adp.java.AdPriority
   */
  public com.adp.java.AdPriority priority; // required
  public List<String> blackurl; // required
  public List<String> whiteurl; // required
  public List<String> regions; // required
  public List<com.adp.java.FlowSrc> acceptflows; // required
  /**
   * 
   * @see com.adp.java.StuffType
   */
  public com.adp.java.StuffType creative_type; // required
  public int ad_category; // required
  public int sensitive_category; // required
  public String click_through_url; // required
  public String destination_url; // required
  /**
   * 
   * @see com.adp.java.AdChargeType
   */
  public com.adp.java.AdChargeType charge_type; // required
  public double charge_price; // required
  public int is_general; // required
  public List<MediaPrice> media_price; // required
  public String sp_id; // required
  public int has_text; // required
  public String params; // required
  public int time_interval; // required
  public int day_num; // required
  public int show_num; // required
  public int type_id; // required
  public String show_js; // required
  public String click_js; // required
  public int is_first_page; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    AD_ID((short)1, "ad_id"),
    /**
     * 
     * @see com.adp.java.ReleaseType
     */
    BUSINESS_TYPE((short)2, "business_type"),
    WIDTH((short)3, "width"),
    HEIGHT((short)4, "height"),
    /**
     * 
     * @see com.adp.java.AdType
     */
    VIEWTYPE((short)5, "viewtype"),
    /**
     * 
     * @see com.adp.java.AdPriority
     */
    PRIORITY((short)6, "priority"),
    BLACKURL((short)7, "blackurl"),
    WHITEURL((short)8, "whiteurl"),
    REGIONS((short)9, "regions"),
    ACCEPTFLOWS((short)10, "acceptflows"),
    /**
     * 
     * @see com.adp.java.StuffType
     */
    CREATIVE_TYPE((short)11, "creative_type"),
    AD_CATEGORY((short)12, "ad_category"),
    SENSITIVE_CATEGORY((short)13, "sensitive_category"),
    CLICK_THROUGH_URL((short)14, "click_through_url"),
    DESTINATION_URL((short)15, "destination_url"),
    /**
     * 
     * @see com.adp.java.AdChargeType
     */
    CHARGE_TYPE((short)16, "charge_type"),
    CHARGE_PRICE((short)17, "charge_price"),
    IS_GENERAL((short)18, "is_general"),
    MEDIA_PRICE((short)19, "media_price"),
    SP_ID((short)20, "sp_id"),
    HAS_TEXT((short)21, "has_text"),
    PARAMS((short)22, "params"),
    TIME_INTERVAL((short)23, "time_interval"),
    DAY_NUM((short)24, "day_num"),
    SHOW_NUM((short)25, "show_num"),
    TYPE_ID((short)26, "type_id"),
    SHOW_JS((short)27, "show_js"),
    CLICK_JS((short)28, "click_js"),
    IS_FIRST_PAGE((short)29, "is_first_page");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // AD_ID
          return AD_ID;
        case 2: // BUSINESS_TYPE
          return BUSINESS_TYPE;
        case 3: // WIDTH
          return WIDTH;
        case 4: // HEIGHT
          return HEIGHT;
        case 5: // VIEWTYPE
          return VIEWTYPE;
        case 6: // PRIORITY
          return PRIORITY;
        case 7: // BLACKURL
          return BLACKURL;
        case 8: // WHITEURL
          return WHITEURL;
        case 9: // REGIONS
          return REGIONS;
        case 10: // ACCEPTFLOWS
          return ACCEPTFLOWS;
        case 11: // CREATIVE_TYPE
          return CREATIVE_TYPE;
        case 12: // AD_CATEGORY
          return AD_CATEGORY;
        case 13: // SENSITIVE_CATEGORY
          return SENSITIVE_CATEGORY;
        case 14: // CLICK_THROUGH_URL
          return CLICK_THROUGH_URL;
        case 15: // DESTINATION_URL
          return DESTINATION_URL;
        case 16: // CHARGE_TYPE
          return CHARGE_TYPE;
        case 17: // CHARGE_PRICE
          return CHARGE_PRICE;
        case 18: // IS_GENERAL
          return IS_GENERAL;
        case 19: // MEDIA_PRICE
          return MEDIA_PRICE;
        case 20: // SP_ID
          return SP_ID;
        case 21: // HAS_TEXT
          return HAS_TEXT;
        case 22: // PARAMS
          return PARAMS;
        case 23: // TIME_INTERVAL
          return TIME_INTERVAL;
        case 24: // DAY_NUM
          return DAY_NUM;
        case 25: // SHOW_NUM
          return SHOW_NUM;
        case 26: // TYPE_ID
          return TYPE_ID;
        case 27: // SHOW_JS
          return SHOW_JS;
        case 28: // CLICK_JS
          return CLICK_JS;
        case 29: // IS_FIRST_PAGE
          return IS_FIRST_PAGE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __AD_ID_ISSET_ID = 0;
  private static final int __WIDTH_ISSET_ID = 1;
  private static final int __HEIGHT_ISSET_ID = 2;
  private static final int __AD_CATEGORY_ISSET_ID = 3;
  private static final int __SENSITIVE_CATEGORY_ISSET_ID = 4;
  private static final int __CHARGE_PRICE_ISSET_ID = 5;
  private static final int __IS_GENERAL_ISSET_ID = 6;
  private static final int __HAS_TEXT_ISSET_ID = 7;
  private static final int __TIME_INTERVAL_ISSET_ID = 8;
  private static final int __DAY_NUM_ISSET_ID = 9;
  private static final int __SHOW_NUM_ISSET_ID = 10;
  private static final int __TYPE_ID_ISSET_ID = 11;
  private static final int __IS_FIRST_PAGE_ISSET_ID = 12;
  private BitSet __isset_bit_vector = new BitSet(13);
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.AD_ID, new org.apache.thrift.meta_data.FieldMetaData("ad_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BUSINESS_TYPE, new org.apache.thrift.meta_data.FieldMetaData("business_type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.adp.java.ReleaseType.class)));
    tmpMap.put(_Fields.WIDTH, new org.apache.thrift.meta_data.FieldMetaData("width", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.HEIGHT, new org.apache.thrift.meta_data.FieldMetaData("height", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.VIEWTYPE, new org.apache.thrift.meta_data.FieldMetaData("viewtype", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.adp.java.AdType.class)));
    tmpMap.put(_Fields.PRIORITY, new org.apache.thrift.meta_data.FieldMetaData("priority", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.adp.java.AdPriority.class)));
    tmpMap.put(_Fields.BLACKURL, new org.apache.thrift.meta_data.FieldMetaData("blackurl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.WHITEURL, new org.apache.thrift.meta_data.FieldMetaData("whiteurl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.REGIONS, new org.apache.thrift.meta_data.FieldMetaData("regions", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.ACCEPTFLOWS, new org.apache.thrift.meta_data.FieldMetaData("acceptflows", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.adp.java.FlowSrc.class))));
    tmpMap.put(_Fields.CREATIVE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("creative_type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.adp.java.StuffType.class)));
    tmpMap.put(_Fields.AD_CATEGORY, new org.apache.thrift.meta_data.FieldMetaData("ad_category", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SENSITIVE_CATEGORY, new org.apache.thrift.meta_data.FieldMetaData("sensitive_category", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CLICK_THROUGH_URL, new org.apache.thrift.meta_data.FieldMetaData("click_through_url", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESTINATION_URL, new org.apache.thrift.meta_data.FieldMetaData("destination_url", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHARGE_TYPE, new org.apache.thrift.meta_data.FieldMetaData("charge_type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.adp.java.AdChargeType.class)));
    tmpMap.put(_Fields.CHARGE_PRICE, new org.apache.thrift.meta_data.FieldMetaData("charge_price", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.IS_GENERAL, new org.apache.thrift.meta_data.FieldMetaData("is_general", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MEDIA_PRICE, new org.apache.thrift.meta_data.FieldMetaData("media_price", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, MediaPrice.class))));
    tmpMap.put(_Fields.SP_ID, new org.apache.thrift.meta_data.FieldMetaData("sp_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HAS_TEXT, new org.apache.thrift.meta_data.FieldMetaData("has_text", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PARAMS, new org.apache.thrift.meta_data.FieldMetaData("params", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TIME_INTERVAL, new org.apache.thrift.meta_data.FieldMetaData("time_interval", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DAY_NUM, new org.apache.thrift.meta_data.FieldMetaData("day_num", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SHOW_NUM, new org.apache.thrift.meta_data.FieldMetaData("show_num", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.TYPE_ID, new org.apache.thrift.meta_data.FieldMetaData("type_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SHOW_JS, new org.apache.thrift.meta_data.FieldMetaData("show_js", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLICK_JS, new org.apache.thrift.meta_data.FieldMetaData("click_js", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_FIRST_PAGE, new org.apache.thrift.meta_data.FieldMetaData("is_first_page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AdData.class, metaDataMap);
  }

  public AdData() {
    this.business_type = com.adp.java.ReleaseType.LONG_TAIL;

    this.viewtype = com.adp.java.AdType.AD_QIANRU;

    this.priority = com.adp.java.AdPriority.AD_BASIC;

    this.creative_type = com.adp.java.StuffType.AD_IMAGE;

    this.charge_type = com.adp.java.AdChargeType.CPC;

  }

  public AdData(
    int ad_id,
    com.adp.java.ReleaseType business_type,
    int width,
    int height,
    com.adp.java.AdType viewtype,
    com.adp.java.AdPriority priority,
    List<String> blackurl,
    List<String> whiteurl,
    List<String> regions,
    List<com.adp.java.FlowSrc> acceptflows,
    com.adp.java.StuffType creative_type,
    int ad_category,
    int sensitive_category,
    String click_through_url,
    String destination_url,
    com.adp.java.AdChargeType charge_type,
    double charge_price,
    int is_general,
    List<MediaPrice> media_price,
    String sp_id,
    int has_text,
    String params,
    int time_interval,
    int day_num,
    int show_num,
    int type_id,
    String show_js,
    String click_js,
    int is_first_page)
  {
    this();
    this.ad_id = ad_id;
    setAd_idIsSet(true);
    this.business_type = business_type;
    this.width = width;
    setWidthIsSet(true);
    this.height = height;
    setHeightIsSet(true);
    this.viewtype = viewtype;
    this.priority = priority;
    this.blackurl = blackurl;
    this.whiteurl = whiteurl;
    this.regions = regions;
    this.acceptflows = acceptflows;
    this.creative_type = creative_type;
    this.ad_category = ad_category;
    setAd_categoryIsSet(true);
    this.sensitive_category = sensitive_category;
    setSensitive_categoryIsSet(true);
    this.click_through_url = click_through_url;
    this.destination_url = destination_url;
    this.charge_type = charge_type;
    this.charge_price = charge_price;
    setCharge_priceIsSet(true);
    this.is_general = is_general;
    setIs_generalIsSet(true);
    this.media_price = media_price;
    this.sp_id = sp_id;
    this.has_text = has_text;
    setHas_textIsSet(true);
    this.params = params;
    this.time_interval = time_interval;
    setTime_intervalIsSet(true);
    this.day_num = day_num;
    setDay_numIsSet(true);
    this.show_num = show_num;
    setShow_numIsSet(true);
    this.type_id = type_id;
    setType_idIsSet(true);
    this.show_js = show_js;
    this.click_js = click_js;
    this.is_first_page = is_first_page;
    setIs_first_pageIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AdData(AdData other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.ad_id = other.ad_id;
    if (other.isSetBusiness_type()) {
      this.business_type = other.business_type;
    }
    this.width = other.width;
    this.height = other.height;
    if (other.isSetViewtype()) {
      this.viewtype = other.viewtype;
    }
    if (other.isSetPriority()) {
      this.priority = other.priority;
    }
    if (other.isSetBlackurl()) {
      List<String> __this__blackurl = new ArrayList<String>();
      for (String other_element : other.blackurl) {
        __this__blackurl.add(other_element);
      }
      this.blackurl = __this__blackurl;
    }
    if (other.isSetWhiteurl()) {
      List<String> __this__whiteurl = new ArrayList<String>();
      for (String other_element : other.whiteurl) {
        __this__whiteurl.add(other_element);
      }
      this.whiteurl = __this__whiteurl;
    }
    if (other.isSetRegions()) {
      List<String> __this__regions = new ArrayList<String>();
      for (String other_element : other.regions) {
        __this__regions.add(other_element);
      }
      this.regions = __this__regions;
    }
    if (other.isSetAcceptflows()) {
      List<com.adp.java.FlowSrc> __this__acceptflows = new ArrayList<com.adp.java.FlowSrc>();
      for (com.adp.java.FlowSrc other_element : other.acceptflows) {
        __this__acceptflows.add(other_element);
      }
      this.acceptflows = __this__acceptflows;
    }
    if (other.isSetCreative_type()) {
      this.creative_type = other.creative_type;
    }
    this.ad_category = other.ad_category;
    this.sensitive_category = other.sensitive_category;
    if (other.isSetClick_through_url()) {
      this.click_through_url = other.click_through_url;
    }
    if (other.isSetDestination_url()) {
      this.destination_url = other.destination_url;
    }
    if (other.isSetCharge_type()) {
      this.charge_type = other.charge_type;
    }
    this.charge_price = other.charge_price;
    this.is_general = other.is_general;
    if (other.isSetMedia_price()) {
      List<MediaPrice> __this__media_price = new ArrayList<MediaPrice>();
      for (MediaPrice other_element : other.media_price) {
        __this__media_price.add(new MediaPrice(other_element));
      }
      this.media_price = __this__media_price;
    }
    if (other.isSetSp_id()) {
      this.sp_id = other.sp_id;
    }
    this.has_text = other.has_text;
    if (other.isSetParams()) {
      this.params = other.params;
    }
    this.time_interval = other.time_interval;
    this.day_num = other.day_num;
    this.show_num = other.show_num;
    this.type_id = other.type_id;
    if (other.isSetShow_js()) {
      this.show_js = other.show_js;
    }
    if (other.isSetClick_js()) {
      this.click_js = other.click_js;
    }
    this.is_first_page = other.is_first_page;
  }

  public AdData deepCopy() {
    return new AdData(this);
  }

  @Override
  public void clear() {
    setAd_idIsSet(false);
    this.ad_id = 0;
    this.business_type = com.adp.java.ReleaseType.LONG_TAIL;

    setWidthIsSet(false);
    this.width = 0;
    setHeightIsSet(false);
    this.height = 0;
    this.viewtype = com.adp.java.AdType.AD_QIANRU;

    this.priority = com.adp.java.AdPriority.AD_BASIC;

    this.blackurl = null;
    this.whiteurl = null;
    this.regions = null;
    this.acceptflows = null;
    this.creative_type = com.adp.java.StuffType.AD_IMAGE;

    setAd_categoryIsSet(false);
    this.ad_category = 0;
    setSensitive_categoryIsSet(false);
    this.sensitive_category = 0;
    this.click_through_url = null;
    this.destination_url = null;
    this.charge_type = com.adp.java.AdChargeType.CPC;

    setCharge_priceIsSet(false);
    this.charge_price = 0.0;
    setIs_generalIsSet(false);
    this.is_general = 0;
    this.media_price = null;
    this.sp_id = null;
    setHas_textIsSet(false);
    this.has_text = 0;
    this.params = null;
    setTime_intervalIsSet(false);
    this.time_interval = 0;
    setDay_numIsSet(false);
    this.day_num = 0;
    setShow_numIsSet(false);
    this.show_num = 0;
    setType_idIsSet(false);
    this.type_id = 0;
    this.show_js = null;
    this.click_js = null;
    setIs_first_pageIsSet(false);
    this.is_first_page = 0;
  }

  public int getAd_id() {
    return this.ad_id;
  }

  public AdData setAd_id(int ad_id) {
    this.ad_id = ad_id;
    setAd_idIsSet(true);
    return this;
  }

  public void unsetAd_id() {
    __isset_bit_vector.clear(__AD_ID_ISSET_ID);
  }

  /** Returns true if field ad_id is set (has been assigned a value) and false otherwise */
  public boolean isSetAd_id() {
    return __isset_bit_vector.get(__AD_ID_ISSET_ID);
  }

  public void setAd_idIsSet(boolean value) {
    __isset_bit_vector.set(__AD_ID_ISSET_ID, value);
  }

  /**
   * 
   * @see com.adp.java.ReleaseType
   */
  public com.adp.java.ReleaseType getBusiness_type() {
    return this.business_type;
  }

  /**
   * 
   * @see com.adp.java.ReleaseType
   */
  public AdData setBusiness_type(com.adp.java.ReleaseType business_type) {
    this.business_type = business_type;
    return this;
  }

  public void unsetBusiness_type() {
    this.business_type = null;
  }

  /** Returns true if field business_type is set (has been assigned a value) and false otherwise */
  public boolean isSetBusiness_type() {
    return this.business_type != null;
  }

  public void setBusiness_typeIsSet(boolean value) {
    if (!value) {
      this.business_type = null;
    }
  }

  public int getWidth() {
    return this.width;
  }

  public AdData setWidth(int width) {
    this.width = width;
    setWidthIsSet(true);
    return this;
  }

  public void unsetWidth() {
    __isset_bit_vector.clear(__WIDTH_ISSET_ID);
  }

  /** Returns true if field width is set (has been assigned a value) and false otherwise */
  public boolean isSetWidth() {
    return __isset_bit_vector.get(__WIDTH_ISSET_ID);
  }

  public void setWidthIsSet(boolean value) {
    __isset_bit_vector.set(__WIDTH_ISSET_ID, value);
  }

  public int getHeight() {
    return this.height;
  }

  public AdData setHeight(int height) {
    this.height = height;
    setHeightIsSet(true);
    return this;
  }

  public void unsetHeight() {
    __isset_bit_vector.clear(__HEIGHT_ISSET_ID);
  }

  /** Returns true if field height is set (has been assigned a value) and false otherwise */
  public boolean isSetHeight() {
    return __isset_bit_vector.get(__HEIGHT_ISSET_ID);
  }

  public void setHeightIsSet(boolean value) {
    __isset_bit_vector.set(__HEIGHT_ISSET_ID, value);
  }

  /**
   * 
   * @see com.adp.java.AdType
   */
  public com.adp.java.AdType getViewtype() {
    return this.viewtype;
  }

  /**
   * 
   * @see com.adp.java.AdType
   */
  public AdData setViewtype(com.adp.java.AdType viewtype) {
    this.viewtype = viewtype;
    return this;
  }

  public void unsetViewtype() {
    this.viewtype = null;
  }

  /** Returns true if field viewtype is set (has been assigned a value) and false otherwise */
  public boolean isSetViewtype() {
    return this.viewtype != null;
  }

  public void setViewtypeIsSet(boolean value) {
    if (!value) {
      this.viewtype = null;
    }
  }

  /**
   * 
   * @see com.adp.java.AdPriority
   */
  public com.adp.java.AdPriority getPriority() {
    return this.priority;
  }

  /**
   * 
   * @see com.adp.java.AdPriority
   */
  public AdData setPriority(com.adp.java.AdPriority priority) {
    this.priority = priority;
    return this;
  }

  public void unsetPriority() {
    this.priority = null;
  }

  /** Returns true if field priority is set (has been assigned a value) and false otherwise */
  public boolean isSetPriority() {
    return this.priority != null;
  }

  public void setPriorityIsSet(boolean value) {
    if (!value) {
      this.priority = null;
    }
  }

  public int getBlackurlSize() {
    return (this.blackurl == null) ? 0 : this.blackurl.size();
  }

  public java.util.Iterator<String> getBlackurlIterator() {
    return (this.blackurl == null) ? null : this.blackurl.iterator();
  }

  public void addToBlackurl(String elem) {
    if (this.blackurl == null) {
      this.blackurl = new ArrayList<String>();
    }
    this.blackurl.add(elem);
  }

  public List<String> getBlackurl() {
    return this.blackurl;
  }

  public AdData setBlackurl(List<String> blackurl) {
    this.blackurl = blackurl;
    return this;
  }

  public void unsetBlackurl() {
    this.blackurl = null;
  }

  /** Returns true if field blackurl is set (has been assigned a value) and false otherwise */
  public boolean isSetBlackurl() {
    return this.blackurl != null;
  }

  public void setBlackurlIsSet(boolean value) {
    if (!value) {
      this.blackurl = null;
    }
  }

  public int getWhiteurlSize() {
    return (this.whiteurl == null) ? 0 : this.whiteurl.size();
  }

  public java.util.Iterator<String> getWhiteurlIterator() {
    return (this.whiteurl == null) ? null : this.whiteurl.iterator();
  }

  public void addToWhiteurl(String elem) {
    if (this.whiteurl == null) {
      this.whiteurl = new ArrayList<String>();
    }
    this.whiteurl.add(elem);
  }

  public List<String> getWhiteurl() {
    return this.whiteurl;
  }

  public AdData setWhiteurl(List<String> whiteurl) {
    this.whiteurl = whiteurl;
    return this;
  }

  public void unsetWhiteurl() {
    this.whiteurl = null;
  }

  /** Returns true if field whiteurl is set (has been assigned a value) and false otherwise */
  public boolean isSetWhiteurl() {
    return this.whiteurl != null;
  }

  public void setWhiteurlIsSet(boolean value) {
    if (!value) {
      this.whiteurl = null;
    }
  }

  public int getRegionsSize() {
    return (this.regions == null) ? 0 : this.regions.size();
  }

  public java.util.Iterator<String> getRegionsIterator() {
    return (this.regions == null) ? null : this.regions.iterator();
  }

  public void addToRegions(String elem) {
    if (this.regions == null) {
      this.regions = new ArrayList<String>();
    }
    this.regions.add(elem);
  }

  public List<String> getRegions() {
    return this.regions;
  }

  public AdData setRegions(List<String> regions) {
    this.regions = regions;
    return this;
  }

  public void unsetRegions() {
    this.regions = null;
  }

  /** Returns true if field regions is set (has been assigned a value) and false otherwise */
  public boolean isSetRegions() {
    return this.regions != null;
  }

  public void setRegionsIsSet(boolean value) {
    if (!value) {
      this.regions = null;
    }
  }

  public int getAcceptflowsSize() {
    return (this.acceptflows == null) ? 0 : this.acceptflows.size();
  }

  public java.util.Iterator<com.adp.java.FlowSrc> getAcceptflowsIterator() {
    return (this.acceptflows == null) ? null : this.acceptflows.iterator();
  }

  public void addToAcceptflows(com.adp.java.FlowSrc elem) {
    if (this.acceptflows == null) {
      this.acceptflows = new ArrayList<com.adp.java.FlowSrc>();
    }
    this.acceptflows.add(elem);
  }

  public List<com.adp.java.FlowSrc> getAcceptflows() {
    return this.acceptflows;
  }

  public AdData setAcceptflows(List<com.adp.java.FlowSrc> acceptflows) {
    this.acceptflows = acceptflows;
    return this;
  }

  public void unsetAcceptflows() {
    this.acceptflows = null;
  }

  /** Returns true if field acceptflows is set (has been assigned a value) and false otherwise */
  public boolean isSetAcceptflows() {
    return this.acceptflows != null;
  }

  public void setAcceptflowsIsSet(boolean value) {
    if (!value) {
      this.acceptflows = null;
    }
  }

  /**
   * 
   * @see com.adp.java.StuffType
   */
  public com.adp.java.StuffType getCreative_type() {
    return this.creative_type;
  }

  /**
   * 
   * @see com.adp.java.StuffType
   */
  public AdData setCreative_type(com.adp.java.StuffType creative_type) {
    this.creative_type = creative_type;
    return this;
  }

  public void unsetCreative_type() {
    this.creative_type = null;
  }

  /** Returns true if field creative_type is set (has been assigned a value) and false otherwise */
  public boolean isSetCreative_type() {
    return this.creative_type != null;
  }

  public void setCreative_typeIsSet(boolean value) {
    if (!value) {
      this.creative_type = null;
    }
  }

  public int getAd_category() {
    return this.ad_category;
  }

  public AdData setAd_category(int ad_category) {
    this.ad_category = ad_category;
    setAd_categoryIsSet(true);
    return this;
  }

  public void unsetAd_category() {
    __isset_bit_vector.clear(__AD_CATEGORY_ISSET_ID);
  }

  /** Returns true if field ad_category is set (has been assigned a value) and false otherwise */
  public boolean isSetAd_category() {
    return __isset_bit_vector.get(__AD_CATEGORY_ISSET_ID);
  }

  public void setAd_categoryIsSet(boolean value) {
    __isset_bit_vector.set(__AD_CATEGORY_ISSET_ID, value);
  }

  public int getSensitive_category() {
    return this.sensitive_category;
  }

  public AdData setSensitive_category(int sensitive_category) {
    this.sensitive_category = sensitive_category;
    setSensitive_categoryIsSet(true);
    return this;
  }

  public void unsetSensitive_category() {
    __isset_bit_vector.clear(__SENSITIVE_CATEGORY_ISSET_ID);
  }

  /** Returns true if field sensitive_category is set (has been assigned a value) and false otherwise */
  public boolean isSetSensitive_category() {
    return __isset_bit_vector.get(__SENSITIVE_CATEGORY_ISSET_ID);
  }

  public void setSensitive_categoryIsSet(boolean value) {
    __isset_bit_vector.set(__SENSITIVE_CATEGORY_ISSET_ID, value);
  }

  public String getClick_through_url() {
    return this.click_through_url;
  }

  public AdData setClick_through_url(String click_through_url) {
    this.click_through_url = click_through_url;
    return this;
  }

  public void unsetClick_through_url() {
    this.click_through_url = null;
  }

  /** Returns true if field click_through_url is set (has been assigned a value) and false otherwise */
  public boolean isSetClick_through_url() {
    return this.click_through_url != null;
  }

  public void setClick_through_urlIsSet(boolean value) {
    if (!value) {
      this.click_through_url = null;
    }
  }

  public String getDestination_url() {
    return this.destination_url;
  }

  public AdData setDestination_url(String destination_url) {
    this.destination_url = destination_url;
    return this;
  }

  public void unsetDestination_url() {
    this.destination_url = null;
  }

  /** Returns true if field destination_url is set (has been assigned a value) and false otherwise */
  public boolean isSetDestination_url() {
    return this.destination_url != null;
  }

  public void setDestination_urlIsSet(boolean value) {
    if (!value) {
      this.destination_url = null;
    }
  }

  /**
   * 
   * @see com.adp.java.AdChargeType
   */
  public com.adp.java.AdChargeType getCharge_type() {
    return this.charge_type;
  }

  /**
   * 
   * @see com.adp.java.AdChargeType
   */
  public AdData setCharge_type(com.adp.java.AdChargeType charge_type) {
    this.charge_type = charge_type;
    return this;
  }

  public void unsetCharge_type() {
    this.charge_type = null;
  }

  /** Returns true if field charge_type is set (has been assigned a value) and false otherwise */
  public boolean isSetCharge_type() {
    return this.charge_type != null;
  }

  public void setCharge_typeIsSet(boolean value) {
    if (!value) {
      this.charge_type = null;
    }
  }

  public double getCharge_price() {
    return this.charge_price;
  }

  public AdData setCharge_price(double charge_price) {
    this.charge_price = charge_price;
    setCharge_priceIsSet(true);
    return this;
  }

  public void unsetCharge_price() {
    __isset_bit_vector.clear(__CHARGE_PRICE_ISSET_ID);
  }

  /** Returns true if field charge_price is set (has been assigned a value) and false otherwise */
  public boolean isSetCharge_price() {
    return __isset_bit_vector.get(__CHARGE_PRICE_ISSET_ID);
  }

  public void setCharge_priceIsSet(boolean value) {
    __isset_bit_vector.set(__CHARGE_PRICE_ISSET_ID, value);
  }

  public int getIs_general() {
    return this.is_general;
  }

  public AdData setIs_general(int is_general) {
    this.is_general = is_general;
    setIs_generalIsSet(true);
    return this;
  }

  public void unsetIs_general() {
    __isset_bit_vector.clear(__IS_GENERAL_ISSET_ID);
  }

  /** Returns true if field is_general is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_general() {
    return __isset_bit_vector.get(__IS_GENERAL_ISSET_ID);
  }

  public void setIs_generalIsSet(boolean value) {
    __isset_bit_vector.set(__IS_GENERAL_ISSET_ID, value);
  }

  public int getMedia_priceSize() {
    return (this.media_price == null) ? 0 : this.media_price.size();
  }

  public java.util.Iterator<MediaPrice> getMedia_priceIterator() {
    return (this.media_price == null) ? null : this.media_price.iterator();
  }

  public void addToMedia_price(MediaPrice elem) {
    if (this.media_price == null) {
      this.media_price = new ArrayList<MediaPrice>();
    }
    this.media_price.add(elem);
  }

  public List<MediaPrice> getMedia_price() {
    return this.media_price;
  }

  public AdData setMedia_price(List<MediaPrice> media_price) {
    this.media_price = media_price;
    return this;
  }

  public void unsetMedia_price() {
    this.media_price = null;
  }

  /** Returns true if field media_price is set (has been assigned a value) and false otherwise */
  public boolean isSetMedia_price() {
    return this.media_price != null;
  }

  public void setMedia_priceIsSet(boolean value) {
    if (!value) {
      this.media_price = null;
    }
  }

  public String getSp_id() {
    return this.sp_id;
  }

  public AdData setSp_id(String sp_id) {
    this.sp_id = sp_id;
    return this;
  }

  public void unsetSp_id() {
    this.sp_id = null;
  }

  /** Returns true if field sp_id is set (has been assigned a value) and false otherwise */
  public boolean isSetSp_id() {
    return this.sp_id != null;
  }

  public void setSp_idIsSet(boolean value) {
    if (!value) {
      this.sp_id = null;
    }
  }

  public int getHas_text() {
    return this.has_text;
  }

  public AdData setHas_text(int has_text) {
    this.has_text = has_text;
    setHas_textIsSet(true);
    return this;
  }

  public void unsetHas_text() {
    __isset_bit_vector.clear(__HAS_TEXT_ISSET_ID);
  }

  /** Returns true if field has_text is set (has been assigned a value) and false otherwise */
  public boolean isSetHas_text() {
    return __isset_bit_vector.get(__HAS_TEXT_ISSET_ID);
  }

  public void setHas_textIsSet(boolean value) {
    __isset_bit_vector.set(__HAS_TEXT_ISSET_ID, value);
  }

  public String getParams() {
    return this.params;
  }

  public AdData setParams(String params) {
    this.params = params;
    return this;
  }

  public void unsetParams() {
    this.params = null;
  }

  /** Returns true if field params is set (has been assigned a value) and false otherwise */
  public boolean isSetParams() {
    return this.params != null;
  }

  public void setParamsIsSet(boolean value) {
    if (!value) {
      this.params = null;
    }
  }

  public int getTime_interval() {
    return this.time_interval;
  }

  public AdData setTime_interval(int time_interval) {
    this.time_interval = time_interval;
    setTime_intervalIsSet(true);
    return this;
  }

  public void unsetTime_interval() {
    __isset_bit_vector.clear(__TIME_INTERVAL_ISSET_ID);
  }

  /** Returns true if field time_interval is set (has been assigned a value) and false otherwise */
  public boolean isSetTime_interval() {
    return __isset_bit_vector.get(__TIME_INTERVAL_ISSET_ID);
  }

  public void setTime_intervalIsSet(boolean value) {
    __isset_bit_vector.set(__TIME_INTERVAL_ISSET_ID, value);
  }

  public int getDay_num() {
    return this.day_num;
  }

  public AdData setDay_num(int day_num) {
    this.day_num = day_num;
    setDay_numIsSet(true);
    return this;
  }

  public void unsetDay_num() {
    __isset_bit_vector.clear(__DAY_NUM_ISSET_ID);
  }

  /** Returns true if field day_num is set (has been assigned a value) and false otherwise */
  public boolean isSetDay_num() {
    return __isset_bit_vector.get(__DAY_NUM_ISSET_ID);
  }

  public void setDay_numIsSet(boolean value) {
    __isset_bit_vector.set(__DAY_NUM_ISSET_ID, value);
  }

  public int getShow_num() {
    return this.show_num;
  }

  public AdData setShow_num(int show_num) {
    this.show_num = show_num;
    setShow_numIsSet(true);
    return this;
  }

  public void unsetShow_num() {
    __isset_bit_vector.clear(__SHOW_NUM_ISSET_ID);
  }

  /** Returns true if field show_num is set (has been assigned a value) and false otherwise */
  public boolean isSetShow_num() {
    return __isset_bit_vector.get(__SHOW_NUM_ISSET_ID);
  }

  public void setShow_numIsSet(boolean value) {
    __isset_bit_vector.set(__SHOW_NUM_ISSET_ID, value);
  }

  public int getType_id() {
    return this.type_id;
  }

  public AdData setType_id(int type_id) {
    this.type_id = type_id;
    setType_idIsSet(true);
    return this;
  }

  public void unsetType_id() {
    __isset_bit_vector.clear(__TYPE_ID_ISSET_ID);
  }

  /** Returns true if field type_id is set (has been assigned a value) and false otherwise */
  public boolean isSetType_id() {
    return __isset_bit_vector.get(__TYPE_ID_ISSET_ID);
  }

  public void setType_idIsSet(boolean value) {
    __isset_bit_vector.set(__TYPE_ID_ISSET_ID, value);
  }

  public String getShow_js() {
    return this.show_js;
  }

  public AdData setShow_js(String show_js) {
    this.show_js = show_js;
    return this;
  }

  public void unsetShow_js() {
    this.show_js = null;
  }

  /** Returns true if field show_js is set (has been assigned a value) and false otherwise */
  public boolean isSetShow_js() {
    return this.show_js != null;
  }

  public void setShow_jsIsSet(boolean value) {
    if (!value) {
      this.show_js = null;
    }
  }

  public String getClick_js() {
    return this.click_js;
  }

  public AdData setClick_js(String click_js) {
    this.click_js = click_js;
    return this;
  }

  public void unsetClick_js() {
    this.click_js = null;
  }

  /** Returns true if field click_js is set (has been assigned a value) and false otherwise */
  public boolean isSetClick_js() {
    return this.click_js != null;
  }

  public void setClick_jsIsSet(boolean value) {
    if (!value) {
      this.click_js = null;
    }
  }

  public int getIs_first_page() {
    return this.is_first_page;
  }

  public AdData setIs_first_page(int is_first_page) {
    this.is_first_page = is_first_page;
    setIs_first_pageIsSet(true);
    return this;
  }

  public void unsetIs_first_page() {
    __isset_bit_vector.clear(__IS_FIRST_PAGE_ISSET_ID);
  }

  /** Returns true if field is_first_page is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_first_page() {
    return __isset_bit_vector.get(__IS_FIRST_PAGE_ISSET_ID);
  }

  public void setIs_first_pageIsSet(boolean value) {
    __isset_bit_vector.set(__IS_FIRST_PAGE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case AD_ID:
      if (value == null) {
        unsetAd_id();
      } else {
        setAd_id((Integer)value);
      }
      break;

    case BUSINESS_TYPE:
      if (value == null) {
        unsetBusiness_type();
      } else {
        setBusiness_type((com.adp.java.ReleaseType)value);
      }
      break;

    case WIDTH:
      if (value == null) {
        unsetWidth();
      } else {
        setWidth((Integer)value);
      }
      break;

    case HEIGHT:
      if (value == null) {
        unsetHeight();
      } else {
        setHeight((Integer)value);
      }
      break;

    case VIEWTYPE:
      if (value == null) {
        unsetViewtype();
      } else {
        setViewtype((com.adp.java.AdType)value);
      }
      break;

    case PRIORITY:
      if (value == null) {
        unsetPriority();
      } else {
        setPriority((com.adp.java.AdPriority)value);
      }
      break;

    case BLACKURL:
      if (value == null) {
        unsetBlackurl();
      } else {
        setBlackurl((List<String>)value);
      }
      break;

    case WHITEURL:
      if (value == null) {
        unsetWhiteurl();
      } else {
        setWhiteurl((List<String>)value);
      }
      break;

    case REGIONS:
      if (value == null) {
        unsetRegions();
      } else {
        setRegions((List<String>)value);
      }
      break;

    case ACCEPTFLOWS:
      if (value == null) {
        unsetAcceptflows();
      } else {
        setAcceptflows((List<com.adp.java.FlowSrc>)value);
      }
      break;

    case CREATIVE_TYPE:
      if (value == null) {
        unsetCreative_type();
      } else {
        setCreative_type((com.adp.java.StuffType)value);
      }
      break;

    case AD_CATEGORY:
      if (value == null) {
        unsetAd_category();
      } else {
        setAd_category((Integer)value);
      }
      break;

    case SENSITIVE_CATEGORY:
      if (value == null) {
        unsetSensitive_category();
      } else {
        setSensitive_category((Integer)value);
      }
      break;

    case CLICK_THROUGH_URL:
      if (value == null) {
        unsetClick_through_url();
      } else {
        setClick_through_url((String)value);
      }
      break;

    case DESTINATION_URL:
      if (value == null) {
        unsetDestination_url();
      } else {
        setDestination_url((String)value);
      }
      break;

    case CHARGE_TYPE:
      if (value == null) {
        unsetCharge_type();
      } else {
        setCharge_type((com.adp.java.AdChargeType)value);
      }
      break;

    case CHARGE_PRICE:
      if (value == null) {
        unsetCharge_price();
      } else {
        setCharge_price((Double)value);
      }
      break;

    case IS_GENERAL:
      if (value == null) {
        unsetIs_general();
      } else {
        setIs_general((Integer)value);
      }
      break;

    case MEDIA_PRICE:
      if (value == null) {
        unsetMedia_price();
      } else {
        setMedia_price((List<MediaPrice>)value);
      }
      break;

    case SP_ID:
      if (value == null) {
        unsetSp_id();
      } else {
        setSp_id((String)value);
      }
      break;

    case HAS_TEXT:
      if (value == null) {
        unsetHas_text();
      } else {
        setHas_text((Integer)value);
      }
      break;

    case PARAMS:
      if (value == null) {
        unsetParams();
      } else {
        setParams((String)value);
      }
      break;

    case TIME_INTERVAL:
      if (value == null) {
        unsetTime_interval();
      } else {
        setTime_interval((Integer)value);
      }
      break;

    case DAY_NUM:
      if (value == null) {
        unsetDay_num();
      } else {
        setDay_num((Integer)value);
      }
      break;

    case SHOW_NUM:
      if (value == null) {
        unsetShow_num();
      } else {
        setShow_num((Integer)value);
      }
      break;

    case TYPE_ID:
      if (value == null) {
        unsetType_id();
      } else {
        setType_id((Integer)value);
      }
      break;

    case SHOW_JS:
      if (value == null) {
        unsetShow_js();
      } else {
        setShow_js((String)value);
      }
      break;

    case CLICK_JS:
      if (value == null) {
        unsetClick_js();
      } else {
        setClick_js((String)value);
      }
      break;

    case IS_FIRST_PAGE:
      if (value == null) {
        unsetIs_first_page();
      } else {
        setIs_first_page((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case AD_ID:
      return Integer.valueOf(getAd_id());

    case BUSINESS_TYPE:
      return getBusiness_type();

    case WIDTH:
      return Integer.valueOf(getWidth());

    case HEIGHT:
      return Integer.valueOf(getHeight());

    case VIEWTYPE:
      return getViewtype();

    case PRIORITY:
      return getPriority();

    case BLACKURL:
      return getBlackurl();

    case WHITEURL:
      return getWhiteurl();

    case REGIONS:
      return getRegions();

    case ACCEPTFLOWS:
      return getAcceptflows();

    case CREATIVE_TYPE:
      return getCreative_type();

    case AD_CATEGORY:
      return Integer.valueOf(getAd_category());

    case SENSITIVE_CATEGORY:
      return Integer.valueOf(getSensitive_category());

    case CLICK_THROUGH_URL:
      return getClick_through_url();

    case DESTINATION_URL:
      return getDestination_url();

    case CHARGE_TYPE:
      return getCharge_type();

    case CHARGE_PRICE:
      return Double.valueOf(getCharge_price());

    case IS_GENERAL:
      return Integer.valueOf(getIs_general());

    case MEDIA_PRICE:
      return getMedia_price();

    case SP_ID:
      return getSp_id();

    case HAS_TEXT:
      return Integer.valueOf(getHas_text());

    case PARAMS:
      return getParams();

    case TIME_INTERVAL:
      return Integer.valueOf(getTime_interval());

    case DAY_NUM:
      return Integer.valueOf(getDay_num());

    case SHOW_NUM:
      return Integer.valueOf(getShow_num());

    case TYPE_ID:
      return Integer.valueOf(getType_id());

    case SHOW_JS:
      return getShow_js();

    case CLICK_JS:
      return getClick_js();

    case IS_FIRST_PAGE:
      return Integer.valueOf(getIs_first_page());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case AD_ID:
      return isSetAd_id();
    case BUSINESS_TYPE:
      return isSetBusiness_type();
    case WIDTH:
      return isSetWidth();
    case HEIGHT:
      return isSetHeight();
    case VIEWTYPE:
      return isSetViewtype();
    case PRIORITY:
      return isSetPriority();
    case BLACKURL:
      return isSetBlackurl();
    case WHITEURL:
      return isSetWhiteurl();
    case REGIONS:
      return isSetRegions();
    case ACCEPTFLOWS:
      return isSetAcceptflows();
    case CREATIVE_TYPE:
      return isSetCreative_type();
    case AD_CATEGORY:
      return isSetAd_category();
    case SENSITIVE_CATEGORY:
      return isSetSensitive_category();
    case CLICK_THROUGH_URL:
      return isSetClick_through_url();
    case DESTINATION_URL:
      return isSetDestination_url();
    case CHARGE_TYPE:
      return isSetCharge_type();
    case CHARGE_PRICE:
      return isSetCharge_price();
    case IS_GENERAL:
      return isSetIs_general();
    case MEDIA_PRICE:
      return isSetMedia_price();
    case SP_ID:
      return isSetSp_id();
    case HAS_TEXT:
      return isSetHas_text();
    case PARAMS:
      return isSetParams();
    case TIME_INTERVAL:
      return isSetTime_interval();
    case DAY_NUM:
      return isSetDay_num();
    case SHOW_NUM:
      return isSetShow_num();
    case TYPE_ID:
      return isSetType_id();
    case SHOW_JS:
      return isSetShow_js();
    case CLICK_JS:
      return isSetClick_js();
    case IS_FIRST_PAGE:
      return isSetIs_first_page();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AdData)
      return this.equals((AdData)that);
    return false;
  }

  public boolean equals(AdData that) {
    if (that == null)
      return false;

    boolean this_present_ad_id = true;
    boolean that_present_ad_id = true;
    if (this_present_ad_id || that_present_ad_id) {
      if (!(this_present_ad_id && that_present_ad_id))
        return false;
      if (this.ad_id != that.ad_id)
        return false;
    }

    boolean this_present_business_type = true && this.isSetBusiness_type();
    boolean that_present_business_type = true && that.isSetBusiness_type();
    if (this_present_business_type || that_present_business_type) {
      if (!(this_present_business_type && that_present_business_type))
        return false;
      if (!this.business_type.equals(that.business_type))
        return false;
    }

    boolean this_present_width = true;
    boolean that_present_width = true;
    if (this_present_width || that_present_width) {
      if (!(this_present_width && that_present_width))
        return false;
      if (this.width != that.width)
        return false;
    }

    boolean this_present_height = true;
    boolean that_present_height = true;
    if (this_present_height || that_present_height) {
      if (!(this_present_height && that_present_height))
        return false;
      if (this.height != that.height)
        return false;
    }

    boolean this_present_viewtype = true && this.isSetViewtype();
    boolean that_present_viewtype = true && that.isSetViewtype();
    if (this_present_viewtype || that_present_viewtype) {
      if (!(this_present_viewtype && that_present_viewtype))
        return false;
      if (!this.viewtype.equals(that.viewtype))
        return false;
    }

    boolean this_present_priority = true && this.isSetPriority();
    boolean that_present_priority = true && that.isSetPriority();
    if (this_present_priority || that_present_priority) {
      if (!(this_present_priority && that_present_priority))
        return false;
      if (!this.priority.equals(that.priority))
        return false;
    }

    boolean this_present_blackurl = true && this.isSetBlackurl();
    boolean that_present_blackurl = true && that.isSetBlackurl();
    if (this_present_blackurl || that_present_blackurl) {
      if (!(this_present_blackurl && that_present_blackurl))
        return false;
      if (!this.blackurl.equals(that.blackurl))
        return false;
    }

    boolean this_present_whiteurl = true && this.isSetWhiteurl();
    boolean that_present_whiteurl = true && that.isSetWhiteurl();
    if (this_present_whiteurl || that_present_whiteurl) {
      if (!(this_present_whiteurl && that_present_whiteurl))
        return false;
      if (!this.whiteurl.equals(that.whiteurl))
        return false;
    }

    boolean this_present_regions = true && this.isSetRegions();
    boolean that_present_regions = true && that.isSetRegions();
    if (this_present_regions || that_present_regions) {
      if (!(this_present_regions && that_present_regions))
        return false;
      if (!this.regions.equals(that.regions))
        return false;
    }

    boolean this_present_acceptflows = true && this.isSetAcceptflows();
    boolean that_present_acceptflows = true && that.isSetAcceptflows();
    if (this_present_acceptflows || that_present_acceptflows) {
      if (!(this_present_acceptflows && that_present_acceptflows))
        return false;
      if (!this.acceptflows.equals(that.acceptflows))
        return false;
    }

    boolean this_present_creative_type = true && this.isSetCreative_type();
    boolean that_present_creative_type = true && that.isSetCreative_type();
    if (this_present_creative_type || that_present_creative_type) {
      if (!(this_present_creative_type && that_present_creative_type))
        return false;
      if (!this.creative_type.equals(that.creative_type))
        return false;
    }

    boolean this_present_ad_category = true;
    boolean that_present_ad_category = true;
    if (this_present_ad_category || that_present_ad_category) {
      if (!(this_present_ad_category && that_present_ad_category))
        return false;
      if (this.ad_category != that.ad_category)
        return false;
    }

    boolean this_present_sensitive_category = true;
    boolean that_present_sensitive_category = true;
    if (this_present_sensitive_category || that_present_sensitive_category) {
      if (!(this_present_sensitive_category && that_present_sensitive_category))
        return false;
      if (this.sensitive_category != that.sensitive_category)
        return false;
    }

    boolean this_present_click_through_url = true && this.isSetClick_through_url();
    boolean that_present_click_through_url = true && that.isSetClick_through_url();
    if (this_present_click_through_url || that_present_click_through_url) {
      if (!(this_present_click_through_url && that_present_click_through_url))
        return false;
      if (!this.click_through_url.equals(that.click_through_url))
        return false;
    }

    boolean this_present_destination_url = true && this.isSetDestination_url();
    boolean that_present_destination_url = true && that.isSetDestination_url();
    if (this_present_destination_url || that_present_destination_url) {
      if (!(this_present_destination_url && that_present_destination_url))
        return false;
      if (!this.destination_url.equals(that.destination_url))
        return false;
    }

    boolean this_present_charge_type = true && this.isSetCharge_type();
    boolean that_present_charge_type = true && that.isSetCharge_type();
    if (this_present_charge_type || that_present_charge_type) {
      if (!(this_present_charge_type && that_present_charge_type))
        return false;
      if (!this.charge_type.equals(that.charge_type))
        return false;
    }

    boolean this_present_charge_price = true;
    boolean that_present_charge_price = true;
    if (this_present_charge_price || that_present_charge_price) {
      if (!(this_present_charge_price && that_present_charge_price))
        return false;
      if (this.charge_price != that.charge_price)
        return false;
    }

    boolean this_present_is_general = true;
    boolean that_present_is_general = true;
    if (this_present_is_general || that_present_is_general) {
      if (!(this_present_is_general && that_present_is_general))
        return false;
      if (this.is_general != that.is_general)
        return false;
    }

    boolean this_present_media_price = true && this.isSetMedia_price();
    boolean that_present_media_price = true && that.isSetMedia_price();
    if (this_present_media_price || that_present_media_price) {
      if (!(this_present_media_price && that_present_media_price))
        return false;
      if (!this.media_price.equals(that.media_price))
        return false;
    }

    boolean this_present_sp_id = true && this.isSetSp_id();
    boolean that_present_sp_id = true && that.isSetSp_id();
    if (this_present_sp_id || that_present_sp_id) {
      if (!(this_present_sp_id && that_present_sp_id))
        return false;
      if (!this.sp_id.equals(that.sp_id))
        return false;
    }

    boolean this_present_has_text = true;
    boolean that_present_has_text = true;
    if (this_present_has_text || that_present_has_text) {
      if (!(this_present_has_text && that_present_has_text))
        return false;
      if (this.has_text != that.has_text)
        return false;
    }

    boolean this_present_params = true && this.isSetParams();
    boolean that_present_params = true && that.isSetParams();
    if (this_present_params || that_present_params) {
      if (!(this_present_params && that_present_params))
        return false;
      if (!this.params.equals(that.params))
        return false;
    }

    boolean this_present_time_interval = true;
    boolean that_present_time_interval = true;
    if (this_present_time_interval || that_present_time_interval) {
      if (!(this_present_time_interval && that_present_time_interval))
        return false;
      if (this.time_interval != that.time_interval)
        return false;
    }

    boolean this_present_day_num = true;
    boolean that_present_day_num = true;
    if (this_present_day_num || that_present_day_num) {
      if (!(this_present_day_num && that_present_day_num))
        return false;
      if (this.day_num != that.day_num)
        return false;
    }

    boolean this_present_show_num = true;
    boolean that_present_show_num = true;
    if (this_present_show_num || that_present_show_num) {
      if (!(this_present_show_num && that_present_show_num))
        return false;
      if (this.show_num != that.show_num)
        return false;
    }

    boolean this_present_type_id = true;
    boolean that_present_type_id = true;
    if (this_present_type_id || that_present_type_id) {
      if (!(this_present_type_id && that_present_type_id))
        return false;
      if (this.type_id != that.type_id)
        return false;
    }

    boolean this_present_show_js = true && this.isSetShow_js();
    boolean that_present_show_js = true && that.isSetShow_js();
    if (this_present_show_js || that_present_show_js) {
      if (!(this_present_show_js && that_present_show_js))
        return false;
      if (!this.show_js.equals(that.show_js))
        return false;
    }

    boolean this_present_click_js = true && this.isSetClick_js();
    boolean that_present_click_js = true && that.isSetClick_js();
    if (this_present_click_js || that_present_click_js) {
      if (!(this_present_click_js && that_present_click_js))
        return false;
      if (!this.click_js.equals(that.click_js))
        return false;
    }

    boolean this_present_is_first_page = true;
    boolean that_present_is_first_page = true;
    if (this_present_is_first_page || that_present_is_first_page) {
      if (!(this_present_is_first_page && that_present_is_first_page))
        return false;
      if (this.is_first_page != that.is_first_page)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(AdData other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    AdData typedOther = (AdData)other;

    lastComparison = Boolean.valueOf(isSetAd_id()).compareTo(typedOther.isSetAd_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAd_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ad_id, typedOther.ad_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBusiness_type()).compareTo(typedOther.isSetBusiness_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBusiness_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.business_type, typedOther.business_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWidth()).compareTo(typedOther.isSetWidth());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWidth()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.width, typedOther.width);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHeight()).compareTo(typedOther.isSetHeight());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHeight()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.height, typedOther.height);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetViewtype()).compareTo(typedOther.isSetViewtype());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetViewtype()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.viewtype, typedOther.viewtype);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPriority()).compareTo(typedOther.isSetPriority());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPriority()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.priority, typedOther.priority);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBlackurl()).compareTo(typedOther.isSetBlackurl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBlackurl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.blackurl, typedOther.blackurl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetWhiteurl()).compareTo(typedOther.isSetWhiteurl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWhiteurl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.whiteurl, typedOther.whiteurl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRegions()).compareTo(typedOther.isSetRegions());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRegions()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.regions, typedOther.regions);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAcceptflows()).compareTo(typedOther.isSetAcceptflows());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAcceptflows()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.acceptflows, typedOther.acceptflows);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreative_type()).compareTo(typedOther.isSetCreative_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreative_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.creative_type, typedOther.creative_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAd_category()).compareTo(typedOther.isSetAd_category());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAd_category()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ad_category, typedOther.ad_category);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSensitive_category()).compareTo(typedOther.isSetSensitive_category());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSensitive_category()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sensitive_category, typedOther.sensitive_category);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClick_through_url()).compareTo(typedOther.isSetClick_through_url());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClick_through_url()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.click_through_url, typedOther.click_through_url);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDestination_url()).compareTo(typedOther.isSetDestination_url());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDestination_url()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.destination_url, typedOther.destination_url);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCharge_type()).compareTo(typedOther.isSetCharge_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCharge_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.charge_type, typedOther.charge_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCharge_price()).compareTo(typedOther.isSetCharge_price());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCharge_price()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.charge_price, typedOther.charge_price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIs_general()).compareTo(typedOther.isSetIs_general());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_general()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_general, typedOther.is_general);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMedia_price()).compareTo(typedOther.isSetMedia_price());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMedia_price()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.media_price, typedOther.media_price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSp_id()).compareTo(typedOther.isSetSp_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSp_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sp_id, typedOther.sp_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHas_text()).compareTo(typedOther.isSetHas_text());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHas_text()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.has_text, typedOther.has_text);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetParams()).compareTo(typedOther.isSetParams());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetParams()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.params, typedOther.params);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTime_interval()).compareTo(typedOther.isSetTime_interval());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTime_interval()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.time_interval, typedOther.time_interval);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDay_num()).compareTo(typedOther.isSetDay_num());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDay_num()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.day_num, typedOther.day_num);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShow_num()).compareTo(typedOther.isSetShow_num());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShow_num()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.show_num, typedOther.show_num);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType_id()).compareTo(typedOther.isSetType_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type_id, typedOther.type_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShow_js()).compareTo(typedOther.isSetShow_js());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShow_js()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.show_js, typedOther.show_js);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetClick_js()).compareTo(typedOther.isSetClick_js());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetClick_js()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.click_js, typedOther.click_js);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIs_first_page()).compareTo(typedOther.isSetIs_first_page());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_first_page()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_first_page, typedOther.is_first_page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AdData(");
    boolean first = true;

    sb.append("ad_id:");
    sb.append(this.ad_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("business_type:");
    if (this.business_type == null) {
      sb.append("null");
    } else {
      sb.append(this.business_type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("width:");
    sb.append(this.width);
    first = false;
    if (!first) sb.append(", ");
    sb.append("height:");
    sb.append(this.height);
    first = false;
    if (!first) sb.append(", ");
    sb.append("viewtype:");
    if (this.viewtype == null) {
      sb.append("null");
    } else {
      sb.append(this.viewtype);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("priority:");
    if (this.priority == null) {
      sb.append("null");
    } else {
      sb.append(this.priority);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("blackurl:");
    if (this.blackurl == null) {
      sb.append("null");
    } else {
      sb.append(this.blackurl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("whiteurl:");
    if (this.whiteurl == null) {
      sb.append("null");
    } else {
      sb.append(this.whiteurl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("regions:");
    if (this.regions == null) {
      sb.append("null");
    } else {
      sb.append(this.regions);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("acceptflows:");
    if (this.acceptflows == null) {
      sb.append("null");
    } else {
      sb.append(this.acceptflows);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("creative_type:");
    if (this.creative_type == null) {
      sb.append("null");
    } else {
      sb.append(this.creative_type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ad_category:");
    sb.append(this.ad_category);
    first = false;
    if (!first) sb.append(", ");
    sb.append("sensitive_category:");
    sb.append(this.sensitive_category);
    first = false;
    if (!first) sb.append(", ");
    sb.append("click_through_url:");
    if (this.click_through_url == null) {
      sb.append("null");
    } else {
      sb.append(this.click_through_url);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("destination_url:");
    if (this.destination_url == null) {
      sb.append("null");
    } else {
      sb.append(this.destination_url);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("charge_type:");
    if (this.charge_type == null) {
      sb.append("null");
    } else {
      sb.append(this.charge_type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("charge_price:");
    sb.append(this.charge_price);
    first = false;
    if (!first) sb.append(", ");
    sb.append("is_general:");
    sb.append(this.is_general);
    first = false;
    if (!first) sb.append(", ");
    sb.append("media_price:");
    if (this.media_price == null) {
      sb.append("null");
    } else {
      sb.append(this.media_price);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("sp_id:");
    if (this.sp_id == null) {
      sb.append("null");
    } else {
      sb.append(this.sp_id);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("has_text:");
    sb.append(this.has_text);
    first = false;
    if (!first) sb.append(", ");
    sb.append("params:");
    if (this.params == null) {
      sb.append("null");
    } else {
      sb.append(this.params);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("time_interval:");
    sb.append(this.time_interval);
    first = false;
    if (!first) sb.append(", ");
    sb.append("day_num:");
    sb.append(this.day_num);
    first = false;
    if (!first) sb.append(", ");
    sb.append("show_num:");
    sb.append(this.show_num);
    first = false;
    if (!first) sb.append(", ");
    sb.append("type_id:");
    sb.append(this.type_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("show_js:");
    if (this.show_js == null) {
      sb.append("null");
    } else {
      sb.append(this.show_js);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("click_js:");
    if (this.click_js == null) {
      sb.append("null");
    } else {
      sb.append(this.click_js);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("is_first_page:");
    sb.append(this.is_first_page);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AdDataStandardSchemeFactory implements SchemeFactory {
    public AdDataStandardScheme getScheme() {
      return new AdDataStandardScheme();
    }
  }

  private static class AdDataStandardScheme extends StandardScheme<AdData> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AdData struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // AD_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ad_id = iprot.readI32();
              struct.setAd_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // BUSINESS_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.business_type = com.adp.java.ReleaseType.findByValue(iprot.readI32());
              struct.setBusiness_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // WIDTH
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.width = iprot.readI32();
              struct.setWidthIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // HEIGHT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.height = iprot.readI32();
              struct.setHeightIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // VIEWTYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.viewtype = com.adp.java.AdType.findByValue(iprot.readI32());
              struct.setViewtypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PRIORITY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.priority = com.adp.java.AdPriority.findByValue(iprot.readI32());
              struct.setPriorityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BLACKURL
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.blackurl = new ArrayList<String>(_list0.size);
                for (int _i1 = 0; _i1 < _list0.size; ++_i1)
                {
                  String _elem2; // required
                  _elem2 = iprot.readString();
                  struct.blackurl.add(_elem2);
                }
                iprot.readListEnd();
              }
              struct.setBlackurlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // WHITEURL
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.whiteurl = new ArrayList<String>(_list3.size);
                for (int _i4 = 0; _i4 < _list3.size; ++_i4)
                {
                  String _elem5; // required
                  _elem5 = iprot.readString();
                  struct.whiteurl.add(_elem5);
                }
                iprot.readListEnd();
              }
              struct.setWhiteurlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // REGIONS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list6 = iprot.readListBegin();
                struct.regions = new ArrayList<String>(_list6.size);
                for (int _i7 = 0; _i7 < _list6.size; ++_i7)
                {
                  String _elem8; // required
                  _elem8 = iprot.readString();
                  struct.regions.add(_elem8);
                }
                iprot.readListEnd();
              }
              struct.setRegionsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ACCEPTFLOWS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list9 = iprot.readListBegin();
                struct.acceptflows = new ArrayList<com.adp.java.FlowSrc>(_list9.size);
                for (int _i10 = 0; _i10 < _list9.size; ++_i10)
                {
                  com.adp.java.FlowSrc _elem11; // required
                  _elem11 = com.adp.java.FlowSrc.findByValue(iprot.readI32());
                  struct.acceptflows.add(_elem11);
                }
                iprot.readListEnd();
              }
              struct.setAcceptflowsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // CREATIVE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.creative_type = com.adp.java.StuffType.findByValue(iprot.readI32());
              struct.setCreative_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // AD_CATEGORY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ad_category = iprot.readI32();
              struct.setAd_categoryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // SENSITIVE_CATEGORY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sensitive_category = iprot.readI32();
              struct.setSensitive_categoryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // CLICK_THROUGH_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.click_through_url = iprot.readString();
              struct.setClick_through_urlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // DESTINATION_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.destination_url = iprot.readString();
              struct.setDestination_urlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // CHARGE_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.charge_type = com.adp.java.AdChargeType.findByValue(iprot.readI32());
              struct.setCharge_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // CHARGE_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.charge_price = iprot.readDouble();
              struct.setCharge_priceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // IS_GENERAL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.is_general = iprot.readI32();
              struct.setIs_generalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // MEDIA_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list12 = iprot.readListBegin();
                struct.media_price = new ArrayList<MediaPrice>(_list12.size);
                for (int _i13 = 0; _i13 < _list12.size; ++_i13)
                {
                  MediaPrice _elem14; // required
                  _elem14 = new MediaPrice();
                  _elem14.read(iprot);
                  struct.media_price.add(_elem14);
                }
                iprot.readListEnd();
              }
              struct.setMedia_priceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // SP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sp_id = iprot.readString();
              struct.setSp_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // HAS_TEXT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.has_text = iprot.readI32();
              struct.setHas_textIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // PARAMS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.params = iprot.readString();
              struct.setParamsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // TIME_INTERVAL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.time_interval = iprot.readI32();
              struct.setTime_intervalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // DAY_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.day_num = iprot.readI32();
              struct.setDay_numIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // SHOW_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.show_num = iprot.readI32();
              struct.setShow_numIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // TYPE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type_id = iprot.readI32();
              struct.setType_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // SHOW_JS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.show_js = iprot.readString();
              struct.setShow_jsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // CLICK_JS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.click_js = iprot.readString();
              struct.setClick_jsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // IS_FIRST_PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.is_first_page = iprot.readI32();
              struct.setIs_first_pageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AdData struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(AD_ID_FIELD_DESC);
      oprot.writeI32(struct.ad_id);
      oprot.writeFieldEnd();
      if (struct.business_type != null) {
        oprot.writeFieldBegin(BUSINESS_TYPE_FIELD_DESC);
        oprot.writeI32(struct.business_type.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(WIDTH_FIELD_DESC);
      oprot.writeI32(struct.width);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(HEIGHT_FIELD_DESC);
      oprot.writeI32(struct.height);
      oprot.writeFieldEnd();
      if (struct.viewtype != null) {
        oprot.writeFieldBegin(VIEWTYPE_FIELD_DESC);
        oprot.writeI32(struct.viewtype.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.priority != null) {
        oprot.writeFieldBegin(PRIORITY_FIELD_DESC);
        oprot.writeI32(struct.priority.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.blackurl != null) {
        oprot.writeFieldBegin(BLACKURL_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.blackurl.size()));
          for (String _iter15 : struct.blackurl)
          {
            oprot.writeString(_iter15);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.whiteurl != null) {
        oprot.writeFieldBegin(WHITEURL_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.whiteurl.size()));
          for (String _iter16 : struct.whiteurl)
          {
            oprot.writeString(_iter16);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.regions != null) {
        oprot.writeFieldBegin(REGIONS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.regions.size()));
          for (String _iter17 : struct.regions)
          {
            oprot.writeString(_iter17);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.acceptflows != null) {
        oprot.writeFieldBegin(ACCEPTFLOWS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.acceptflows.size()));
          for (com.adp.java.FlowSrc _iter18 : struct.acceptflows)
          {
            oprot.writeI32(_iter18.getValue());
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.creative_type != null) {
        oprot.writeFieldBegin(CREATIVE_TYPE_FIELD_DESC);
        oprot.writeI32(struct.creative_type.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(AD_CATEGORY_FIELD_DESC);
      oprot.writeI32(struct.ad_category);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SENSITIVE_CATEGORY_FIELD_DESC);
      oprot.writeI32(struct.sensitive_category);
      oprot.writeFieldEnd();
      if (struct.click_through_url != null) {
        oprot.writeFieldBegin(CLICK_THROUGH_URL_FIELD_DESC);
        oprot.writeString(struct.click_through_url);
        oprot.writeFieldEnd();
      }
      if (struct.destination_url != null) {
        oprot.writeFieldBegin(DESTINATION_URL_FIELD_DESC);
        oprot.writeString(struct.destination_url);
        oprot.writeFieldEnd();
      }
      if (struct.charge_type != null) {
        oprot.writeFieldBegin(CHARGE_TYPE_FIELD_DESC);
        oprot.writeI32(struct.charge_type.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CHARGE_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.charge_price);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_GENERAL_FIELD_DESC);
      oprot.writeI32(struct.is_general);
      oprot.writeFieldEnd();
      if (struct.media_price != null) {
        oprot.writeFieldBegin(MEDIA_PRICE_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.media_price.size()));
          for (MediaPrice _iter19 : struct.media_price)
          {
            _iter19.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.sp_id != null) {
        oprot.writeFieldBegin(SP_ID_FIELD_DESC);
        oprot.writeString(struct.sp_id);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(HAS_TEXT_FIELD_DESC);
      oprot.writeI32(struct.has_text);
      oprot.writeFieldEnd();
      if (struct.params != null) {
        oprot.writeFieldBegin(PARAMS_FIELD_DESC);
        oprot.writeString(struct.params);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TIME_INTERVAL_FIELD_DESC);
      oprot.writeI32(struct.time_interval);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DAY_NUM_FIELD_DESC);
      oprot.writeI32(struct.day_num);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SHOW_NUM_FIELD_DESC);
      oprot.writeI32(struct.show_num);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TYPE_ID_FIELD_DESC);
      oprot.writeI32(struct.type_id);
      oprot.writeFieldEnd();
      if (struct.show_js != null) {
        oprot.writeFieldBegin(SHOW_JS_FIELD_DESC);
        oprot.writeString(struct.show_js);
        oprot.writeFieldEnd();
      }
      if (struct.click_js != null) {
        oprot.writeFieldBegin(CLICK_JS_FIELD_DESC);
        oprot.writeString(struct.click_js);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IS_FIRST_PAGE_FIELD_DESC);
      oprot.writeI32(struct.is_first_page);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AdDataTupleSchemeFactory implements SchemeFactory {
    public AdDataTupleScheme getScheme() {
      return new AdDataTupleScheme();
    }
  }

  private static class AdDataTupleScheme extends TupleScheme<AdData> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AdData struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAd_id()) {
        optionals.set(0);
      }
      if (struct.isSetBusiness_type()) {
        optionals.set(1);
      }
      if (struct.isSetWidth()) {
        optionals.set(2);
      }
      if (struct.isSetHeight()) {
        optionals.set(3);
      }
      if (struct.isSetViewtype()) {
        optionals.set(4);
      }
      if (struct.isSetPriority()) {
        optionals.set(5);
      }
      if (struct.isSetBlackurl()) {
        optionals.set(6);
      }
      if (struct.isSetWhiteurl()) {
        optionals.set(7);
      }
      if (struct.isSetRegions()) {
        optionals.set(8);
      }
      if (struct.isSetAcceptflows()) {
        optionals.set(9);
      }
      if (struct.isSetCreative_type()) {
        optionals.set(10);
      }
      if (struct.isSetAd_category()) {
        optionals.set(11);
      }
      if (struct.isSetSensitive_category()) {
        optionals.set(12);
      }
      if (struct.isSetClick_through_url()) {
        optionals.set(13);
      }
      if (struct.isSetDestination_url()) {
        optionals.set(14);
      }
      if (struct.isSetCharge_type()) {
        optionals.set(15);
      }
      if (struct.isSetCharge_price()) {
        optionals.set(16);
      }
      if (struct.isSetIs_general()) {
        optionals.set(17);
      }
      if (struct.isSetMedia_price()) {
        optionals.set(18);
      }
      if (struct.isSetSp_id()) {
        optionals.set(19);
      }
      if (struct.isSetHas_text()) {
        optionals.set(20);
      }
      if (struct.isSetParams()) {
        optionals.set(21);
      }
      if (struct.isSetTime_interval()) {
        optionals.set(22);
      }
      if (struct.isSetDay_num()) {
        optionals.set(23);
      }
      if (struct.isSetShow_num()) {
        optionals.set(24);
      }
      if (struct.isSetType_id()) {
        optionals.set(25);
      }
      if (struct.isSetShow_js()) {
        optionals.set(26);
      }
      if (struct.isSetClick_js()) {
        optionals.set(27);
      }
      if (struct.isSetIs_first_page()) {
        optionals.set(28);
      }
      oprot.writeBitSet(optionals, 29);
      if (struct.isSetAd_id()) {
        oprot.writeI32(struct.ad_id);
      }
      if (struct.isSetBusiness_type()) {
        oprot.writeI32(struct.business_type.getValue());
      }
      if (struct.isSetWidth()) {
        oprot.writeI32(struct.width);
      }
      if (struct.isSetHeight()) {
        oprot.writeI32(struct.height);
      }
      if (struct.isSetViewtype()) {
        oprot.writeI32(struct.viewtype.getValue());
      }
      if (struct.isSetPriority()) {
        oprot.writeI32(struct.priority.getValue());
      }
      if (struct.isSetBlackurl()) {
        {
          oprot.writeI32(struct.blackurl.size());
          for (String _iter20 : struct.blackurl)
          {
            oprot.writeString(_iter20);
          }
        }
      }
      if (struct.isSetWhiteurl()) {
        {
          oprot.writeI32(struct.whiteurl.size());
          for (String _iter21 : struct.whiteurl)
          {
            oprot.writeString(_iter21);
          }
        }
      }
      if (struct.isSetRegions()) {
        {
          oprot.writeI32(struct.regions.size());
          for (String _iter22 : struct.regions)
          {
            oprot.writeString(_iter22);
          }
        }
      }
      if (struct.isSetAcceptflows()) {
        {
          oprot.writeI32(struct.acceptflows.size());
          for (com.adp.java.FlowSrc _iter23 : struct.acceptflows)
          {
            oprot.writeI32(_iter23.getValue());
          }
        }
      }
      if (struct.isSetCreative_type()) {
        oprot.writeI32(struct.creative_type.getValue());
      }
      if (struct.isSetAd_category()) {
        oprot.writeI32(struct.ad_category);
      }
      if (struct.isSetSensitive_category()) {
        oprot.writeI32(struct.sensitive_category);
      }
      if (struct.isSetClick_through_url()) {
        oprot.writeString(struct.click_through_url);
      }
      if (struct.isSetDestination_url()) {
        oprot.writeString(struct.destination_url);
      }
      if (struct.isSetCharge_type()) {
        oprot.writeI32(struct.charge_type.getValue());
      }
      if (struct.isSetCharge_price()) {
        oprot.writeDouble(struct.charge_price);
      }
      if (struct.isSetIs_general()) {
        oprot.writeI32(struct.is_general);
      }
      if (struct.isSetMedia_price()) {
        {
          oprot.writeI32(struct.media_price.size());
          for (MediaPrice _iter24 : struct.media_price)
          {
            _iter24.write(oprot);
          }
        }
      }
      if (struct.isSetSp_id()) {
        oprot.writeString(struct.sp_id);
      }
      if (struct.isSetHas_text()) {
        oprot.writeI32(struct.has_text);
      }
      if (struct.isSetParams()) {
        oprot.writeString(struct.params);
      }
      if (struct.isSetTime_interval()) {
        oprot.writeI32(struct.time_interval);
      }
      if (struct.isSetDay_num()) {
        oprot.writeI32(struct.day_num);
      }
      if (struct.isSetShow_num()) {
        oprot.writeI32(struct.show_num);
      }
      if (struct.isSetType_id()) {
        oprot.writeI32(struct.type_id);
      }
      if (struct.isSetShow_js()) {
        oprot.writeString(struct.show_js);
      }
      if (struct.isSetClick_js()) {
        oprot.writeString(struct.click_js);
      }
      if (struct.isSetIs_first_page()) {
        oprot.writeI32(struct.is_first_page);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AdData struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(29);
      if (incoming.get(0)) {
        struct.ad_id = iprot.readI32();
        struct.setAd_idIsSet(true);
      }
      if (incoming.get(1)) {
        struct.business_type = com.adp.java.ReleaseType.findByValue(iprot.readI32());
        struct.setBusiness_typeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.width = iprot.readI32();
        struct.setWidthIsSet(true);
      }
      if (incoming.get(3)) {
        struct.height = iprot.readI32();
        struct.setHeightIsSet(true);
      }
      if (incoming.get(4)) {
        struct.viewtype = com.adp.java.AdType.findByValue(iprot.readI32());
        struct.setViewtypeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.priority = com.adp.java.AdPriority.findByValue(iprot.readI32());
        struct.setPriorityIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TList _list25 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.blackurl = new ArrayList<String>(_list25.size);
          for (int _i26 = 0; _i26 < _list25.size; ++_i26)
          {
            String _elem27; // required
            _elem27 = iprot.readString();
            struct.blackurl.add(_elem27);
          }
        }
        struct.setBlackurlIsSet(true);
      }
      if (incoming.get(7)) {
        {
          org.apache.thrift.protocol.TList _list28 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.whiteurl = new ArrayList<String>(_list28.size);
          for (int _i29 = 0; _i29 < _list28.size; ++_i29)
          {
            String _elem30; // required
            _elem30 = iprot.readString();
            struct.whiteurl.add(_elem30);
          }
        }
        struct.setWhiteurlIsSet(true);
      }
      if (incoming.get(8)) {
        {
          org.apache.thrift.protocol.TList _list31 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.regions = new ArrayList<String>(_list31.size);
          for (int _i32 = 0; _i32 < _list31.size; ++_i32)
          {
            String _elem33; // required
            _elem33 = iprot.readString();
            struct.regions.add(_elem33);
          }
        }
        struct.setRegionsIsSet(true);
      }
      if (incoming.get(9)) {
        {
          org.apache.thrift.protocol.TList _list34 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.acceptflows = new ArrayList<com.adp.java.FlowSrc>(_list34.size);
          for (int _i35 = 0; _i35 < _list34.size; ++_i35)
          {
            com.adp.java.FlowSrc _elem36; // required
            _elem36 = com.adp.java.FlowSrc.findByValue(iprot.readI32());
            struct.acceptflows.add(_elem36);
          }
        }
        struct.setAcceptflowsIsSet(true);
      }
      if (incoming.get(10)) {
        struct.creative_type = com.adp.java.StuffType.findByValue(iprot.readI32());
        struct.setCreative_typeIsSet(true);
      }
      if (incoming.get(11)) {
        struct.ad_category = iprot.readI32();
        struct.setAd_categoryIsSet(true);
      }
      if (incoming.get(12)) {
        struct.sensitive_category = iprot.readI32();
        struct.setSensitive_categoryIsSet(true);
      }
      if (incoming.get(13)) {
        struct.click_through_url = iprot.readString();
        struct.setClick_through_urlIsSet(true);
      }
      if (incoming.get(14)) {
        struct.destination_url = iprot.readString();
        struct.setDestination_urlIsSet(true);
      }
      if (incoming.get(15)) {
        struct.charge_type = com.adp.java.AdChargeType.findByValue(iprot.readI32());
        struct.setCharge_typeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.charge_price = iprot.readDouble();
        struct.setCharge_priceIsSet(true);
      }
      if (incoming.get(17)) {
        struct.is_general = iprot.readI32();
        struct.setIs_generalIsSet(true);
      }
      if (incoming.get(18)) {
        {
          org.apache.thrift.protocol.TList _list37 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.media_price = new ArrayList<MediaPrice>(_list37.size);
          for (int _i38 = 0; _i38 < _list37.size; ++_i38)
          {
            MediaPrice _elem39; // required
            _elem39 = new MediaPrice();
            _elem39.read(iprot);
            struct.media_price.add(_elem39);
          }
        }
        struct.setMedia_priceIsSet(true);
      }
      if (incoming.get(19)) {
        struct.sp_id = iprot.readString();
        struct.setSp_idIsSet(true);
      }
      if (incoming.get(20)) {
        struct.has_text = iprot.readI32();
        struct.setHas_textIsSet(true);
      }
      if (incoming.get(21)) {
        struct.params = iprot.readString();
        struct.setParamsIsSet(true);
      }
      if (incoming.get(22)) {
        struct.time_interval = iprot.readI32();
        struct.setTime_intervalIsSet(true);
      }
      if (incoming.get(23)) {
        struct.day_num = iprot.readI32();
        struct.setDay_numIsSet(true);
      }
      if (incoming.get(24)) {
        struct.show_num = iprot.readI32();
        struct.setShow_numIsSet(true);
      }
      if (incoming.get(25)) {
        struct.type_id = iprot.readI32();
        struct.setType_idIsSet(true);
      }
      if (incoming.get(26)) {
        struct.show_js = iprot.readString();
        struct.setShow_jsIsSet(true);
      }
      if (incoming.get(27)) {
        struct.click_js = iprot.readString();
        struct.setClick_jsIsSet(true);
      }
      if (incoming.get(28)) {
        struct.is_first_page = iprot.readI32();
        struct.setIs_first_pageIsSet(true);
      }
    }
  }

}

