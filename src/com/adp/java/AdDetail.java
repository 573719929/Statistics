/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.adp.java;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class AdDetail implements org.apache.thrift.TBase<AdDetail, AdDetail._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AdDetail");

  private static final org.apache.thrift.protocol.TField AD_INFOS_FIELD_DESC = new org.apache.thrift.protocol.TField("adInfos", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField AD_GROUPS_FIELD_DESC = new org.apache.thrift.protocol.TField("adGroups", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField STUFFS_FIELD_DESC = new org.apache.thrift.protocol.TField("stuffs", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField AD_PLAN_FIELD_DESC = new org.apache.thrift.protocol.TField("adPlan", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField USERNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("username", org.apache.thrift.protocol.TType.STRING, (short)5);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AdDetailStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AdDetailTupleSchemeFactory());
  }

  public List<com.adp.java.AdInfo> adInfos; // required
  public com.adp.java.AdGroup adGroups; // required
  public List<com.adp.java.StuffInfo> stuffs; // required
  public AdPlan adPlan; // required
  public String username; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    AD_INFOS((short)1, "adInfos"),
    AD_GROUPS((short)2, "adGroups"),
    STUFFS((short)3, "stuffs"),
    AD_PLAN((short)4, "adPlan"),
    USERNAME((short)5, "username");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // AD_INFOS
          return AD_INFOS;
        case 2: // AD_GROUPS
          return AD_GROUPS;
        case 3: // STUFFS
          return STUFFS;
        case 4: // AD_PLAN
          return AD_PLAN;
        case 5: // USERNAME
          return USERNAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.AD_INFOS, new org.apache.thrift.meta_data.FieldMetaData("adInfos", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.adp.java.AdInfo.class))));
    tmpMap.put(_Fields.AD_GROUPS, new org.apache.thrift.meta_data.FieldMetaData("adGroups", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.adp.java.AdGroup.class)));
    tmpMap.put(_Fields.STUFFS, new org.apache.thrift.meta_data.FieldMetaData("stuffs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.adp.java.StuffInfo.class))));
    tmpMap.put(_Fields.AD_PLAN, new org.apache.thrift.meta_data.FieldMetaData("adPlan", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AdPlan.class)));
    tmpMap.put(_Fields.USERNAME, new org.apache.thrift.meta_data.FieldMetaData("username", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AdDetail.class, metaDataMap);
  }

  public AdDetail() {
  }

  public AdDetail(
    List<com.adp.java.AdInfo> adInfos,
    com.adp.java.AdGroup adGroups,
    List<com.adp.java.StuffInfo> stuffs,
    AdPlan adPlan,
    String username)
  {
    this();
    this.adInfos = adInfos;
    this.adGroups = adGroups;
    this.stuffs = stuffs;
    this.adPlan = adPlan;
    this.username = username;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AdDetail(AdDetail other) {
    if (other.isSetAdInfos()) {
      List<com.adp.java.AdInfo> __this__adInfos = new ArrayList<com.adp.java.AdInfo>();
      for (com.adp.java.AdInfo other_element : other.adInfos) {
        __this__adInfos.add(new com.adp.java.AdInfo(other_element));
      }
      this.adInfos = __this__adInfos;
    }
    if (other.isSetAdGroups()) {
      this.adGroups = new com.adp.java.AdGroup(other.adGroups);
    }
    if (other.isSetStuffs()) {
      List<com.adp.java.StuffInfo> __this__stuffs = new ArrayList<com.adp.java.StuffInfo>();
      for (com.adp.java.StuffInfo other_element : other.stuffs) {
        __this__stuffs.add(new com.adp.java.StuffInfo(other_element));
      }
      this.stuffs = __this__stuffs;
    }
    if (other.isSetAdPlan()) {
      this.adPlan = new AdPlan(other.adPlan);
    }
    if (other.isSetUsername()) {
      this.username = other.username;
    }
  }

  public AdDetail deepCopy() {
    return new AdDetail(this);
  }

  @Override
  public void clear() {
    this.adInfos = null;
    this.adGroups = null;
    this.stuffs = null;
    this.adPlan = null;
    this.username = null;
  }

  public int getAdInfosSize() {
    return (this.adInfos == null) ? 0 : this.adInfos.size();
  }

  public java.util.Iterator<com.adp.java.AdInfo> getAdInfosIterator() {
    return (this.adInfos == null) ? null : this.adInfos.iterator();
  }

  public void addToAdInfos(com.adp.java.AdInfo elem) {
    if (this.adInfos == null) {
      this.adInfos = new ArrayList<com.adp.java.AdInfo>();
    }
    this.adInfos.add(elem);
  }

  public List<com.adp.java.AdInfo> getAdInfos() {
    return this.adInfos;
  }

  public AdDetail setAdInfos(List<com.adp.java.AdInfo> adInfos) {
    this.adInfos = adInfos;
    return this;
  }

  public void unsetAdInfos() {
    this.adInfos = null;
  }

  /** Returns true if field adInfos is set (has been assigned a value) and false otherwise */
  public boolean isSetAdInfos() {
    return this.adInfos != null;
  }

  public void setAdInfosIsSet(boolean value) {
    if (!value) {
      this.adInfos = null;
    }
  }

  public com.adp.java.AdGroup getAdGroups() {
    return this.adGroups;
  }

  public AdDetail setAdGroups(com.adp.java.AdGroup adGroups) {
    this.adGroups = adGroups;
    return this;
  }

  public void unsetAdGroups() {
    this.adGroups = null;
  }

  /** Returns true if field adGroups is set (has been assigned a value) and false otherwise */
  public boolean isSetAdGroups() {
    return this.adGroups != null;
  }

  public void setAdGroupsIsSet(boolean value) {
    if (!value) {
      this.adGroups = null;
    }
  }

  public int getStuffsSize() {
    return (this.stuffs == null) ? 0 : this.stuffs.size();
  }

  public java.util.Iterator<com.adp.java.StuffInfo> getStuffsIterator() {
    return (this.stuffs == null) ? null : this.stuffs.iterator();
  }

  public void addToStuffs(com.adp.java.StuffInfo elem) {
    if (this.stuffs == null) {
      this.stuffs = new ArrayList<com.adp.java.StuffInfo>();
    }
    this.stuffs.add(elem);
  }

  public List<com.adp.java.StuffInfo> getStuffs() {
    return this.stuffs;
  }

  public AdDetail setStuffs(List<com.adp.java.StuffInfo> stuffs) {
    this.stuffs = stuffs;
    return this;
  }

  public void unsetStuffs() {
    this.stuffs = null;
  }

  /** Returns true if field stuffs is set (has been assigned a value) and false otherwise */
  public boolean isSetStuffs() {
    return this.stuffs != null;
  }

  public void setStuffsIsSet(boolean value) {
    if (!value) {
      this.stuffs = null;
    }
  }

  public AdPlan getAdPlan() {
    return this.adPlan;
  }

  public AdDetail setAdPlan(AdPlan adPlan) {
    this.adPlan = adPlan;
    return this;
  }

  public void unsetAdPlan() {
    this.adPlan = null;
  }

  /** Returns true if field adPlan is set (has been assigned a value) and false otherwise */
  public boolean isSetAdPlan() {
    return this.adPlan != null;
  }

  public void setAdPlanIsSet(boolean value) {
    if (!value) {
      this.adPlan = null;
    }
  }

  public String getUsername() {
    return this.username;
  }

  public AdDetail setUsername(String username) {
    this.username = username;
    return this;
  }

  public void unsetUsername() {
    this.username = null;
  }

  /** Returns true if field username is set (has been assigned a value) and false otherwise */
  public boolean isSetUsername() {
    return this.username != null;
  }

  public void setUsernameIsSet(boolean value) {
    if (!value) {
      this.username = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case AD_INFOS:
      if (value == null) {
        unsetAdInfos();
      } else {
        setAdInfos((List<com.adp.java.AdInfo>)value);
      }
      break;

    case AD_GROUPS:
      if (value == null) {
        unsetAdGroups();
      } else {
        setAdGroups((com.adp.java.AdGroup)value);
      }
      break;

    case STUFFS:
      if (value == null) {
        unsetStuffs();
      } else {
        setStuffs((List<com.adp.java.StuffInfo>)value);
      }
      break;

    case AD_PLAN:
      if (value == null) {
        unsetAdPlan();
      } else {
        setAdPlan((AdPlan)value);
      }
      break;

    case USERNAME:
      if (value == null) {
        unsetUsername();
      } else {
        setUsername((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case AD_INFOS:
      return getAdInfos();

    case AD_GROUPS:
      return getAdGroups();

    case STUFFS:
      return getStuffs();

    case AD_PLAN:
      return getAdPlan();

    case USERNAME:
      return getUsername();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case AD_INFOS:
      return isSetAdInfos();
    case AD_GROUPS:
      return isSetAdGroups();
    case STUFFS:
      return isSetStuffs();
    case AD_PLAN:
      return isSetAdPlan();
    case USERNAME:
      return isSetUsername();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AdDetail)
      return this.equals((AdDetail)that);
    return false;
  }

  public boolean equals(AdDetail that) {
    if (that == null)
      return false;

    boolean this_present_adInfos = true && this.isSetAdInfos();
    boolean that_present_adInfos = true && that.isSetAdInfos();
    if (this_present_adInfos || that_present_adInfos) {
      if (!(this_present_adInfos && that_present_adInfos))
        return false;
      if (!this.adInfos.equals(that.adInfos))
        return false;
    }

    boolean this_present_adGroups = true && this.isSetAdGroups();
    boolean that_present_adGroups = true && that.isSetAdGroups();
    if (this_present_adGroups || that_present_adGroups) {
      if (!(this_present_adGroups && that_present_adGroups))
        return false;
      if (!this.adGroups.equals(that.adGroups))
        return false;
    }

    boolean this_present_stuffs = true && this.isSetStuffs();
    boolean that_present_stuffs = true && that.isSetStuffs();
    if (this_present_stuffs || that_present_stuffs) {
      if (!(this_present_stuffs && that_present_stuffs))
        return false;
      if (!this.stuffs.equals(that.stuffs))
        return false;
    }

    boolean this_present_adPlan = true && this.isSetAdPlan();
    boolean that_present_adPlan = true && that.isSetAdPlan();
    if (this_present_adPlan || that_present_adPlan) {
      if (!(this_present_adPlan && that_present_adPlan))
        return false;
      if (!this.adPlan.equals(that.adPlan))
        return false;
    }

    boolean this_present_username = true && this.isSetUsername();
    boolean that_present_username = true && that.isSetUsername();
    if (this_present_username || that_present_username) {
      if (!(this_present_username && that_present_username))
        return false;
      if (!this.username.equals(that.username))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(AdDetail other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    AdDetail typedOther = (AdDetail)other;

    lastComparison = Boolean.valueOf(isSetAdInfos()).compareTo(typedOther.isSetAdInfos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdInfos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adInfos, typedOther.adInfos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdGroups()).compareTo(typedOther.isSetAdGroups());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdGroups()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adGroups, typedOther.adGroups);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStuffs()).compareTo(typedOther.isSetStuffs());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStuffs()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.stuffs, typedOther.stuffs);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAdPlan()).compareTo(typedOther.isSetAdPlan());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAdPlan()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.adPlan, typedOther.adPlan);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUsername()).compareTo(typedOther.isSetUsername());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUsername()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.username, typedOther.username);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AdDetail(");
    boolean first = true;

    sb.append("adInfos:");
    if (this.adInfos == null) {
      sb.append("null");
    } else {
      sb.append(this.adInfos);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("adGroups:");
    if (this.adGroups == null) {
      sb.append("null");
    } else {
      sb.append(this.adGroups);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("stuffs:");
    if (this.stuffs == null) {
      sb.append("null");
    } else {
      sb.append(this.stuffs);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("adPlan:");
    if (this.adPlan == null) {
      sb.append("null");
    } else {
      sb.append(this.adPlan);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("username:");
    if (this.username == null) {
      sb.append("null");
    } else {
      sb.append(this.username);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AdDetailStandardSchemeFactory implements SchemeFactory {
    public AdDetailStandardScheme getScheme() {
      return new AdDetailStandardScheme();
    }
  }

  private static class AdDetailStandardScheme extends StandardScheme<AdDetail> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AdDetail struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // AD_INFOS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.adInfos = new ArrayList<com.adp.java.AdInfo>(_list0.size);
                for (int _i1 = 0; _i1 < _list0.size; ++_i1)
                {
                  com.adp.java.AdInfo _elem2; // required
                  _elem2 = new com.adp.java.AdInfo();
                  _elem2.read(iprot);
                  struct.adInfos.add(_elem2);
                }
                iprot.readListEnd();
              }
              struct.setAdInfosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // AD_GROUPS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.adGroups = new com.adp.java.AdGroup();
              struct.adGroups.read(iprot);
              struct.setAdGroupsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // STUFFS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.stuffs = new ArrayList<com.adp.java.StuffInfo>(_list3.size);
                for (int _i4 = 0; _i4 < _list3.size; ++_i4)
                {
                  com.adp.java.StuffInfo _elem5; // required
                  _elem5 = new com.adp.java.StuffInfo();
                  _elem5.read(iprot);
                  struct.stuffs.add(_elem5);
                }
                iprot.readListEnd();
              }
              struct.setStuffsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AD_PLAN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.adPlan = new AdPlan();
              struct.adPlan.read(iprot);
              struct.setAdPlanIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // USERNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.username = iprot.readString();
              struct.setUsernameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AdDetail struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.adInfos != null) {
        oprot.writeFieldBegin(AD_INFOS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.adInfos.size()));
          for (com.adp.java.AdInfo _iter6 : struct.adInfos)
          {
            _iter6.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.adGroups != null) {
        oprot.writeFieldBegin(AD_GROUPS_FIELD_DESC);
        struct.adGroups.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.stuffs != null) {
        oprot.writeFieldBegin(STUFFS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.stuffs.size()));
          for (com.adp.java.StuffInfo _iter7 : struct.stuffs)
          {
            _iter7.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.adPlan != null) {
        oprot.writeFieldBegin(AD_PLAN_FIELD_DESC);
        struct.adPlan.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.username != null) {
        oprot.writeFieldBegin(USERNAME_FIELD_DESC);
        oprot.writeString(struct.username);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AdDetailTupleSchemeFactory implements SchemeFactory {
    public AdDetailTupleScheme getScheme() {
      return new AdDetailTupleScheme();
    }
  }

  private static class AdDetailTupleScheme extends TupleScheme<AdDetail> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AdDetail struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAdInfos()) {
        optionals.set(0);
      }
      if (struct.isSetAdGroups()) {
        optionals.set(1);
      }
      if (struct.isSetStuffs()) {
        optionals.set(2);
      }
      if (struct.isSetAdPlan()) {
        optionals.set(3);
      }
      if (struct.isSetUsername()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetAdInfos()) {
        {
          oprot.writeI32(struct.adInfos.size());
          for (com.adp.java.AdInfo _iter8 : struct.adInfos)
          {
            _iter8.write(oprot);
          }
        }
      }
      if (struct.isSetAdGroups()) {
        struct.adGroups.write(oprot);
      }
      if (struct.isSetStuffs()) {
        {
          oprot.writeI32(struct.stuffs.size());
          for (com.adp.java.StuffInfo _iter9 : struct.stuffs)
          {
            _iter9.write(oprot);
          }
        }
      }
      if (struct.isSetAdPlan()) {
        struct.adPlan.write(oprot);
      }
      if (struct.isSetUsername()) {
        oprot.writeString(struct.username);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AdDetail struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list10 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.adInfos = new ArrayList<com.adp.java.AdInfo>(_list10.size);
          for (int _i11 = 0; _i11 < _list10.size; ++_i11)
          {
            com.adp.java.AdInfo _elem12; // required
            _elem12 = new com.adp.java.AdInfo();
            _elem12.read(iprot);
            struct.adInfos.add(_elem12);
          }
        }
        struct.setAdInfosIsSet(true);
      }
      if (incoming.get(1)) {
        struct.adGroups = new com.adp.java.AdGroup();
        struct.adGroups.read(iprot);
        struct.setAdGroupsIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.stuffs = new ArrayList<com.adp.java.StuffInfo>(_list13.size);
          for (int _i14 = 0; _i14 < _list13.size; ++_i14)
          {
            com.adp.java.StuffInfo _elem15; // required
            _elem15 = new com.adp.java.StuffInfo();
            _elem15.read(iprot);
            struct.stuffs.add(_elem15);
          }
        }
        struct.setStuffsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.adPlan = new AdPlan();
        struct.adPlan.read(iprot);
        struct.setAdPlanIsSet(true);
      }
      if (incoming.get(4)) {
        struct.username = iprot.readString();
        struct.setUsernameIsSet(true);
      }
    }
  }

}

