/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.adp.java;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class AdGroup implements org.apache.thrift.TBase<AdGroup, AdGroup._Fields>, java.io.Serializable, Cloneable {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("AdGroup");

  private static final org.apache.thrift.protocol.TField GROUP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("group_id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField UID_FIELD_DESC = new org.apache.thrift.protocol.TField("uid", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("version", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField PLAN_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("plan_id", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField START_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("start_date", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField END_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("end_date", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField FREQ_FIELD_DESC = new org.apache.thrift.protocol.TField("freq", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField IS_FIRST_PAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("is_first_page", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField INCLUDE_HOST_FIELD_DESC = new org.apache.thrift.protocol.TField("include_host", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField EXCLUDE_HOST_FIELD_DESC = new org.apache.thrift.protocol.TField("exclude_host", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField AREA_VALUE_FIELD_DESC = new org.apache.thrift.protocol.TField("area_value", org.apache.thrift.protocol.TType.STRING, (short)12);
  private static final org.apache.thrift.protocol.TField AREA_LABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("area_lable", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField ENABLED_FIELD_DESC = new org.apache.thrift.protocol.TField("enabled", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField CTIME_FIELD_DESC = new org.apache.thrift.protocol.TField("ctime", org.apache.thrift.protocol.TType.I32, (short)15);
  private static final org.apache.thrift.protocol.TField MTIME_FIELD_DESC = new org.apache.thrift.protocol.TField("mtime", org.apache.thrift.protocol.TType.I32, (short)16);
  private static final org.apache.thrift.protocol.TField MEDIA_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("media_type", org.apache.thrift.protocol.TType.I32, (short)17);
  private static final org.apache.thrift.protocol.TField BID_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("bid_price", org.apache.thrift.protocol.TType.DOUBLE, (short)18);
  private static final org.apache.thrift.protocol.TField FLOW_SRC_FIELD_DESC = new org.apache.thrift.protocol.TField("flow_src", org.apache.thrift.protocol.TType.I32, (short)19);
  private static final org.apache.thrift.protocol.TField COLUM1_FIELD_DESC = new org.apache.thrift.protocol.TField("colum1", org.apache.thrift.protocol.TType.I32, (short)20);
  private static final org.apache.thrift.protocol.TField COLUM2_FIELD_DESC = new org.apache.thrift.protocol.TField("colum2", org.apache.thrift.protocol.TType.STRING, (short)21);
  private static final org.apache.thrift.protocol.TField MEDIA_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("media_name", org.apache.thrift.protocol.TType.STRING, (short)22);
  private static final org.apache.thrift.protocol.TField POLICYS_FIELD_DESC = new org.apache.thrift.protocol.TField("policys", org.apache.thrift.protocol.TType.LIST, (short)23);
  private static final org.apache.thrift.protocol.TField HOSTS_FIELD_DESC = new org.apache.thrift.protocol.TField("hosts", org.apache.thrift.protocol.TType.LIST, (short)24);
  private static final org.apache.thrift.protocol.TField TIME_INTERVAL_FIELD_DESC = new org.apache.thrift.protocol.TField("time_interval", org.apache.thrift.protocol.TType.I32, (short)25);
  private static final org.apache.thrift.protocol.TField DAY_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("day_num", org.apache.thrift.protocol.TType.I32, (short)26);
  private static final org.apache.thrift.protocol.TField SHOW_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("show_num", org.apache.thrift.protocol.TType.I32, (short)27);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new AdGroupStandardSchemeFactory());
    schemes.put(TupleScheme.class, new AdGroupTupleSchemeFactory());
  }

  public int group_id; // required
  public String name; // required
  public int uid; // required
  public int version; // required
  public int plan_id; // required
  public int start_date; // required
  public int end_date; // required
  public int freq; // required
  public int is_first_page; // required
  public String include_host; // required
  public String exclude_host; // required
  public String area_value; // required
  public String area_lable; // required
  /**
   * 
   * @see com.adp.java.PlanStatus
   */
  public com.adp.java.PlanStatus enabled; // required
  public int ctime; // required
  public int mtime; // required
  /**
   * 
   * @see com.adp.java.NetWorkType
   */
  public com.adp.java.NetWorkType media_type; // required
  public double bid_price; // required
  /**
   * 
   * @see com.adp.java.FlowSrc
   */
  public com.adp.java.FlowSrc flow_src; // required
  public int colum1; // required
  public String colum2; // required
  public String media_name; // required
  public List<AdGroupPolicy> policys; // required
  public List<AdGroupHost> hosts; // required
  public int time_interval; // required
  public int day_num; // required
  public int show_num; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    GROUP_ID((short)1, "group_id"),
    NAME((short)2, "name"),
    UID((short)3, "uid"),
    VERSION((short)4, "version"),
    PLAN_ID((short)5, "plan_id"),
    START_DATE((short)6, "start_date"),
    END_DATE((short)7, "end_date"),
    FREQ((short)8, "freq"),
    IS_FIRST_PAGE((short)9, "is_first_page"),
    INCLUDE_HOST((short)10, "include_host"),
    EXCLUDE_HOST((short)11, "exclude_host"),
    AREA_VALUE((short)12, "area_value"),
    AREA_LABLE((short)13, "area_lable"),
    /**
     * 
     * @see com.adp.java.PlanStatus
     */
    ENABLED((short)14, "enabled"),
    CTIME((short)15, "ctime"),
    MTIME((short)16, "mtime"),
    /**
     * 
     * @see com.adp.java.NetWorkType
     */
    MEDIA_TYPE((short)17, "media_type"),
    BID_PRICE((short)18, "bid_price"),
    /**
     * 
     * @see com.adp.java.FlowSrc
     */
    FLOW_SRC((short)19, "flow_src"),
    COLUM1((short)20, "colum1"),
    COLUM2((short)21, "colum2"),
    MEDIA_NAME((short)22, "media_name"),
    POLICYS((short)23, "policys"),
    HOSTS((short)24, "hosts"),
    TIME_INTERVAL((short)25, "time_interval"),
    DAY_NUM((short)26, "day_num"),
    SHOW_NUM((short)27, "show_num");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // GROUP_ID
          return GROUP_ID;
        case 2: // NAME
          return NAME;
        case 3: // UID
          return UID;
        case 4: // VERSION
          return VERSION;
        case 5: // PLAN_ID
          return PLAN_ID;
        case 6: // START_DATE
          return START_DATE;
        case 7: // END_DATE
          return END_DATE;
        case 8: // FREQ
          return FREQ;
        case 9: // IS_FIRST_PAGE
          return IS_FIRST_PAGE;
        case 10: // INCLUDE_HOST
          return INCLUDE_HOST;
        case 11: // EXCLUDE_HOST
          return EXCLUDE_HOST;
        case 12: // AREA_VALUE
          return AREA_VALUE;
        case 13: // AREA_LABLE
          return AREA_LABLE;
        case 14: // ENABLED
          return ENABLED;
        case 15: // CTIME
          return CTIME;
        case 16: // MTIME
          return MTIME;
        case 17: // MEDIA_TYPE
          return MEDIA_TYPE;
        case 18: // BID_PRICE
          return BID_PRICE;
        case 19: // FLOW_SRC
          return FLOW_SRC;
        case 20: // COLUM1
          return COLUM1;
        case 21: // COLUM2
          return COLUM2;
        case 22: // MEDIA_NAME
          return MEDIA_NAME;
        case 23: // POLICYS
          return POLICYS;
        case 24: // HOSTS
          return HOSTS;
        case 25: // TIME_INTERVAL
          return TIME_INTERVAL;
        case 26: // DAY_NUM
          return DAY_NUM;
        case 27: // SHOW_NUM
          return SHOW_NUM;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __GROUP_ID_ISSET_ID = 0;
  private static final int __UID_ISSET_ID = 1;
  private static final int __VERSION_ISSET_ID = 2;
  private static final int __PLAN_ID_ISSET_ID = 3;
  private static final int __START_DATE_ISSET_ID = 4;
  private static final int __END_DATE_ISSET_ID = 5;
  private static final int __FREQ_ISSET_ID = 6;
  private static final int __IS_FIRST_PAGE_ISSET_ID = 7;
  private static final int __CTIME_ISSET_ID = 8;
  private static final int __MTIME_ISSET_ID = 9;
  private static final int __BID_PRICE_ISSET_ID = 10;
  private static final int __COLUM1_ISSET_ID = 11;
  private static final int __TIME_INTERVAL_ISSET_ID = 12;
  private static final int __DAY_NUM_ISSET_ID = 13;
  private static final int __SHOW_NUM_ISSET_ID = 14;
  private BitSet __isset_bit_vector = new BitSet(15);
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.GROUP_ID, new org.apache.thrift.meta_data.FieldMetaData("group_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UID, new org.apache.thrift.meta_data.FieldMetaData("uid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.VERSION, new org.apache.thrift.meta_data.FieldMetaData("version", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PLAN_ID, new org.apache.thrift.meta_data.FieldMetaData("plan_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.START_DATE, new org.apache.thrift.meta_data.FieldMetaData("start_date", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.END_DATE, new org.apache.thrift.meta_data.FieldMetaData("end_date", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FREQ, new org.apache.thrift.meta_data.FieldMetaData("freq", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.IS_FIRST_PAGE, new org.apache.thrift.meta_data.FieldMetaData("is_first_page", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.INCLUDE_HOST, new org.apache.thrift.meta_data.FieldMetaData("include_host", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXCLUDE_HOST, new org.apache.thrift.meta_data.FieldMetaData("exclude_host", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_VALUE, new org.apache.thrift.meta_data.FieldMetaData("area_value", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AREA_LABLE, new org.apache.thrift.meta_data.FieldMetaData("area_lable", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ENABLED, new org.apache.thrift.meta_data.FieldMetaData("enabled", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.adp.java.PlanStatus.class)));
    tmpMap.put(_Fields.CTIME, new org.apache.thrift.meta_data.FieldMetaData("ctime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MTIME, new org.apache.thrift.meta_data.FieldMetaData("mtime", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.MEDIA_TYPE, new org.apache.thrift.meta_data.FieldMetaData("media_type", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.adp.java.NetWorkType.class)));
    tmpMap.put(_Fields.BID_PRICE, new org.apache.thrift.meta_data.FieldMetaData("bid_price", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.FLOW_SRC, new org.apache.thrift.meta_data.FieldMetaData("flow_src", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.adp.java.FlowSrc.class)));
    tmpMap.put(_Fields.COLUM1, new org.apache.thrift.meta_data.FieldMetaData("colum1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COLUM2, new org.apache.thrift.meta_data.FieldMetaData("colum2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEDIA_NAME, new org.apache.thrift.meta_data.FieldMetaData("media_name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.POLICYS, new org.apache.thrift.meta_data.FieldMetaData("policys", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AdGroupPolicy.class))));
    tmpMap.put(_Fields.HOSTS, new org.apache.thrift.meta_data.FieldMetaData("hosts", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, AdGroupHost.class))));
    tmpMap.put(_Fields.TIME_INTERVAL, new org.apache.thrift.meta_data.FieldMetaData("time_interval", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.DAY_NUM, new org.apache.thrift.meta_data.FieldMetaData("day_num", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SHOW_NUM, new org.apache.thrift.meta_data.FieldMetaData("show_num", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(AdGroup.class, metaDataMap);
  }

  public AdGroup() {
    this.enabled = com.adp.java.PlanStatus.RUNNING;

    this.media_type = com.adp.java.NetWorkType.HARD_LINK;

    this.flow_src = com.adp.java.FlowSrc.tanx;

  }

  public AdGroup(
    int group_id,
    String name,
    int uid,
    int version,
    int plan_id,
    int start_date,
    int end_date,
    int freq,
    int is_first_page,
    String include_host,
    String exclude_host,
    String area_value,
    String area_lable,
    com.adp.java.PlanStatus enabled,
    int ctime,
    int mtime,
    com.adp.java.NetWorkType media_type,
    double bid_price,
    com.adp.java.FlowSrc flow_src,
    int colum1,
    String colum2,
    String media_name,
    List<AdGroupPolicy> policys,
    List<AdGroupHost> hosts,
    int time_interval,
    int day_num,
    int show_num)
  {
    this();
    this.group_id = group_id;
    setGroup_idIsSet(true);
    this.name = name;
    this.uid = uid;
    setUidIsSet(true);
    this.version = version;
    setVersionIsSet(true);
    this.plan_id = plan_id;
    setPlan_idIsSet(true);
    this.start_date = start_date;
    setStart_dateIsSet(true);
    this.end_date = end_date;
    setEnd_dateIsSet(true);
    this.freq = freq;
    setFreqIsSet(true);
    this.is_first_page = is_first_page;
    setIs_first_pageIsSet(true);
    this.include_host = include_host;
    this.exclude_host = exclude_host;
    this.area_value = area_value;
    this.area_lable = area_lable;
    this.enabled = enabled;
    this.ctime = ctime;
    setCtimeIsSet(true);
    this.mtime = mtime;
    setMtimeIsSet(true);
    this.media_type = media_type;
    this.bid_price = bid_price;
    setBid_priceIsSet(true);
    this.flow_src = flow_src;
    this.colum1 = colum1;
    setColum1IsSet(true);
    this.colum2 = colum2;
    this.media_name = media_name;
    this.policys = policys;
    this.hosts = hosts;
    this.time_interval = time_interval;
    setTime_intervalIsSet(true);
    this.day_num = day_num;
    setDay_numIsSet(true);
    this.show_num = show_num;
    setShow_numIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public AdGroup(AdGroup other) {
    __isset_bit_vector.clear();
    __isset_bit_vector.or(other.__isset_bit_vector);
    this.group_id = other.group_id;
    if (other.isSetName()) {
      this.name = other.name;
    }
    this.uid = other.uid;
    this.version = other.version;
    this.plan_id = other.plan_id;
    this.start_date = other.start_date;
    this.end_date = other.end_date;
    this.freq = other.freq;
    this.is_first_page = other.is_first_page;
    if (other.isSetInclude_host()) {
      this.include_host = other.include_host;
    }
    if (other.isSetExclude_host()) {
      this.exclude_host = other.exclude_host;
    }
    if (other.isSetArea_value()) {
      this.area_value = other.area_value;
    }
    if (other.isSetArea_lable()) {
      this.area_lable = other.area_lable;
    }
    if (other.isSetEnabled()) {
      this.enabled = other.enabled;
    }
    this.ctime = other.ctime;
    this.mtime = other.mtime;
    if (other.isSetMedia_type()) {
      this.media_type = other.media_type;
    }
    this.bid_price = other.bid_price;
    if (other.isSetFlow_src()) {
      this.flow_src = other.flow_src;
    }
    this.colum1 = other.colum1;
    if (other.isSetColum2()) {
      this.colum2 = other.colum2;
    }
    if (other.isSetMedia_name()) {
      this.media_name = other.media_name;
    }
    if (other.isSetPolicys()) {
      List<AdGroupPolicy> __this__policys = new ArrayList<AdGroupPolicy>();
      for (AdGroupPolicy other_element : other.policys) {
        __this__policys.add(new AdGroupPolicy(other_element));
      }
      this.policys = __this__policys;
    }
    if (other.isSetHosts()) {
      List<AdGroupHost> __this__hosts = new ArrayList<AdGroupHost>();
      for (AdGroupHost other_element : other.hosts) {
        __this__hosts.add(new AdGroupHost(other_element));
      }
      this.hosts = __this__hosts;
    }
    this.time_interval = other.time_interval;
    this.day_num = other.day_num;
    this.show_num = other.show_num;
  }

  public AdGroup deepCopy() {
    return new AdGroup(this);
  }

  @Override
  public void clear() {
    setGroup_idIsSet(false);
    this.group_id = 0;
    this.name = null;
    setUidIsSet(false);
    this.uid = 0;
    setVersionIsSet(false);
    this.version = 0;
    setPlan_idIsSet(false);
    this.plan_id = 0;
    setStart_dateIsSet(false);
    this.start_date = 0;
    setEnd_dateIsSet(false);
    this.end_date = 0;
    setFreqIsSet(false);
    this.freq = 0;
    setIs_first_pageIsSet(false);
    this.is_first_page = 0;
    this.include_host = null;
    this.exclude_host = null;
    this.area_value = null;
    this.area_lable = null;
    this.enabled = com.adp.java.PlanStatus.RUNNING;

    setCtimeIsSet(false);
    this.ctime = 0;
    setMtimeIsSet(false);
    this.mtime = 0;
    this.media_type = com.adp.java.NetWorkType.HARD_LINK;

    setBid_priceIsSet(false);
    this.bid_price = 0.0;
    this.flow_src = com.adp.java.FlowSrc.tanx;

    setColum1IsSet(false);
    this.colum1 = 0;
    this.colum2 = null;
    this.media_name = null;
    this.policys = null;
    this.hosts = null;
    setTime_intervalIsSet(false);
    this.time_interval = 0;
    setDay_numIsSet(false);
    this.day_num = 0;
    setShow_numIsSet(false);
    this.show_num = 0;
  }

  public int getGroup_id() {
    return this.group_id;
  }

  public AdGroup setGroup_id(int group_id) {
    this.group_id = group_id;
    setGroup_idIsSet(true);
    return this;
  }

  public void unsetGroup_id() {
    __isset_bit_vector.clear(__GROUP_ID_ISSET_ID);
  }

  /** Returns true if field group_id is set (has been assigned a value) and false otherwise */
  public boolean isSetGroup_id() {
    return __isset_bit_vector.get(__GROUP_ID_ISSET_ID);
  }

  public void setGroup_idIsSet(boolean value) {
    __isset_bit_vector.set(__GROUP_ID_ISSET_ID, value);
  }

  public String getName() {
    return this.name;
  }

  public AdGroup setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public int getUid() {
    return this.uid;
  }

  public AdGroup setUid(int uid) {
    this.uid = uid;
    setUidIsSet(true);
    return this;
  }

  public void unsetUid() {
    __isset_bit_vector.clear(__UID_ISSET_ID);
  }

  /** Returns true if field uid is set (has been assigned a value) and false otherwise */
  public boolean isSetUid() {
    return __isset_bit_vector.get(__UID_ISSET_ID);
  }

  public void setUidIsSet(boolean value) {
    __isset_bit_vector.set(__UID_ISSET_ID, value);
  }

  public int getVersion() {
    return this.version;
  }

  public AdGroup setVersion(int version) {
    this.version = version;
    setVersionIsSet(true);
    return this;
  }

  public void unsetVersion() {
    __isset_bit_vector.clear(__VERSION_ISSET_ID);
  }

  /** Returns true if field version is set (has been assigned a value) and false otherwise */
  public boolean isSetVersion() {
    return __isset_bit_vector.get(__VERSION_ISSET_ID);
  }

  public void setVersionIsSet(boolean value) {
    __isset_bit_vector.set(__VERSION_ISSET_ID, value);
  }

  public int getPlan_id() {
    return this.plan_id;
  }

  public AdGroup setPlan_id(int plan_id) {
    this.plan_id = plan_id;
    setPlan_idIsSet(true);
    return this;
  }

  public void unsetPlan_id() {
    __isset_bit_vector.clear(__PLAN_ID_ISSET_ID);
  }

  /** Returns true if field plan_id is set (has been assigned a value) and false otherwise */
  public boolean isSetPlan_id() {
    return __isset_bit_vector.get(__PLAN_ID_ISSET_ID);
  }

  public void setPlan_idIsSet(boolean value) {
    __isset_bit_vector.set(__PLAN_ID_ISSET_ID, value);
  }

  public int getStart_date() {
    return this.start_date;
  }

  public AdGroup setStart_date(int start_date) {
    this.start_date = start_date;
    setStart_dateIsSet(true);
    return this;
  }

  public void unsetStart_date() {
    __isset_bit_vector.clear(__START_DATE_ISSET_ID);
  }

  /** Returns true if field start_date is set (has been assigned a value) and false otherwise */
  public boolean isSetStart_date() {
    return __isset_bit_vector.get(__START_DATE_ISSET_ID);
  }

  public void setStart_dateIsSet(boolean value) {
    __isset_bit_vector.set(__START_DATE_ISSET_ID, value);
  }

  public int getEnd_date() {
    return this.end_date;
  }

  public AdGroup setEnd_date(int end_date) {
    this.end_date = end_date;
    setEnd_dateIsSet(true);
    return this;
  }

  public void unsetEnd_date() {
    __isset_bit_vector.clear(__END_DATE_ISSET_ID);
  }

  /** Returns true if field end_date is set (has been assigned a value) and false otherwise */
  public boolean isSetEnd_date() {
    return __isset_bit_vector.get(__END_DATE_ISSET_ID);
  }

  public void setEnd_dateIsSet(boolean value) {
    __isset_bit_vector.set(__END_DATE_ISSET_ID, value);
  }

  public int getFreq() {
    return this.freq;
  }

  public AdGroup setFreq(int freq) {
    this.freq = freq;
    setFreqIsSet(true);
    return this;
  }

  public void unsetFreq() {
    __isset_bit_vector.clear(__FREQ_ISSET_ID);
  }

  /** Returns true if field freq is set (has been assigned a value) and false otherwise */
  public boolean isSetFreq() {
    return __isset_bit_vector.get(__FREQ_ISSET_ID);
  }

  public void setFreqIsSet(boolean value) {
    __isset_bit_vector.set(__FREQ_ISSET_ID, value);
  }

  public int getIs_first_page() {
    return this.is_first_page;
  }

  public AdGroup setIs_first_page(int is_first_page) {
    this.is_first_page = is_first_page;
    setIs_first_pageIsSet(true);
    return this;
  }

  public void unsetIs_first_page() {
    __isset_bit_vector.clear(__IS_FIRST_PAGE_ISSET_ID);
  }

  /** Returns true if field is_first_page is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_first_page() {
    return __isset_bit_vector.get(__IS_FIRST_PAGE_ISSET_ID);
  }

  public void setIs_first_pageIsSet(boolean value) {
    __isset_bit_vector.set(__IS_FIRST_PAGE_ISSET_ID, value);
  }

  public String getInclude_host() {
    return this.include_host;
  }

  public AdGroup setInclude_host(String include_host) {
    this.include_host = include_host;
    return this;
  }

  public void unsetInclude_host() {
    this.include_host = null;
  }

  /** Returns true if field include_host is set (has been assigned a value) and false otherwise */
  public boolean isSetInclude_host() {
    return this.include_host != null;
  }

  public void setInclude_hostIsSet(boolean value) {
    if (!value) {
      this.include_host = null;
    }
  }

  public String getExclude_host() {
    return this.exclude_host;
  }

  public AdGroup setExclude_host(String exclude_host) {
    this.exclude_host = exclude_host;
    return this;
  }

  public void unsetExclude_host() {
    this.exclude_host = null;
  }

  /** Returns true if field exclude_host is set (has been assigned a value) and false otherwise */
  public boolean isSetExclude_host() {
    return this.exclude_host != null;
  }

  public void setExclude_hostIsSet(boolean value) {
    if (!value) {
      this.exclude_host = null;
    }
  }

  public String getArea_value() {
    return this.area_value;
  }

  public AdGroup setArea_value(String area_value) {
    this.area_value = area_value;
    return this;
  }

  public void unsetArea_value() {
    this.area_value = null;
  }

  /** Returns true if field area_value is set (has been assigned a value) and false otherwise */
  public boolean isSetArea_value() {
    return this.area_value != null;
  }

  public void setArea_valueIsSet(boolean value) {
    if (!value) {
      this.area_value = null;
    }
  }

  public String getArea_lable() {
    return this.area_lable;
  }

  public AdGroup setArea_lable(String area_lable) {
    this.area_lable = area_lable;
    return this;
  }

  public void unsetArea_lable() {
    this.area_lable = null;
  }

  /** Returns true if field area_lable is set (has been assigned a value) and false otherwise */
  public boolean isSetArea_lable() {
    return this.area_lable != null;
  }

  public void setArea_lableIsSet(boolean value) {
    if (!value) {
      this.area_lable = null;
    }
  }

  /**
   * 
   * @see com.adp.java.PlanStatus
   */
  public com.adp.java.PlanStatus getEnabled() {
    return this.enabled;
  }

  /**
   * 
   * @see com.adp.java.PlanStatus
   */
  public AdGroup setEnabled(com.adp.java.PlanStatus enabled) {
    this.enabled = enabled;
    return this;
  }

  public void unsetEnabled() {
    this.enabled = null;
  }

  /** Returns true if field enabled is set (has been assigned a value) and false otherwise */
  public boolean isSetEnabled() {
    return this.enabled != null;
  }

  public void setEnabledIsSet(boolean value) {
    if (!value) {
      this.enabled = null;
    }
  }

  public int getCtime() {
    return this.ctime;
  }

  public AdGroup setCtime(int ctime) {
    this.ctime = ctime;
    setCtimeIsSet(true);
    return this;
  }

  public void unsetCtime() {
    __isset_bit_vector.clear(__CTIME_ISSET_ID);
  }

  /** Returns true if field ctime is set (has been assigned a value) and false otherwise */
  public boolean isSetCtime() {
    return __isset_bit_vector.get(__CTIME_ISSET_ID);
  }

  public void setCtimeIsSet(boolean value) {
    __isset_bit_vector.set(__CTIME_ISSET_ID, value);
  }

  public int getMtime() {
    return this.mtime;
  }

  public AdGroup setMtime(int mtime) {
    this.mtime = mtime;
    setMtimeIsSet(true);
    return this;
  }

  public void unsetMtime() {
    __isset_bit_vector.clear(__MTIME_ISSET_ID);
  }

  /** Returns true if field mtime is set (has been assigned a value) and false otherwise */
  public boolean isSetMtime() {
    return __isset_bit_vector.get(__MTIME_ISSET_ID);
  }

  public void setMtimeIsSet(boolean value) {
    __isset_bit_vector.set(__MTIME_ISSET_ID, value);
  }

  /**
   * 
   * @see com.adp.java.NetWorkType
   */
  public com.adp.java.NetWorkType getMedia_type() {
    return this.media_type;
  }

  /**
   * 
   * @see com.adp.java.NetWorkType
   */
  public AdGroup setMedia_type(com.adp.java.NetWorkType media_type) {
    this.media_type = media_type;
    return this;
  }

  public void unsetMedia_type() {
    this.media_type = null;
  }

  /** Returns true if field media_type is set (has been assigned a value) and false otherwise */
  public boolean isSetMedia_type() {
    return this.media_type != null;
  }

  public void setMedia_typeIsSet(boolean value) {
    if (!value) {
      this.media_type = null;
    }
  }

  public double getBid_price() {
    return this.bid_price;
  }

  public AdGroup setBid_price(double bid_price) {
    this.bid_price = bid_price;
    setBid_priceIsSet(true);
    return this;
  }

  public void unsetBid_price() {
    __isset_bit_vector.clear(__BID_PRICE_ISSET_ID);
  }

  /** Returns true if field bid_price is set (has been assigned a value) and false otherwise */
  public boolean isSetBid_price() {
    return __isset_bit_vector.get(__BID_PRICE_ISSET_ID);
  }

  public void setBid_priceIsSet(boolean value) {
    __isset_bit_vector.set(__BID_PRICE_ISSET_ID, value);
  }

  /**
   * 
   * @see com.adp.java.FlowSrc
   */
  public com.adp.java.FlowSrc getFlow_src() {
    return this.flow_src;
  }

  /**
   * 
   * @see com.adp.java.FlowSrc
   */
  public AdGroup setFlow_src(com.adp.java.FlowSrc flow_src) {
    this.flow_src = flow_src;
    return this;
  }

  public void unsetFlow_src() {
    this.flow_src = null;
  }

  /** Returns true if field flow_src is set (has been assigned a value) and false otherwise */
  public boolean isSetFlow_src() {
    return this.flow_src != null;
  }

  public void setFlow_srcIsSet(boolean value) {
    if (!value) {
      this.flow_src = null;
    }
  }

  public int getColum1() {
    return this.colum1;
  }

  public AdGroup setColum1(int colum1) {
    this.colum1 = colum1;
    setColum1IsSet(true);
    return this;
  }

  public void unsetColum1() {
    __isset_bit_vector.clear(__COLUM1_ISSET_ID);
  }

  /** Returns true if field colum1 is set (has been assigned a value) and false otherwise */
  public boolean isSetColum1() {
    return __isset_bit_vector.get(__COLUM1_ISSET_ID);
  }

  public void setColum1IsSet(boolean value) {
    __isset_bit_vector.set(__COLUM1_ISSET_ID, value);
  }

  public String getColum2() {
    return this.colum2;
  }

  public AdGroup setColum2(String colum2) {
    this.colum2 = colum2;
    return this;
  }

  public void unsetColum2() {
    this.colum2 = null;
  }

  /** Returns true if field colum2 is set (has been assigned a value) and false otherwise */
  public boolean isSetColum2() {
    return this.colum2 != null;
  }

  public void setColum2IsSet(boolean value) {
    if (!value) {
      this.colum2 = null;
    }
  }

  public String getMedia_name() {
    return this.media_name;
  }

  public AdGroup setMedia_name(String media_name) {
    this.media_name = media_name;
    return this;
  }

  public void unsetMedia_name() {
    this.media_name = null;
  }

  /** Returns true if field media_name is set (has been assigned a value) and false otherwise */
  public boolean isSetMedia_name() {
    return this.media_name != null;
  }

  public void setMedia_nameIsSet(boolean value) {
    if (!value) {
      this.media_name = null;
    }
  }

  public int getPolicysSize() {
    return (this.policys == null) ? 0 : this.policys.size();
  }

  public java.util.Iterator<AdGroupPolicy> getPolicysIterator() {
    return (this.policys == null) ? null : this.policys.iterator();
  }

  public void addToPolicys(AdGroupPolicy elem) {
    if (this.policys == null) {
      this.policys = new ArrayList<AdGroupPolicy>();
    }
    this.policys.add(elem);
  }

  public List<AdGroupPolicy> getPolicys() {
    return this.policys;
  }

  public AdGroup setPolicys(List<AdGroupPolicy> policys) {
    this.policys = policys;
    return this;
  }

  public void unsetPolicys() {
    this.policys = null;
  }

  /** Returns true if field policys is set (has been assigned a value) and false otherwise */
  public boolean isSetPolicys() {
    return this.policys != null;
  }

  public void setPolicysIsSet(boolean value) {
    if (!value) {
      this.policys = null;
    }
  }

  public int getHostsSize() {
    return (this.hosts == null) ? 0 : this.hosts.size();
  }

  public java.util.Iterator<AdGroupHost> getHostsIterator() {
    return (this.hosts == null) ? null : this.hosts.iterator();
  }

  public void addToHosts(AdGroupHost elem) {
    if (this.hosts == null) {
      this.hosts = new ArrayList<AdGroupHost>();
    }
    this.hosts.add(elem);
  }

  public List<AdGroupHost> getHosts() {
    return this.hosts;
  }

  public AdGroup setHosts(List<AdGroupHost> hosts) {
    this.hosts = hosts;
    return this;
  }

  public void unsetHosts() {
    this.hosts = null;
  }

  /** Returns true if field hosts is set (has been assigned a value) and false otherwise */
  public boolean isSetHosts() {
    return this.hosts != null;
  }

  public void setHostsIsSet(boolean value) {
    if (!value) {
      this.hosts = null;
    }
  }

  public int getTime_interval() {
    return this.time_interval;
  }

  public AdGroup setTime_interval(int time_interval) {
    this.time_interval = time_interval;
    setTime_intervalIsSet(true);
    return this;
  }

  public void unsetTime_interval() {
    __isset_bit_vector.clear(__TIME_INTERVAL_ISSET_ID);
  }

  /** Returns true if field time_interval is set (has been assigned a value) and false otherwise */
  public boolean isSetTime_interval() {
    return __isset_bit_vector.get(__TIME_INTERVAL_ISSET_ID);
  }

  public void setTime_intervalIsSet(boolean value) {
    __isset_bit_vector.set(__TIME_INTERVAL_ISSET_ID, value);
  }

  public int getDay_num() {
    return this.day_num;
  }

  public AdGroup setDay_num(int day_num) {
    this.day_num = day_num;
    setDay_numIsSet(true);
    return this;
  }

  public void unsetDay_num() {
    __isset_bit_vector.clear(__DAY_NUM_ISSET_ID);
  }

  /** Returns true if field day_num is set (has been assigned a value) and false otherwise */
  public boolean isSetDay_num() {
    return __isset_bit_vector.get(__DAY_NUM_ISSET_ID);
  }

  public void setDay_numIsSet(boolean value) {
    __isset_bit_vector.set(__DAY_NUM_ISSET_ID, value);
  }

  public int getShow_num() {
    return this.show_num;
  }

  public AdGroup setShow_num(int show_num) {
    this.show_num = show_num;
    setShow_numIsSet(true);
    return this;
  }

  public void unsetShow_num() {
    __isset_bit_vector.clear(__SHOW_NUM_ISSET_ID);
  }

  /** Returns true if field show_num is set (has been assigned a value) and false otherwise */
  public boolean isSetShow_num() {
    return __isset_bit_vector.get(__SHOW_NUM_ISSET_ID);
  }

  public void setShow_numIsSet(boolean value) {
    __isset_bit_vector.set(__SHOW_NUM_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case GROUP_ID:
      if (value == null) {
        unsetGroup_id();
      } else {
        setGroup_id((Integer)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case UID:
      if (value == null) {
        unsetUid();
      } else {
        setUid((Integer)value);
      }
      break;

    case VERSION:
      if (value == null) {
        unsetVersion();
      } else {
        setVersion((Integer)value);
      }
      break;

    case PLAN_ID:
      if (value == null) {
        unsetPlan_id();
      } else {
        setPlan_id((Integer)value);
      }
      break;

    case START_DATE:
      if (value == null) {
        unsetStart_date();
      } else {
        setStart_date((Integer)value);
      }
      break;

    case END_DATE:
      if (value == null) {
        unsetEnd_date();
      } else {
        setEnd_date((Integer)value);
      }
      break;

    case FREQ:
      if (value == null) {
        unsetFreq();
      } else {
        setFreq((Integer)value);
      }
      break;

    case IS_FIRST_PAGE:
      if (value == null) {
        unsetIs_first_page();
      } else {
        setIs_first_page((Integer)value);
      }
      break;

    case INCLUDE_HOST:
      if (value == null) {
        unsetInclude_host();
      } else {
        setInclude_host((String)value);
      }
      break;

    case EXCLUDE_HOST:
      if (value == null) {
        unsetExclude_host();
      } else {
        setExclude_host((String)value);
      }
      break;

    case AREA_VALUE:
      if (value == null) {
        unsetArea_value();
      } else {
        setArea_value((String)value);
      }
      break;

    case AREA_LABLE:
      if (value == null) {
        unsetArea_lable();
      } else {
        setArea_lable((String)value);
      }
      break;

    case ENABLED:
      if (value == null) {
        unsetEnabled();
      } else {
        setEnabled((com.adp.java.PlanStatus)value);
      }
      break;

    case CTIME:
      if (value == null) {
        unsetCtime();
      } else {
        setCtime((Integer)value);
      }
      break;

    case MTIME:
      if (value == null) {
        unsetMtime();
      } else {
        setMtime((Integer)value);
      }
      break;

    case MEDIA_TYPE:
      if (value == null) {
        unsetMedia_type();
      } else {
        setMedia_type((com.adp.java.NetWorkType)value);
      }
      break;

    case BID_PRICE:
      if (value == null) {
        unsetBid_price();
      } else {
        setBid_price((Double)value);
      }
      break;

    case FLOW_SRC:
      if (value == null) {
        unsetFlow_src();
      } else {
        setFlow_src((com.adp.java.FlowSrc)value);
      }
      break;

    case COLUM1:
      if (value == null) {
        unsetColum1();
      } else {
        setColum1((Integer)value);
      }
      break;

    case COLUM2:
      if (value == null) {
        unsetColum2();
      } else {
        setColum2((String)value);
      }
      break;

    case MEDIA_NAME:
      if (value == null) {
        unsetMedia_name();
      } else {
        setMedia_name((String)value);
      }
      break;

    case POLICYS:
      if (value == null) {
        unsetPolicys();
      } else {
        setPolicys((List<AdGroupPolicy>)value);
      }
      break;

    case HOSTS:
      if (value == null) {
        unsetHosts();
      } else {
        setHosts((List<AdGroupHost>)value);
      }
      break;

    case TIME_INTERVAL:
      if (value == null) {
        unsetTime_interval();
      } else {
        setTime_interval((Integer)value);
      }
      break;

    case DAY_NUM:
      if (value == null) {
        unsetDay_num();
      } else {
        setDay_num((Integer)value);
      }
      break;

    case SHOW_NUM:
      if (value == null) {
        unsetShow_num();
      } else {
        setShow_num((Integer)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case GROUP_ID:
      return Integer.valueOf(getGroup_id());

    case NAME:
      return getName();

    case UID:
      return Integer.valueOf(getUid());

    case VERSION:
      return Integer.valueOf(getVersion());

    case PLAN_ID:
      return Integer.valueOf(getPlan_id());

    case START_DATE:
      return Integer.valueOf(getStart_date());

    case END_DATE:
      return Integer.valueOf(getEnd_date());

    case FREQ:
      return Integer.valueOf(getFreq());

    case IS_FIRST_PAGE:
      return Integer.valueOf(getIs_first_page());

    case INCLUDE_HOST:
      return getInclude_host();

    case EXCLUDE_HOST:
      return getExclude_host();

    case AREA_VALUE:
      return getArea_value();

    case AREA_LABLE:
      return getArea_lable();

    case ENABLED:
      return getEnabled();

    case CTIME:
      return Integer.valueOf(getCtime());

    case MTIME:
      return Integer.valueOf(getMtime());

    case MEDIA_TYPE:
      return getMedia_type();

    case BID_PRICE:
      return Double.valueOf(getBid_price());

    case FLOW_SRC:
      return getFlow_src();

    case COLUM1:
      return Integer.valueOf(getColum1());

    case COLUM2:
      return getColum2();

    case MEDIA_NAME:
      return getMedia_name();

    case POLICYS:
      return getPolicys();

    case HOSTS:
      return getHosts();

    case TIME_INTERVAL:
      return Integer.valueOf(getTime_interval());

    case DAY_NUM:
      return Integer.valueOf(getDay_num());

    case SHOW_NUM:
      return Integer.valueOf(getShow_num());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case GROUP_ID:
      return isSetGroup_id();
    case NAME:
      return isSetName();
    case UID:
      return isSetUid();
    case VERSION:
      return isSetVersion();
    case PLAN_ID:
      return isSetPlan_id();
    case START_DATE:
      return isSetStart_date();
    case END_DATE:
      return isSetEnd_date();
    case FREQ:
      return isSetFreq();
    case IS_FIRST_PAGE:
      return isSetIs_first_page();
    case INCLUDE_HOST:
      return isSetInclude_host();
    case EXCLUDE_HOST:
      return isSetExclude_host();
    case AREA_VALUE:
      return isSetArea_value();
    case AREA_LABLE:
      return isSetArea_lable();
    case ENABLED:
      return isSetEnabled();
    case CTIME:
      return isSetCtime();
    case MTIME:
      return isSetMtime();
    case MEDIA_TYPE:
      return isSetMedia_type();
    case BID_PRICE:
      return isSetBid_price();
    case FLOW_SRC:
      return isSetFlow_src();
    case COLUM1:
      return isSetColum1();
    case COLUM2:
      return isSetColum2();
    case MEDIA_NAME:
      return isSetMedia_name();
    case POLICYS:
      return isSetPolicys();
    case HOSTS:
      return isSetHosts();
    case TIME_INTERVAL:
      return isSetTime_interval();
    case DAY_NUM:
      return isSetDay_num();
    case SHOW_NUM:
      return isSetShow_num();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AdGroup)
      return this.equals((AdGroup)that);
    return false;
  }

  public boolean equals(AdGroup that) {
    if (that == null)
      return false;

    boolean this_present_group_id = true;
    boolean that_present_group_id = true;
    if (this_present_group_id || that_present_group_id) {
      if (!(this_present_group_id && that_present_group_id))
        return false;
      if (this.group_id != that.group_id)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_uid = true;
    boolean that_present_uid = true;
    if (this_present_uid || that_present_uid) {
      if (!(this_present_uid && that_present_uid))
        return false;
      if (this.uid != that.uid)
        return false;
    }

    boolean this_present_version = true;
    boolean that_present_version = true;
    if (this_present_version || that_present_version) {
      if (!(this_present_version && that_present_version))
        return false;
      if (this.version != that.version)
        return false;
    }

    boolean this_present_plan_id = true;
    boolean that_present_plan_id = true;
    if (this_present_plan_id || that_present_plan_id) {
      if (!(this_present_plan_id && that_present_plan_id))
        return false;
      if (this.plan_id != that.plan_id)
        return false;
    }

    boolean this_present_start_date = true;
    boolean that_present_start_date = true;
    if (this_present_start_date || that_present_start_date) {
      if (!(this_present_start_date && that_present_start_date))
        return false;
      if (this.start_date != that.start_date)
        return false;
    }

    boolean this_present_end_date = true;
    boolean that_present_end_date = true;
    if (this_present_end_date || that_present_end_date) {
      if (!(this_present_end_date && that_present_end_date))
        return false;
      if (this.end_date != that.end_date)
        return false;
    }

    boolean this_present_freq = true;
    boolean that_present_freq = true;
    if (this_present_freq || that_present_freq) {
      if (!(this_present_freq && that_present_freq))
        return false;
      if (this.freq != that.freq)
        return false;
    }

    boolean this_present_is_first_page = true;
    boolean that_present_is_first_page = true;
    if (this_present_is_first_page || that_present_is_first_page) {
      if (!(this_present_is_first_page && that_present_is_first_page))
        return false;
      if (this.is_first_page != that.is_first_page)
        return false;
    }

    boolean this_present_include_host = true && this.isSetInclude_host();
    boolean that_present_include_host = true && that.isSetInclude_host();
    if (this_present_include_host || that_present_include_host) {
      if (!(this_present_include_host && that_present_include_host))
        return false;
      if (!this.include_host.equals(that.include_host))
        return false;
    }

    boolean this_present_exclude_host = true && this.isSetExclude_host();
    boolean that_present_exclude_host = true && that.isSetExclude_host();
    if (this_present_exclude_host || that_present_exclude_host) {
      if (!(this_present_exclude_host && that_present_exclude_host))
        return false;
      if (!this.exclude_host.equals(that.exclude_host))
        return false;
    }

    boolean this_present_area_value = true && this.isSetArea_value();
    boolean that_present_area_value = true && that.isSetArea_value();
    if (this_present_area_value || that_present_area_value) {
      if (!(this_present_area_value && that_present_area_value))
        return false;
      if (!this.area_value.equals(that.area_value))
        return false;
    }

    boolean this_present_area_lable = true && this.isSetArea_lable();
    boolean that_present_area_lable = true && that.isSetArea_lable();
    if (this_present_area_lable || that_present_area_lable) {
      if (!(this_present_area_lable && that_present_area_lable))
        return false;
      if (!this.area_lable.equals(that.area_lable))
        return false;
    }

    boolean this_present_enabled = true && this.isSetEnabled();
    boolean that_present_enabled = true && that.isSetEnabled();
    if (this_present_enabled || that_present_enabled) {
      if (!(this_present_enabled && that_present_enabled))
        return false;
      if (!this.enabled.equals(that.enabled))
        return false;
    }

    boolean this_present_ctime = true;
    boolean that_present_ctime = true;
    if (this_present_ctime || that_present_ctime) {
      if (!(this_present_ctime && that_present_ctime))
        return false;
      if (this.ctime != that.ctime)
        return false;
    }

    boolean this_present_mtime = true;
    boolean that_present_mtime = true;
    if (this_present_mtime || that_present_mtime) {
      if (!(this_present_mtime && that_present_mtime))
        return false;
      if (this.mtime != that.mtime)
        return false;
    }

    boolean this_present_media_type = true && this.isSetMedia_type();
    boolean that_present_media_type = true && that.isSetMedia_type();
    if (this_present_media_type || that_present_media_type) {
      if (!(this_present_media_type && that_present_media_type))
        return false;
      if (!this.media_type.equals(that.media_type))
        return false;
    }

    boolean this_present_bid_price = true;
    boolean that_present_bid_price = true;
    if (this_present_bid_price || that_present_bid_price) {
      if (!(this_present_bid_price && that_present_bid_price))
        return false;
      if (this.bid_price != that.bid_price)
        return false;
    }

    boolean this_present_flow_src = true && this.isSetFlow_src();
    boolean that_present_flow_src = true && that.isSetFlow_src();
    if (this_present_flow_src || that_present_flow_src) {
      if (!(this_present_flow_src && that_present_flow_src))
        return false;
      if (!this.flow_src.equals(that.flow_src))
        return false;
    }

    boolean this_present_colum1 = true;
    boolean that_present_colum1 = true;
    if (this_present_colum1 || that_present_colum1) {
      if (!(this_present_colum1 && that_present_colum1))
        return false;
      if (this.colum1 != that.colum1)
        return false;
    }

    boolean this_present_colum2 = true && this.isSetColum2();
    boolean that_present_colum2 = true && that.isSetColum2();
    if (this_present_colum2 || that_present_colum2) {
      if (!(this_present_colum2 && that_present_colum2))
        return false;
      if (!this.colum2.equals(that.colum2))
        return false;
    }

    boolean this_present_media_name = true && this.isSetMedia_name();
    boolean that_present_media_name = true && that.isSetMedia_name();
    if (this_present_media_name || that_present_media_name) {
      if (!(this_present_media_name && that_present_media_name))
        return false;
      if (!this.media_name.equals(that.media_name))
        return false;
    }

    boolean this_present_policys = true && this.isSetPolicys();
    boolean that_present_policys = true && that.isSetPolicys();
    if (this_present_policys || that_present_policys) {
      if (!(this_present_policys && that_present_policys))
        return false;
      if (!this.policys.equals(that.policys))
        return false;
    }

    boolean this_present_hosts = true && this.isSetHosts();
    boolean that_present_hosts = true && that.isSetHosts();
    if (this_present_hosts || that_present_hosts) {
      if (!(this_present_hosts && that_present_hosts))
        return false;
      if (!this.hosts.equals(that.hosts))
        return false;
    }

    boolean this_present_time_interval = true;
    boolean that_present_time_interval = true;
    if (this_present_time_interval || that_present_time_interval) {
      if (!(this_present_time_interval && that_present_time_interval))
        return false;
      if (this.time_interval != that.time_interval)
        return false;
    }

    boolean this_present_day_num = true;
    boolean that_present_day_num = true;
    if (this_present_day_num || that_present_day_num) {
      if (!(this_present_day_num && that_present_day_num))
        return false;
      if (this.day_num != that.day_num)
        return false;
    }

    boolean this_present_show_num = true;
    boolean that_present_show_num = true;
    if (this_present_show_num || that_present_show_num) {
      if (!(this_present_show_num && that_present_show_num))
        return false;
      if (this.show_num != that.show_num)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  public int compareTo(AdGroup other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;
    AdGroup typedOther = (AdGroup)other;

    lastComparison = Boolean.valueOf(isSetGroup_id()).compareTo(typedOther.isSetGroup_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGroup_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.group_id, typedOther.group_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(typedOther.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, typedOther.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUid()).compareTo(typedOther.isSetUid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uid, typedOther.uid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetVersion()).compareTo(typedOther.isSetVersion());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVersion()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.version, typedOther.version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlan_id()).compareTo(typedOther.isSetPlan_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlan_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.plan_id, typedOther.plan_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStart_date()).compareTo(typedOther.isSetStart_date());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStart_date()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.start_date, typedOther.start_date);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEnd_date()).compareTo(typedOther.isSetEnd_date());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnd_date()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.end_date, typedOther.end_date);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFreq()).compareTo(typedOther.isSetFreq());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFreq()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.freq, typedOther.freq);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetIs_first_page()).compareTo(typedOther.isSetIs_first_page());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_first_page()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_first_page, typedOther.is_first_page);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetInclude_host()).compareTo(typedOther.isSetInclude_host());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetInclude_host()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.include_host, typedOther.include_host);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExclude_host()).compareTo(typedOther.isSetExclude_host());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExclude_host()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.exclude_host, typedOther.exclude_host);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetArea_value()).compareTo(typedOther.isSetArea_value());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetArea_value()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.area_value, typedOther.area_value);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetArea_lable()).compareTo(typedOther.isSetArea_lable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetArea_lable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.area_lable, typedOther.area_lable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetEnabled()).compareTo(typedOther.isSetEnabled());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnabled()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.enabled, typedOther.enabled);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCtime()).compareTo(typedOther.isSetCtime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCtime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ctime, typedOther.ctime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMtime()).compareTo(typedOther.isSetMtime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMtime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mtime, typedOther.mtime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMedia_type()).compareTo(typedOther.isSetMedia_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMedia_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.media_type, typedOther.media_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBid_price()).compareTo(typedOther.isSetBid_price());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBid_price()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bid_price, typedOther.bid_price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFlow_src()).compareTo(typedOther.isSetFlow_src());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFlow_src()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.flow_src, typedOther.flow_src);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetColum1()).compareTo(typedOther.isSetColum1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetColum1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.colum1, typedOther.colum1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetColum2()).compareTo(typedOther.isSetColum2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetColum2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.colum2, typedOther.colum2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMedia_name()).compareTo(typedOther.isSetMedia_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMedia_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.media_name, typedOther.media_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPolicys()).compareTo(typedOther.isSetPolicys());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPolicys()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.policys, typedOther.policys);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetHosts()).compareTo(typedOther.isSetHosts());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHosts()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.hosts, typedOther.hosts);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTime_interval()).compareTo(typedOther.isSetTime_interval());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTime_interval()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.time_interval, typedOther.time_interval);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDay_num()).compareTo(typedOther.isSetDay_num());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDay_num()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.day_num, typedOther.day_num);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShow_num()).compareTo(typedOther.isSetShow_num());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShow_num()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.show_num, typedOther.show_num);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("AdGroup(");
    boolean first = true;

    sb.append("group_id:");
    sb.append(this.group_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("uid:");
    sb.append(this.uid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("version:");
    sb.append(this.version);
    first = false;
    if (!first) sb.append(", ");
    sb.append("plan_id:");
    sb.append(this.plan_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("start_date:");
    sb.append(this.start_date);
    first = false;
    if (!first) sb.append(", ");
    sb.append("end_date:");
    sb.append(this.end_date);
    first = false;
    if (!first) sb.append(", ");
    sb.append("freq:");
    sb.append(this.freq);
    first = false;
    if (!first) sb.append(", ");
    sb.append("is_first_page:");
    sb.append(this.is_first_page);
    first = false;
    if (!first) sb.append(", ");
    sb.append("include_host:");
    if (this.include_host == null) {
      sb.append("null");
    } else {
      sb.append(this.include_host);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("exclude_host:");
    if (this.exclude_host == null) {
      sb.append("null");
    } else {
      sb.append(this.exclude_host);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("area_value:");
    if (this.area_value == null) {
      sb.append("null");
    } else {
      sb.append(this.area_value);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("area_lable:");
    if (this.area_lable == null) {
      sb.append("null");
    } else {
      sb.append(this.area_lable);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("enabled:");
    if (this.enabled == null) {
      sb.append("null");
    } else {
      sb.append(this.enabled);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ctime:");
    sb.append(this.ctime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("mtime:");
    sb.append(this.mtime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("media_type:");
    if (this.media_type == null) {
      sb.append("null");
    } else {
      sb.append(this.media_type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bid_price:");
    sb.append(this.bid_price);
    first = false;
    if (!first) sb.append(", ");
    sb.append("flow_src:");
    if (this.flow_src == null) {
      sb.append("null");
    } else {
      sb.append(this.flow_src);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("colum1:");
    sb.append(this.colum1);
    first = false;
    if (!first) sb.append(", ");
    sb.append("colum2:");
    if (this.colum2 == null) {
      sb.append("null");
    } else {
      sb.append(this.colum2);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("media_name:");
    if (this.media_name == null) {
      sb.append("null");
    } else {
      sb.append(this.media_name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("policys:");
    if (this.policys == null) {
      sb.append("null");
    } else {
      sb.append(this.policys);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("hosts:");
    if (this.hosts == null) {
      sb.append("null");
    } else {
      sb.append(this.hosts);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("time_interval:");
    sb.append(this.time_interval);
    first = false;
    if (!first) sb.append(", ");
    sb.append("day_num:");
    sb.append(this.day_num);
    first = false;
    if (!first) sb.append(", ");
    sb.append("show_num:");
    sb.append(this.show_num);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bit_vector = new BitSet(1);
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class AdGroupStandardSchemeFactory implements SchemeFactory {
    public AdGroupStandardScheme getScheme() {
      return new AdGroupStandardScheme();
    }
  }

  private static class AdGroupStandardScheme extends StandardScheme<AdGroup> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, AdGroup struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // GROUP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.group_id = iprot.readI32();
              struct.setGroup_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // UID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.uid = iprot.readI32();
              struct.setUidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.version = iprot.readI32();
              struct.setVersionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PLAN_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.plan_id = iprot.readI32();
              struct.setPlan_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // START_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.start_date = iprot.readI32();
              struct.setStart_dateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // END_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.end_date = iprot.readI32();
              struct.setEnd_dateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // FREQ
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.freq = iprot.readI32();
              struct.setFreqIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // IS_FIRST_PAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.is_first_page = iprot.readI32();
              struct.setIs_first_pageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // INCLUDE_HOST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.include_host = iprot.readString();
              struct.setInclude_hostIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // EXCLUDE_HOST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.exclude_host = iprot.readString();
              struct.setExclude_hostIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // AREA_VALUE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.area_value = iprot.readString();
              struct.setArea_valueIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // AREA_LABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.area_lable = iprot.readString();
              struct.setArea_lableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // ENABLED
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.enabled = com.adp.java.PlanStatus.findByValue(iprot.readI32());
              struct.setEnabledIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // CTIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.ctime = iprot.readI32();
              struct.setCtimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // MTIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.mtime = iprot.readI32();
              struct.setMtimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // MEDIA_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.media_type = com.adp.java.NetWorkType.findByValue(iprot.readI32());
              struct.setMedia_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // BID_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.bid_price = iprot.readDouble();
              struct.setBid_priceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // FLOW_SRC
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.flow_src = com.adp.java.FlowSrc.findByValue(iprot.readI32());
              struct.setFlow_srcIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // COLUM1
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.colum1 = iprot.readI32();
              struct.setColum1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // COLUM2
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.colum2 = iprot.readString();
              struct.setColum2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // MEDIA_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.media_name = iprot.readString();
              struct.setMedia_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // POLICYS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list0 = iprot.readListBegin();
                struct.policys = new ArrayList<AdGroupPolicy>(_list0.size);
                for (int _i1 = 0; _i1 < _list0.size; ++_i1)
                {
                  AdGroupPolicy _elem2; // required
                  _elem2 = new AdGroupPolicy();
                  _elem2.read(iprot);
                  struct.policys.add(_elem2);
                }
                iprot.readListEnd();
              }
              struct.setPolicysIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // HOSTS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list3 = iprot.readListBegin();
                struct.hosts = new ArrayList<AdGroupHost>(_list3.size);
                for (int _i4 = 0; _i4 < _list3.size; ++_i4)
                {
                  AdGroupHost _elem5; // required
                  _elem5 = new AdGroupHost();
                  _elem5.read(iprot);
                  struct.hosts.add(_elem5);
                }
                iprot.readListEnd();
              }
              struct.setHostsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // TIME_INTERVAL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.time_interval = iprot.readI32();
              struct.setTime_intervalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // DAY_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.day_num = iprot.readI32();
              struct.setDay_numIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // SHOW_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.show_num = iprot.readI32();
              struct.setShow_numIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, AdGroup struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(GROUP_ID_FIELD_DESC);
      oprot.writeI32(struct.group_id);
      oprot.writeFieldEnd();
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(UID_FIELD_DESC);
      oprot.writeI32(struct.uid);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VERSION_FIELD_DESC);
      oprot.writeI32(struct.version);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PLAN_ID_FIELD_DESC);
      oprot.writeI32(struct.plan_id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(START_DATE_FIELD_DESC);
      oprot.writeI32(struct.start_date);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(END_DATE_FIELD_DESC);
      oprot.writeI32(struct.end_date);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FREQ_FIELD_DESC);
      oprot.writeI32(struct.freq);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_FIRST_PAGE_FIELD_DESC);
      oprot.writeI32(struct.is_first_page);
      oprot.writeFieldEnd();
      if (struct.include_host != null) {
        oprot.writeFieldBegin(INCLUDE_HOST_FIELD_DESC);
        oprot.writeString(struct.include_host);
        oprot.writeFieldEnd();
      }
      if (struct.exclude_host != null) {
        oprot.writeFieldBegin(EXCLUDE_HOST_FIELD_DESC);
        oprot.writeString(struct.exclude_host);
        oprot.writeFieldEnd();
      }
      if (struct.area_value != null) {
        oprot.writeFieldBegin(AREA_VALUE_FIELD_DESC);
        oprot.writeString(struct.area_value);
        oprot.writeFieldEnd();
      }
      if (struct.area_lable != null) {
        oprot.writeFieldBegin(AREA_LABLE_FIELD_DESC);
        oprot.writeString(struct.area_lable);
        oprot.writeFieldEnd();
      }
      if (struct.enabled != null) {
        oprot.writeFieldBegin(ENABLED_FIELD_DESC);
        oprot.writeI32(struct.enabled.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CTIME_FIELD_DESC);
      oprot.writeI32(struct.ctime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MTIME_FIELD_DESC);
      oprot.writeI32(struct.mtime);
      oprot.writeFieldEnd();
      if (struct.media_type != null) {
        oprot.writeFieldBegin(MEDIA_TYPE_FIELD_DESC);
        oprot.writeI32(struct.media_type.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BID_PRICE_FIELD_DESC);
      oprot.writeDouble(struct.bid_price);
      oprot.writeFieldEnd();
      if (struct.flow_src != null) {
        oprot.writeFieldBegin(FLOW_SRC_FIELD_DESC);
        oprot.writeI32(struct.flow_src.getValue());
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(COLUM1_FIELD_DESC);
      oprot.writeI32(struct.colum1);
      oprot.writeFieldEnd();
      if (struct.colum2 != null) {
        oprot.writeFieldBegin(COLUM2_FIELD_DESC);
        oprot.writeString(struct.colum2);
        oprot.writeFieldEnd();
      }
      if (struct.media_name != null) {
        oprot.writeFieldBegin(MEDIA_NAME_FIELD_DESC);
        oprot.writeString(struct.media_name);
        oprot.writeFieldEnd();
      }
      if (struct.policys != null) {
        oprot.writeFieldBegin(POLICYS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.policys.size()));
          for (AdGroupPolicy _iter6 : struct.policys)
          {
            _iter6.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.hosts != null) {
        oprot.writeFieldBegin(HOSTS_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.hosts.size()));
          for (AdGroupHost _iter7 : struct.hosts)
          {
            _iter7.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TIME_INTERVAL_FIELD_DESC);
      oprot.writeI32(struct.time_interval);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DAY_NUM_FIELD_DESC);
      oprot.writeI32(struct.day_num);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SHOW_NUM_FIELD_DESC);
      oprot.writeI32(struct.show_num);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class AdGroupTupleSchemeFactory implements SchemeFactory {
    public AdGroupTupleScheme getScheme() {
      return new AdGroupTupleScheme();
    }
  }

  private static class AdGroupTupleScheme extends TupleScheme<AdGroup> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, AdGroup struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetGroup_id()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetUid()) {
        optionals.set(2);
      }
      if (struct.isSetVersion()) {
        optionals.set(3);
      }
      if (struct.isSetPlan_id()) {
        optionals.set(4);
      }
      if (struct.isSetStart_date()) {
        optionals.set(5);
      }
      if (struct.isSetEnd_date()) {
        optionals.set(6);
      }
      if (struct.isSetFreq()) {
        optionals.set(7);
      }
      if (struct.isSetIs_first_page()) {
        optionals.set(8);
      }
      if (struct.isSetInclude_host()) {
        optionals.set(9);
      }
      if (struct.isSetExclude_host()) {
        optionals.set(10);
      }
      if (struct.isSetArea_value()) {
        optionals.set(11);
      }
      if (struct.isSetArea_lable()) {
        optionals.set(12);
      }
      if (struct.isSetEnabled()) {
        optionals.set(13);
      }
      if (struct.isSetCtime()) {
        optionals.set(14);
      }
      if (struct.isSetMtime()) {
        optionals.set(15);
      }
      if (struct.isSetMedia_type()) {
        optionals.set(16);
      }
      if (struct.isSetBid_price()) {
        optionals.set(17);
      }
      if (struct.isSetFlow_src()) {
        optionals.set(18);
      }
      if (struct.isSetColum1()) {
        optionals.set(19);
      }
      if (struct.isSetColum2()) {
        optionals.set(20);
      }
      if (struct.isSetMedia_name()) {
        optionals.set(21);
      }
      if (struct.isSetPolicys()) {
        optionals.set(22);
      }
      if (struct.isSetHosts()) {
        optionals.set(23);
      }
      if (struct.isSetTime_interval()) {
        optionals.set(24);
      }
      if (struct.isSetDay_num()) {
        optionals.set(25);
      }
      if (struct.isSetShow_num()) {
        optionals.set(26);
      }
      oprot.writeBitSet(optionals, 27);
      if (struct.isSetGroup_id()) {
        oprot.writeI32(struct.group_id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetUid()) {
        oprot.writeI32(struct.uid);
      }
      if (struct.isSetVersion()) {
        oprot.writeI32(struct.version);
      }
      if (struct.isSetPlan_id()) {
        oprot.writeI32(struct.plan_id);
      }
      if (struct.isSetStart_date()) {
        oprot.writeI32(struct.start_date);
      }
      if (struct.isSetEnd_date()) {
        oprot.writeI32(struct.end_date);
      }
      if (struct.isSetFreq()) {
        oprot.writeI32(struct.freq);
      }
      if (struct.isSetIs_first_page()) {
        oprot.writeI32(struct.is_first_page);
      }
      if (struct.isSetInclude_host()) {
        oprot.writeString(struct.include_host);
      }
      if (struct.isSetExclude_host()) {
        oprot.writeString(struct.exclude_host);
      }
      if (struct.isSetArea_value()) {
        oprot.writeString(struct.area_value);
      }
      if (struct.isSetArea_lable()) {
        oprot.writeString(struct.area_lable);
      }
      if (struct.isSetEnabled()) {
        oprot.writeI32(struct.enabled.getValue());
      }
      if (struct.isSetCtime()) {
        oprot.writeI32(struct.ctime);
      }
      if (struct.isSetMtime()) {
        oprot.writeI32(struct.mtime);
      }
      if (struct.isSetMedia_type()) {
        oprot.writeI32(struct.media_type.getValue());
      }
      if (struct.isSetBid_price()) {
        oprot.writeDouble(struct.bid_price);
      }
      if (struct.isSetFlow_src()) {
        oprot.writeI32(struct.flow_src.getValue());
      }
      if (struct.isSetColum1()) {
        oprot.writeI32(struct.colum1);
      }
      if (struct.isSetColum2()) {
        oprot.writeString(struct.colum2);
      }
      if (struct.isSetMedia_name()) {
        oprot.writeString(struct.media_name);
      }
      if (struct.isSetPolicys()) {
        {
          oprot.writeI32(struct.policys.size());
          for (AdGroupPolicy _iter8 : struct.policys)
          {
            _iter8.write(oprot);
          }
        }
      }
      if (struct.isSetHosts()) {
        {
          oprot.writeI32(struct.hosts.size());
          for (AdGroupHost _iter9 : struct.hosts)
          {
            _iter9.write(oprot);
          }
        }
      }
      if (struct.isSetTime_interval()) {
        oprot.writeI32(struct.time_interval);
      }
      if (struct.isSetDay_num()) {
        oprot.writeI32(struct.day_num);
      }
      if (struct.isSetShow_num()) {
        oprot.writeI32(struct.show_num);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, AdGroup struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(27);
      if (incoming.get(0)) {
        struct.group_id = iprot.readI32();
        struct.setGroup_idIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.uid = iprot.readI32();
        struct.setUidIsSet(true);
      }
      if (incoming.get(3)) {
        struct.version = iprot.readI32();
        struct.setVersionIsSet(true);
      }
      if (incoming.get(4)) {
        struct.plan_id = iprot.readI32();
        struct.setPlan_idIsSet(true);
      }
      if (incoming.get(5)) {
        struct.start_date = iprot.readI32();
        struct.setStart_dateIsSet(true);
      }
      if (incoming.get(6)) {
        struct.end_date = iprot.readI32();
        struct.setEnd_dateIsSet(true);
      }
      if (incoming.get(7)) {
        struct.freq = iprot.readI32();
        struct.setFreqIsSet(true);
      }
      if (incoming.get(8)) {
        struct.is_first_page = iprot.readI32();
        struct.setIs_first_pageIsSet(true);
      }
      if (incoming.get(9)) {
        struct.include_host = iprot.readString();
        struct.setInclude_hostIsSet(true);
      }
      if (incoming.get(10)) {
        struct.exclude_host = iprot.readString();
        struct.setExclude_hostIsSet(true);
      }
      if (incoming.get(11)) {
        struct.area_value = iprot.readString();
        struct.setArea_valueIsSet(true);
      }
      if (incoming.get(12)) {
        struct.area_lable = iprot.readString();
        struct.setArea_lableIsSet(true);
      }
      if (incoming.get(13)) {
        struct.enabled = com.adp.java.PlanStatus.findByValue(iprot.readI32());
        struct.setEnabledIsSet(true);
      }
      if (incoming.get(14)) {
        struct.ctime = iprot.readI32();
        struct.setCtimeIsSet(true);
      }
      if (incoming.get(15)) {
        struct.mtime = iprot.readI32();
        struct.setMtimeIsSet(true);
      }
      if (incoming.get(16)) {
        struct.media_type = com.adp.java.NetWorkType.findByValue(iprot.readI32());
        struct.setMedia_typeIsSet(true);
      }
      if (incoming.get(17)) {
        struct.bid_price = iprot.readDouble();
        struct.setBid_priceIsSet(true);
      }
      if (incoming.get(18)) {
        struct.flow_src = com.adp.java.FlowSrc.findByValue(iprot.readI32());
        struct.setFlow_srcIsSet(true);
      }
      if (incoming.get(19)) {
        struct.colum1 = iprot.readI32();
        struct.setColum1IsSet(true);
      }
      if (incoming.get(20)) {
        struct.colum2 = iprot.readString();
        struct.setColum2IsSet(true);
      }
      if (incoming.get(21)) {
        struct.media_name = iprot.readString();
        struct.setMedia_nameIsSet(true);
      }
      if (incoming.get(22)) {
        {
          org.apache.thrift.protocol.TList _list10 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.policys = new ArrayList<AdGroupPolicy>(_list10.size);
          for (int _i11 = 0; _i11 < _list10.size; ++_i11)
          {
            AdGroupPolicy _elem12; // required
            _elem12 = new AdGroupPolicy();
            _elem12.read(iprot);
            struct.policys.add(_elem12);
          }
        }
        struct.setPolicysIsSet(true);
      }
      if (incoming.get(23)) {
        {
          org.apache.thrift.protocol.TList _list13 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, iprot.readI32());
          struct.hosts = new ArrayList<AdGroupHost>(_list13.size);
          for (int _i14 = 0; _i14 < _list13.size; ++_i14)
          {
            AdGroupHost _elem15; // required
            _elem15 = new AdGroupHost();
            _elem15.read(iprot);
            struct.hosts.add(_elem15);
          }
        }
        struct.setHostsIsSet(true);
      }
      if (incoming.get(24)) {
        struct.time_interval = iprot.readI32();
        struct.setTime_intervalIsSet(true);
      }
      if (incoming.get(25)) {
        struct.day_num = iprot.readI32();
        struct.setDay_numIsSet(true);
      }
      if (incoming.get(26)) {
        struct.show_num = iprot.readI32();
        struct.setShow_numIsSet(true);
      }
    }
  }

}

