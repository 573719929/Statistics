#
# Autogenerated by Thrift Compiler (0.8.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

from thrift.Thrift import TType, TMessageType, TException
import Shared.ttypes


from thrift.transport import TTransport
from thrift.protocol import TBinaryProtocol, TProtocol
try:
  from thrift.protocol import fastbinary
except:
  fastbinary = None



class AdInfo:
  """
  Attributes:
   - adid
   - adname
   - uid
   - group_id
   - plan_id
   - has_text
   - width
   - height
   - show_js
   - click_js
   - approvaldate
   - play_status
   - media_type
   - ctime
   - mtime
   - ad_price
   - view_type: 广告形式 view Type
  0x01 嵌入式
  0x02 浮窗
  *0x03 嵌入式 && 浮窗
  0x04 背投
   - colum1
   - colum2
   - media_name
   - version
   - time_interval
   - day_num
   - show_num
  """

  thrift_spec = (
    None, # 0
    (1, TType.I32, 'adid', None, None, ), # 1
    (2, TType.STRING, 'adname', None, None, ), # 2
    (3, TType.I32, 'uid', None, None, ), # 3
    (4, TType.I32, 'group_id', None, None, ), # 4
    (5, TType.I32, 'plan_id', None, None, ), # 5
    (6, TType.I32, 'has_text', None, None, ), # 6
    (7, TType.I32, 'width', None, None, ), # 7
    (8, TType.I32, 'height', None, None, ), # 8
    (9, TType.STRING, 'show_js', None, None, ), # 9
    (10, TType.STRING, 'click_js', None, None, ), # 10
    (11, TType.I32, 'approvaldate', None, None, ), # 11
    (12, TType.I32, 'play_status', None,     1, ), # 12
    (13, TType.I32, 'media_type', None,     1, ), # 13
    (14, TType.I32, 'ctime', None, None, ), # 14
    (15, TType.I32, 'mtime', None, None, ), # 15
    (16, TType.DOUBLE, 'ad_price', None, None, ), # 16
    (17, TType.I32, 'view_type', None, None, ), # 17
    (18, TType.I32, 'colum1', None, None, ), # 18
    (19, TType.STRING, 'colum2', None, None, ), # 19
    (20, TType.STRING, 'media_name', None, None, ), # 20
    (21, TType.I32, 'version', None, None, ), # 21
    (22, TType.I32, 'time_interval', None, None, ), # 22
    (23, TType.I32, 'day_num', None, None, ), # 23
    (24, TType.I32, 'show_num', None, None, ), # 24
  )

  def __init__(self, adid=None, adname=None, uid=None, group_id=None, plan_id=None, has_text=None, width=None, height=None, show_js=None, click_js=None, approvaldate=None, play_status=thrift_spec[12][4], media_type=thrift_spec[13][4], ctime=None, mtime=None, ad_price=None, view_type=None, colum1=None, colum2=None, media_name=None, version=None, time_interval=None, day_num=None, show_num=None,):
    self.adid = adid
    self.adname = adname
    self.uid = uid
    self.group_id = group_id
    self.plan_id = plan_id
    self.has_text = has_text
    self.width = width
    self.height = height
    self.show_js = show_js
    self.click_js = click_js
    self.approvaldate = approvaldate
    self.play_status = play_status
    self.media_type = media_type
    self.ctime = ctime
    self.mtime = mtime
    self.ad_price = ad_price
    self.view_type = view_type
    self.colum1 = colum1
    self.colum2 = colum2
    self.media_name = media_name
    self.version = version
    self.time_interval = time_interval
    self.day_num = day_num
    self.show_num = show_num

  def read(self, iprot):
    if iprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and isinstance(iprot.trans, TTransport.CReadableTransport) and self.thrift_spec is not None and fastbinary is not None:
      fastbinary.decode_binary(self, iprot.trans, (self.__class__, self.thrift_spec))
      return
    iprot.readStructBegin()
    while True:
      (fname, ftype, fid) = iprot.readFieldBegin()
      if ftype == TType.STOP:
        break
      if fid == 1:
        if ftype == TType.I32:
          self.adid = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 2:
        if ftype == TType.STRING:
          self.adname = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 3:
        if ftype == TType.I32:
          self.uid = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 4:
        if ftype == TType.I32:
          self.group_id = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 5:
        if ftype == TType.I32:
          self.plan_id = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 6:
        if ftype == TType.I32:
          self.has_text = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 7:
        if ftype == TType.I32:
          self.width = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 8:
        if ftype == TType.I32:
          self.height = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 9:
        if ftype == TType.STRING:
          self.show_js = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 10:
        if ftype == TType.STRING:
          self.click_js = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 11:
        if ftype == TType.I32:
          self.approvaldate = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 12:
        if ftype == TType.I32:
          self.play_status = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 13:
        if ftype == TType.I32:
          self.media_type = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 14:
        if ftype == TType.I32:
          self.ctime = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 15:
        if ftype == TType.I32:
          self.mtime = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 16:
        if ftype == TType.DOUBLE:
          self.ad_price = iprot.readDouble();
        else:
          iprot.skip(ftype)
      elif fid == 17:
        if ftype == TType.I32:
          self.view_type = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 18:
        if ftype == TType.I32:
          self.colum1 = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 19:
        if ftype == TType.STRING:
          self.colum2 = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 20:
        if ftype == TType.STRING:
          self.media_name = iprot.readString();
        else:
          iprot.skip(ftype)
      elif fid == 21:
        if ftype == TType.I32:
          self.version = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 22:
        if ftype == TType.I32:
          self.time_interval = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 23:
        if ftype == TType.I32:
          self.day_num = iprot.readI32();
        else:
          iprot.skip(ftype)
      elif fid == 24:
        if ftype == TType.I32:
          self.show_num = iprot.readI32();
        else:
          iprot.skip(ftype)
      else:
        iprot.skip(ftype)
      iprot.readFieldEnd()
    iprot.readStructEnd()

  def write(self, oprot):
    if oprot.__class__ == TBinaryProtocol.TBinaryProtocolAccelerated and self.thrift_spec is not None and fastbinary is not None:
      oprot.trans.write(fastbinary.encode_binary(self, (self.__class__, self.thrift_spec)))
      return
    oprot.writeStructBegin('AdInfo')
    if self.adid is not None:
      oprot.writeFieldBegin('adid', TType.I32, 1)
      oprot.writeI32(self.adid)
      oprot.writeFieldEnd()
    if self.adname is not None:
      oprot.writeFieldBegin('adname', TType.STRING, 2)
      oprot.writeString(self.adname)
      oprot.writeFieldEnd()
    if self.uid is not None:
      oprot.writeFieldBegin('uid', TType.I32, 3)
      oprot.writeI32(self.uid)
      oprot.writeFieldEnd()
    if self.group_id is not None:
      oprot.writeFieldBegin('group_id', TType.I32, 4)
      oprot.writeI32(self.group_id)
      oprot.writeFieldEnd()
    if self.plan_id is not None:
      oprot.writeFieldBegin('plan_id', TType.I32, 5)
      oprot.writeI32(self.plan_id)
      oprot.writeFieldEnd()
    if self.has_text is not None:
      oprot.writeFieldBegin('has_text', TType.I32, 6)
      oprot.writeI32(self.has_text)
      oprot.writeFieldEnd()
    if self.width is not None:
      oprot.writeFieldBegin('width', TType.I32, 7)
      oprot.writeI32(self.width)
      oprot.writeFieldEnd()
    if self.height is not None:
      oprot.writeFieldBegin('height', TType.I32, 8)
      oprot.writeI32(self.height)
      oprot.writeFieldEnd()
    if self.show_js is not None:
      oprot.writeFieldBegin('show_js', TType.STRING, 9)
      oprot.writeString(self.show_js)
      oprot.writeFieldEnd()
    if self.click_js is not None:
      oprot.writeFieldBegin('click_js', TType.STRING, 10)
      oprot.writeString(self.click_js)
      oprot.writeFieldEnd()
    if self.approvaldate is not None:
      oprot.writeFieldBegin('approvaldate', TType.I32, 11)
      oprot.writeI32(self.approvaldate)
      oprot.writeFieldEnd()
    if self.play_status is not None:
      oprot.writeFieldBegin('play_status', TType.I32, 12)
      oprot.writeI32(self.play_status)
      oprot.writeFieldEnd()
    if self.media_type is not None:
      oprot.writeFieldBegin('media_type', TType.I32, 13)
      oprot.writeI32(self.media_type)
      oprot.writeFieldEnd()
    if self.ctime is not None:
      oprot.writeFieldBegin('ctime', TType.I32, 14)
      oprot.writeI32(self.ctime)
      oprot.writeFieldEnd()
    if self.mtime is not None:
      oprot.writeFieldBegin('mtime', TType.I32, 15)
      oprot.writeI32(self.mtime)
      oprot.writeFieldEnd()
    if self.ad_price is not None:
      oprot.writeFieldBegin('ad_price', TType.DOUBLE, 16)
      oprot.writeDouble(self.ad_price)
      oprot.writeFieldEnd()
    if self.view_type is not None:
      oprot.writeFieldBegin('view_type', TType.I32, 17)
      oprot.writeI32(self.view_type)
      oprot.writeFieldEnd()
    if self.colum1 is not None:
      oprot.writeFieldBegin('colum1', TType.I32, 18)
      oprot.writeI32(self.colum1)
      oprot.writeFieldEnd()
    if self.colum2 is not None:
      oprot.writeFieldBegin('colum2', TType.STRING, 19)
      oprot.writeString(self.colum2)
      oprot.writeFieldEnd()
    if self.media_name is not None:
      oprot.writeFieldBegin('media_name', TType.STRING, 20)
      oprot.writeString(self.media_name)
      oprot.writeFieldEnd()
    if self.version is not None:
      oprot.writeFieldBegin('version', TType.I32, 21)
      oprot.writeI32(self.version)
      oprot.writeFieldEnd()
    if self.time_interval is not None:
      oprot.writeFieldBegin('time_interval', TType.I32, 22)
      oprot.writeI32(self.time_interval)
      oprot.writeFieldEnd()
    if self.day_num is not None:
      oprot.writeFieldBegin('day_num', TType.I32, 23)
      oprot.writeI32(self.day_num)
      oprot.writeFieldEnd()
    if self.show_num is not None:
      oprot.writeFieldBegin('show_num', TType.I32, 24)
      oprot.writeI32(self.show_num)
      oprot.writeFieldEnd()
    oprot.writeFieldStop()
    oprot.writeStructEnd()

  def validate(self):
    return


  def __repr__(self):
    L = ['%s=%r' % (key, value)
      for key, value in self.__dict__.iteritems()]
    return '%s(%s)' % (self.__class__.__name__, ', '.join(L))

  def __eq__(self, other):
    return isinstance(other, self.__class__) and self.__dict__ == other.__dict__

  def __ne__(self, other):
    return not (self == other)
