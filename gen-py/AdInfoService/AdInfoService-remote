#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.8.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

import AdInfoService
from ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  AdInfo getAdInfoById(i32 adid)'
  print '   getAllAdByStatus(i32 play_status)'
  print '  i32 updateAdInfo(AdInfo adInfo)'
  print '   getAdInfoByType(i32 adType)'
  print '  i32 delAdInfoById(i32 adid)'
  print '  i32 delAdInfoByIds( adids)'
  print '  i32 addAdInfo(AdInfo adInfo)'
  print '  i32 updateStatusByAid(i32 adid, PlanStatus status)'
  print '  i32 updateStatusByGid(i32 group_id, PlanStatus status)'
  print '  i32 updateStatusByPid(i32 plan_id, PlanStatus status)'
  print '  i32 updateStatusByUid(i32 uid, PlanStatus status)'
  print '  i32 delAdInfoByGid(i32 group_id)'
  print '  i32 delAdInfoByUid(i32 uid)'
  print '   findAdInfoByUid(i32 uid)'
  print '   findAdInfoByGid(i32 group_id)'
  print '   findAdInfoByPid(i32 plan_id)'
  print '  i32 getNumOfAdInfoPagesByGroupId(i32 group_id, i32 page_size)'
  print '   getAdInfosByPageIndex(i32 page_index, i32 page_size, i32 group_id)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':')
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  if url[4]:
    uri += '?%s' % url[4]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = AdInfoService.Client(protocol)
transport.open()

if cmd == 'getAdInfoById':
  if len(args) != 1:
    print 'getAdInfoById requires 1 args'
    sys.exit(1)
  pp.pprint(client.getAdInfoById(eval(args[0]),))

elif cmd == 'getAllAdByStatus':
  if len(args) != 1:
    print 'getAllAdByStatus requires 1 args'
    sys.exit(1)
  pp.pprint(client.getAllAdByStatus(eval(args[0]),))

elif cmd == 'updateAdInfo':
  if len(args) != 1:
    print 'updateAdInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.updateAdInfo(eval(args[0]),))

elif cmd == 'getAdInfoByType':
  if len(args) != 1:
    print 'getAdInfoByType requires 1 args'
    sys.exit(1)
  pp.pprint(client.getAdInfoByType(eval(args[0]),))

elif cmd == 'delAdInfoById':
  if len(args) != 1:
    print 'delAdInfoById requires 1 args'
    sys.exit(1)
  pp.pprint(client.delAdInfoById(eval(args[0]),))

elif cmd == 'delAdInfoByIds':
  if len(args) != 1:
    print 'delAdInfoByIds requires 1 args'
    sys.exit(1)
  pp.pprint(client.delAdInfoByIds(eval(args[0]),))

elif cmd == 'addAdInfo':
  if len(args) != 1:
    print 'addAdInfo requires 1 args'
    sys.exit(1)
  pp.pprint(client.addAdInfo(eval(args[0]),))

elif cmd == 'updateStatusByAid':
  if len(args) != 2:
    print 'updateStatusByAid requires 2 args'
    sys.exit(1)
  pp.pprint(client.updateStatusByAid(eval(args[0]),eval(args[1]),))

elif cmd == 'updateStatusByGid':
  if len(args) != 2:
    print 'updateStatusByGid requires 2 args'
    sys.exit(1)
  pp.pprint(client.updateStatusByGid(eval(args[0]),eval(args[1]),))

elif cmd == 'updateStatusByPid':
  if len(args) != 2:
    print 'updateStatusByPid requires 2 args'
    sys.exit(1)
  pp.pprint(client.updateStatusByPid(eval(args[0]),eval(args[1]),))

elif cmd == 'updateStatusByUid':
  if len(args) != 2:
    print 'updateStatusByUid requires 2 args'
    sys.exit(1)
  pp.pprint(client.updateStatusByUid(eval(args[0]),eval(args[1]),))

elif cmd == 'delAdInfoByGid':
  if len(args) != 1:
    print 'delAdInfoByGid requires 1 args'
    sys.exit(1)
  pp.pprint(client.delAdInfoByGid(eval(args[0]),))

elif cmd == 'delAdInfoByUid':
  if len(args) != 1:
    print 'delAdInfoByUid requires 1 args'
    sys.exit(1)
  pp.pprint(client.delAdInfoByUid(eval(args[0]),))

elif cmd == 'findAdInfoByUid':
  if len(args) != 1:
    print 'findAdInfoByUid requires 1 args'
    sys.exit(1)
  pp.pprint(client.findAdInfoByUid(eval(args[0]),))

elif cmd == 'findAdInfoByGid':
  if len(args) != 1:
    print 'findAdInfoByGid requires 1 args'
    sys.exit(1)
  pp.pprint(client.findAdInfoByGid(eval(args[0]),))

elif cmd == 'findAdInfoByPid':
  if len(args) != 1:
    print 'findAdInfoByPid requires 1 args'
    sys.exit(1)
  pp.pprint(client.findAdInfoByPid(eval(args[0]),))

elif cmd == 'getNumOfAdInfoPagesByGroupId':
  if len(args) != 2:
    print 'getNumOfAdInfoPagesByGroupId requires 2 args'
    sys.exit(1)
  pp.pprint(client.getNumOfAdInfoPagesByGroupId(eval(args[0]),eval(args[1]),))

elif cmd == 'getAdInfosByPageIndex':
  if len(args) != 3:
    print 'getAdInfosByPageIndex requires 3 args'
    sys.exit(1)
  pp.pprint(client.getAdInfosByPageIndex(eval(args[0]),eval(args[1]),eval(args[2]),))

else:
  print 'Unrecognized method %s' % cmd
  sys.exit(1)

transport.close()
